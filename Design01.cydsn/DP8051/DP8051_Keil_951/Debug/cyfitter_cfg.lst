C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEB
                    -UG) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_c
                    -fg.obj)

line level    source

   1          
   2          /*******************************************************************************
   3          * File Name: cyfitter_cfg.c
   4          * 
   5          * PSoC Creator  4.1 Update 1
   6          *
   7          * Description:
   8          * This file contains device initialization code.
   9          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10          * This file is automatically generated by PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright (c) 2007-2017 Cypress Semiconductor.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include <string.h>
  20          #include "cytypes.h"
  21          #include "cydevice_trm.h"
  22          #include "cyfitter.h"
  23          #include "CyLib.h"
  24          #include "cyfitter_cfg.h"
  25          #include "cyapicallbacks.h"
  26          
  27          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  28          
  29          
  30          #if defined(__C51__) || defined(__CX51__)
  31                  #define CYPACKED
  32                  #define CYPACKED_ATTR
  33                  #define CYALIGNED
  34                  
  35              #define CY_CFG_UNUSED
  36                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  37          
  38          
  39          
  40                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  41                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  42                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  43          #else
                      #error Unsupported toolchain
              #endif
  46          
  47          
  48          
  49          
  50          /* Clock startup error codes                                                   */
  51          #define CYCLOCKSTART_NO_ERROR    0u
  52          #define CYCLOCKSTART_XTAL_ERROR  1u
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 2   

  53          #define CYCLOCKSTART_32KHZ_ERROR 2u
  54          #define CYCLOCKSTART_PLL_ERROR   3u
  55          #define CYCLOCKSTART_FLL_ERROR   4u
  56          
  57          
  58          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  59          /*******************************************************************************
  60          * Function Name: CyClockStartupError
  61          ********************************************************************************
  62          * Summary:
  63          *  If an error is encountered during clock configuration (crystal startup error,
  64          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  65          *  the customer, this function will stop in an infinite loop.
  66          *
  67          * Parameters:
  68          *   void
  69          *
  70          * Return:
  71          *   void
  72          *
  73          *******************************************************************************/
  74          CY_CFG_UNUSED
  75          static void CyClockStartupError(uint8 errorCode);
  76          CY_CFG_UNUSED
  77          static void CyClockStartupError(uint8 errorCode)
  78          {
  79   1          /* To remove the compiler warning if errorCode not used. */
  80   1      #if defined(CY_PSOC3) && (CY_PSOC3)
  81   1          errorCode = errorCode;
  82   1      #else
                  (void)errorCode;
              #endif /* CY_PSOC3 */
  85   1      
  86   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  87   1          /* we will end up here to allow the customer to implement something to  */
  88   1          /* deal with the clock condition.                                       */
  89   1      
  90   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                  CY_CFG_Clock_Startup_ErrorCallback();
              #else
  93   1          /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  94   1          /* `#START CyClockStartupError` */
  95   1      
  96   1      
  97   1      
  98   1          /* `#END` */
  99   1      
 100   1          while(1) {}
 101   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 102   1      }
 103          #endif
 104          
 105          #define cfg_byte_table ((const void CYFAR *)0x080000u)
 106          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 107          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080028u)
 108          
 109          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 110          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x00080030u)
 111          
 112          /* IOPINS0_3 Address: CYREG_PRT3_DM0 Size (bytes): 8 */
 113          #define BS_IOPINS0_3_VAL ((const uint8 CYFAR *)0x00080038u)
 114          
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 3   

 115          
 116          /*******************************************************************************
 117          * Function Name: ClockSetup
 118          ********************************************************************************
 119          *
 120          * Summary:
 121          *  Performs the initialization of all of the clocks in the device based on the
 122          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 123          *  clocks and setting the necessary dividers to produce the desired frequency. 
 124          *
 125          * Parameters:
 126          *  void
 127          *
 128          * Return:
 129          *  void
 130          *
 131          *******************************************************************************/
 132          static void ClockSetup(void);
 133          static void ClockSetup(void)
 134          {
 135   1              uint32 timeout;
 136   1              uint8 pllLock;
 137   1      
 138   1      
 139   1              /* Configure ILO based on settings from Clock DWR */
 140   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 142   1      
 143   1              /* Configure IMO based on settings from Clock DWR */
 144   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 145   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 146   1      
 147   1              /* Configure PLL based on settings from Clock DWR */
 148   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 149   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 150   1              /* Wait up to 250us for the PLL to lock */
 151   1              pllLock = 0u;
 152   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 153   1              { 
 154   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 155   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 156   2              }
 157   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 158   1              if (timeout == 0u)
 159   1              {
 160   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 161   2              }
 162   1      
 163   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 164   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 168   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 169   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 170   1      }
 171          
 172          
 173          /* Analog API Functions */
 174          
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 4   

 175          
 176          /*******************************************************************************
 177          * Function Name: AnalogSetDefault
 178          ********************************************************************************
 179          *
 180          * Summary:
 181          *  Sets up the analog portions of the chip to default values based on chip
 182          *  configuration options from the project.
 183          *
 184          * Parameters:
 185          *  void
 186          *
 187          * Return:
 188          *  void
 189          *
 190          *******************************************************************************/
 191          static void AnalogSetDefault(void);
 192          static void AnalogSetDefault(void)
 193          {
 194   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 195   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 196   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 197   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 198   1      }
 199          
 200          
 201          /*******************************************************************************
 202          * Function Name: SetAnalogRoutingPumps
 203          ********************************************************************************
 204          *
 205          * Summary:
 206          * Enables or disables the analog pumps feeding analog routing switches.
 207          * Intended to be called at startup, based on the Vdda system configuration;
 208          * may be called during operation when the user informs us that the Vdda voltage
 209          * crossed the pump threshold.
 210          *
 211          * Parameters:
 212          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 213          *
 214          * Return:
 215          *  void
 216          *
 217          *******************************************************************************/
 218          void SetAnalogRoutingPumps(uint8 enabled)
 219          {
 220   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 221   1              if (enabled != 0u)
 222   1              {
 223   2                      regValue |= 0x00u;
 224   2              }
 225   1              else
 226   1              {
 227   2                      regValue &= (uint8)~0x00u;
 228   2              }
 229   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 230   1      }
 231          
 232          
 233          
 234          
 235          /*******************************************************************************
 236          * Function Name: cyfitter_cfg
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 5   

 237          ********************************************************************************
 238          * Summary:
 239          *  This function is called by the start-up code for the selected device. It
 240          *  performs all of the necessary device configuration based on the design
 241          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 242          *  as Clocks and Pins as well as any component configuration that is necessary.
 243          *
 244          * Parameters:
 245          *   void
 246          *
 247          * Return:
 248          *   void
 249          *
 250          *******************************************************************************/
 251          
 252          void cyfitter_cfg(void)
 253          {
 254   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 255   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 256   1      
 257   1              {
 258   2      
 259   2                      CYPACKED typedef struct {
 260   2                              void CYFAR *address;
 261   2                              uint16 size;
 262   2                      } CYPACKED_ATTR cfg_memset_t;
 263   2      
 264   2                      static const cfg_memset_t CYCODE cfg_memset_list[] = {
 265   2                              /* address, size */
 266   2                              {(void CYFAR *)(CYREG_PRT2_DR), 16u},
 267   2                              {(void CYFAR *)(CYREG_PRT4_DR), 48u},
 268   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 269   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 270   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 271   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 272   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 273   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 274   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 275   2                      };
 276   2      
 277   2                      uint8 CYDATA i;
 278   2      
 279   2                      /* Zero out critical memory blocks before beginning configuration */
 280   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 281   2                      {
 282   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 283   3                              CYMEMZERO(ms->address, ms->size);
 284   3                      }
 285   2      
 286   2                      cfg_write_bytes(cfg_byte_table);
 287   2      
 288   2                      /* Enable digital routing */
 289   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 290   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 291   2              }
 292   1      
 293   1      
 294   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 6   

 295   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 296   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 297   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT3_DM0), (const void CYFAR *)(BS_IOPINS0_3_VAL), 8u);
 298   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 299   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 300   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 301   1              {
 302   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 303   2              }
 304   1      
 305   1      
 306   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 307   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 308   1              /* Setup clocks based on selections from Clock DWR */
 309   1              ClockSetup();
 310   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 311   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 312   1      
 313   1              /* Perform basic analog initialization to defaults */
 314   1              AnalogSetDefault();
 315   1      
 316   1              /* Configure alternate active mode */
 317   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 318   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 319   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 77
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 81
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 100
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 140
0000 904300            MOV     DPTR,#04300H
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0006 904000            MOV     DPTR,#04000H
0009 7408              MOV     A,#08H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
000C 904200            MOV     DPTR,#04200H
000F 7403              MOV     A,#03H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0012 7B0C              MOV     R3,#0CH
0014 7A01              MOV     R2,#01H
0016 7908              MOV     R1,#08H
0018 120000      E     LCALL   _cyread8
001B 9046A1            MOV     DPTR,#046A1H
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0020 7B00              MOV     R3,#00H
0022 7A42              MOV     R2,#042H
0024 7922              MOV     R1,#022H
0026 7D08              MOV     R5,#08H
0028 7C00              MOV     R4,#00H
002A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 149
002D 7B00              MOV     R3,#00H
002F 7A42              MOV     R2,#042H
0031 7920              MOV     R1,#020H
0033 7D51              MOV     R5,#051H
0035 7C12              MOV     R4,#012H
0037 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 151
003A 900000      R     MOV     DPTR,#pllLock
003D E4                CLR     A
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 8   

003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
003F 7F19              MOV     R7,#019H
0041 7E00              MOV     R6,#00H
0043 7D00              MOV     R5,#00H
0045 7C00              MOV     R4,#00H
0047 900000      R     MOV     DPTR,#timeout
004A 120000      E     LCALL   ?C?LSTXDATA
004D         ?C0004:
004D 900000      R     MOV     DPTR,#timeout
0050 120000      E     LCALL   ?C?LLDXDATA
0053 D3                SETB    C
0054 EF                MOV     A,R7
0055 9400              SUBB    A,#00H
0057 EE                MOV     A,R6
0058 9400              SUBB    A,#00H
005A 404E              JC      ?C0005
005C 900000      R     MOV     DPTR,#pllLock
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 6403              XRL     A,#03H
0064 6044              JZ      ?C0005
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
0066 904225            MOV     DPTR,#04225H
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B EF                MOV     A,R7
006C 5401              ANL     A,#01H
006E FF                MOV     R7,A
006F 7E00              MOV     R6,#00H
0071 900000      R     MOV     DPTR,#pllLock
0074 E0                MOVX    A,@DPTR
0075 FE                MOV     R6,A
0076 EE                MOV     A,R6
0077 25E0              ADD     A,ACC
0079 FE                MOV     R6,A
007A EE                MOV     A,R6
007B 4F                ORL     A,R7
007C FF                MOV     R7,A
007D EF                MOV     A,R7
007E 5403              ANL     A,#03H
0080 FF                MOV     R7,A
0081 900000      R     MOV     DPTR,#pllLock
0084 EF                MOV     A,R7
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
0086 7FE0              MOV     R7,#0E0H
0088 7E01              MOV     R6,#01H
008A 7D00              MOV     R5,#00H
008C 7C00              MOV     R4,#00H
008E 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 156
0091 900000      R     MOV     DPTR,#timeout
0094 120000      E     LCALL   ?C?LLDXDATA
0097 7BFF              MOV     R3,#0FFH
0099 7AFF              MOV     R2,#0FFH
009B 79FF              MOV     R1,#0FFH
009D 78FF              MOV     R0,#0FFH
009F 120000      E     LCALL   ?C?LADD
00A2 900000      R     MOV     DPTR,#timeout
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 9   

00A5 120000      E     LCALL   ?C?LSTXDATA
00A8 80A3              SJMP    ?C0004
00AA         ?C0005:
                                           ; SOURCE LINE # 158
00AA 900000      R     MOV     DPTR,#timeout
00AD 120000      E     LCALL   ?C?LLDXDATA
00B0 EF                MOV     A,R7
00B1 4E                ORL     A,R6
00B2 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
00B4 7F03              MOV     R7,#03H
00B6 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 161
00B9         ?C0007:
                                           ; SOURCE LINE # 164
00B9 7B00              MOV     R3,#00H
00BB 7A40              MOV     R2,#040H
00BD 7904              MOV     R1,#04H
00BF 7D00              MOV     R5,#00H
00C1 7C01              MOV     R4,#01H
00C3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 165
00C6 904004            MOV     DPTR,#04004H
00C9 7407              MOV     A,#07H
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
00CC 904006            MOV     DPTR,#04006H
00CF E4                CLR     A
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 167
00D1 904008            MOV     DPTR,#04008H
00D4 7448              MOV     A,#048H
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
00D7 904004            MOV     DPTR,#04004H
00DA E4                CLR     A
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
00DC 904001            MOV     DPTR,#04001H
00DF 7402              MOV     A,#02H
00E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
00E2 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 10  

0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 218
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 223
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 11  

0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
0035         ?C0011:
                                           ; SOURCE LINE # 229
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 255
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 280
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9409              SUBB    A,#09H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 283
0038 AE00        R     MOV     R6,ms
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 12  

003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 284
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 286
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 289
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 290
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 295
008F 7B08              MOV     R3,#08H
0091 7A00              MOV     R2,#00H
0093 7928              MOV     R1,#028H
0095 C003              PUSH    AR3
0097 C002              PUSH    AR2
0099 C001              PUSH    AR1
009B 7B00              MOV     R3,#00H
009D 7A51              MOV     R2,#051H
009F 7902              MOV     R1,#02H
00A1 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00A4 120000      E     LCALL   ?C?PSTXDATA
00A7 D001              POP     AR1
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 13  

00A9 D002              POP     AR2
00AB D003              POP     AR3
00AD 7F08              MOV     R7,#08H
00AF 7E00              MOV     R6,#00H
00B1 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 296
00B4 7B08              MOV     R3,#08H
00B6 7A00              MOV     R2,#00H
00B8 7930              MOV     R1,#030H
00BA C003              PUSH    AR3
00BC C002              PUSH    AR2
00BE C001              PUSH    AR1
00C0 7B00              MOV     R3,#00H
00C2 7A51              MOV     R2,#051H
00C4 7912              MOV     R1,#012H
00C6 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C9 120000      E     LCALL   ?C?PSTXDATA
00CC D001              POP     AR1
00CE D002              POP     AR2
00D0 D003              POP     AR3
00D2 7F08              MOV     R7,#08H
00D4 7E00              MOV     R6,#00H
00D6 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 297
00D9 7B08              MOV     R3,#08H
00DB 7A00              MOV     R2,#00H
00DD 7938              MOV     R1,#038H
00DF C003              PUSH    AR3
00E1 C002              PUSH    AR2
00E3 C001              PUSH    AR1
00E5 7B00              MOV     R3,#00H
00E7 7A51              MOV     R2,#051H
00E9 7932              MOV     R1,#032H
00EB 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00EE 120000      E     LCALL   ?C?PSTXDATA
00F1 D001              POP     AR1
00F3 D002              POP     AR2
00F5 D003              POP     AR3
00F7 7F08              MOV     R7,#08H
00F9 7E00              MOV     R6,#00H
00FB 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 299
00FE 904322            MOV     DPTR,#04322H
0101 E0                MOVX    A,@DPTR
0102 FF                MOV     R7,A
0103 EF                MOV     A,R7
0104 4408              ORL     A,#08H
0106 FF                MOV     R7,A
0107 904322            MOV     DPTR,#04322H
010A EF                MOV     A,R7
010B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 300
010C 9046EC            MOV     DPTR,#046ECH
010F E0                MOVX    A,@DPTR
0110 FF                MOV     R7,A
0111 EF                MOV     A,R7
0112 C3                CLR     C
0113 9405              SUBB    A,#05H
0115 5006              JNC     ?C0016
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
0117 904689            MOV     DPTR,#04689H
C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 14  

011A 743A              MOV     A,#03AH
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
011D         ?C0016:
                                           ; SOURCE LINE # 307
011D 904800            MOV     DPTR,#04800H
0120 74F1              MOV     A,#0F1H
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0123 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 311
0126 904800            MOV     DPTR,#04800H
0129 74B1              MOV     A,#0B1H
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
012C 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 317
012F 7B00              MOV     R3,#00H
0131 7A43              MOV     R2,#043H
0133 79A0              MOV     R1,#0A0H
0135 C003              PUSH    AR3
0137 C002              PUSH    AR2
0139 C001              PUSH    AR1
013B 7B00              MOV     R3,#00H
013D 7A43              MOV     R2,#043H
013F 79B0              MOV     R1,#0B0H
0141 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0144 120000      E     LCALL   ?C?PSTXDATA
0147 D001              POP     AR1
0149 D002              POP     AR2
014B D003              POP     AR3
014D 7F0E              MOV     R7,#0EH
014F 7E00              MOV     R6,#00H
0151 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 318
0154 9043B0            MOV     DPTR,#043B0H
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 54FD              ANL     A,#0FDH
015C FF                MOV     R7,A
015D EF                MOV     A,R7
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
015F 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    715    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.51   CYFITTER_CFG                                                          09/07/2018 13:20:20 PAGE 15  


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
