ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CommTimeoutISR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CommTimeoutISR_Interrupt,"ax",%progbits
  20              		.align	2
  21              		.global	CommTimeoutISR_Interrupt
  22              		.code	16
  23              		.thumb_func
  24              		.type	CommTimeoutISR_Interrupt, %function
  25              	CommTimeoutISR_Interrupt:
  26              	.LFB35:
  27              		.file 1 "Generated_Source\\PSoC4\\CommTimeoutISR.c"
   1:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CommTimeoutISR.c **** * File Name: CommTimeoutISR.c  
   3:Generated_Source\PSoC4/CommTimeoutISR.c **** * Version 1.70
   4:Generated_Source\PSoC4/CommTimeoutISR.c **** *
   5:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Description:
   6:Generated_Source\PSoC4/CommTimeoutISR.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC4/CommTimeoutISR.c **** *
   8:Generated_Source\PSoC4/CommTimeoutISR.c **** *
   9:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Note:
  10:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  11:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CommTimeoutISR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CommTimeoutISR.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC4/CommTimeoutISR.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC4/CommTimeoutISR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  18:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  19:Generated_Source\PSoC4/CommTimeoutISR.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/CommTimeoutISR.c **** #include <CyLib.h>
  21:Generated_Source\PSoC4/CommTimeoutISR.c **** #include <CommTimeoutISR.h>
  22:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  23:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  24:Generated_Source\PSoC4/CommTimeoutISR.c **** #if !defined(CommTimeoutISR__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  26:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
  27:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************/
  29:Generated_Source\PSoC4/CommTimeoutISR.c **** /* `#START CommTimeoutISR_intc` */
  30:Generated_Source\PSoC4/CommTimeoutISR.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 2


  31:Generated_Source\PSoC4/CommTimeoutISR.c **** #include "BrightnessCommManager.h"
  32:Generated_Source\PSoC4/CommTimeoutISR.c ****     
  33:Generated_Source\PSoC4/CommTimeoutISR.c **** /* `#END` */
  34:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  35:Generated_Source\PSoC4/CommTimeoutISR.c **** extern cyisraddress CyRamVectors[CYINT_IRQ_BASE + CY_NUM_INTERRUPTS];
  36:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  37:Generated_Source\PSoC4/CommTimeoutISR.c **** /* Declared in startup, used to set unused interrupts to. */
  38:Generated_Source\PSoC4/CommTimeoutISR.c **** CY_ISR_PROTO(IntDefaultHandler);
  39:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  40:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  41:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
  42:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_Start
  43:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
  44:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  45:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
  46:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  47:Generated_Source\PSoC4/CommTimeoutISR.c **** *  sets the default interrupt vector, sets the priority from the value in the
  48:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  49:Generated_Source\PSoC4/CommTimeoutISR.c **** *  interrupt controller.
  50:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  51:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:  
  52:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
  53:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  54:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
  55:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
  56:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  57:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
  58:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_Start(void)
  59:Generated_Source\PSoC4/CommTimeoutISR.c **** {
  60:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* For all we know the interrupt is active. */
  61:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_Disable();
  62:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  63:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Set the ISR to point to the CommTimeoutISR Interrupt. */
  64:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_SetVector(&CommTimeoutISR_Interrupt);
  65:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  66:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Set the priority. */
  67:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_SetPriority((uint8)CommTimeoutISR_INTC_PRIOR_NUMBER);
  68:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  69:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Enable it. */
  70:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_Enable();
  71:Generated_Source\PSoC4/CommTimeoutISR.c **** }
  72:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  73:Generated_Source\PSoC4/CommTimeoutISR.c **** 
  74:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_StartEx
  76:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
  77:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  78:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
  79:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  80:Generated_Source\PSoC4/CommTimeoutISR.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  81:Generated_Source\PSoC4/CommTimeoutISR.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  82:Generated_Source\PSoC4/CommTimeoutISR.c **** *  the interrupt to the interrupt controller.
  83:Generated_Source\PSoC4/CommTimeoutISR.c **** *  
  84:Generated_Source\PSoC4/CommTimeoutISR.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  85:Generated_Source\PSoC4/CommTimeoutISR.c **** *  used to provide consistent definition across compilers:
  86:Generated_Source\PSoC4/CommTimeoutISR.c **** *  
  87:Generated_Source\PSoC4/CommTimeoutISR.c **** *  Function definition example:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 3


  88:Generated_Source\PSoC4/CommTimeoutISR.c **** *   CY_ISR(MyISR)
  89:Generated_Source\PSoC4/CommTimeoutISR.c **** *   {
  90:Generated_Source\PSoC4/CommTimeoutISR.c **** *   }
  91:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Function prototype example:
  92:Generated_Source\PSoC4/CommTimeoutISR.c **** *   CY_ISR_PROTO(MyISR);
  93:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  94:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:  
  95:Generated_Source\PSoC4/CommTimeoutISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
  96:Generated_Source\PSoC4/CommTimeoutISR.c **** *
  97:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
  98:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
  99:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 100:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 101:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_StartEx(cyisraddress address)
 102:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 103:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* For all we know the interrupt is active. */
 104:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_Disable();
 105:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 106:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Set the ISR to point to the CommTimeoutISR Interrupt. */
 107:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_SetVector(address);
 108:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 109:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Set the priority. */
 110:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_SetPriority((uint8)CommTimeoutISR_INTC_PRIOR_NUMBER);
 111:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 112:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Enable it. */
 113:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_Enable();
 114:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 115:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 116:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 117:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 118:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_Stop
 119:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 120:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 121:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 122:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Disables and removes the interrupt.
 123:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 124:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:  
 125:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 126:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 127:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 128:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 129:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 130:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 131:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_Stop(void)
 132:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 133:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Disable this interrupt. */
 134:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_Disable();
 135:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 136:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Set the ISR to point to the passive one. */
 137:Generated_Source\PSoC4/CommTimeoutISR.c ****     CommTimeoutISR_SetVector(&IntDefaultHandler);
 138:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 139:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 140:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 141:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 142:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_Interrupt
 143:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 144:Generated_Source\PSoC4/CommTimeoutISR.c **** *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 4


 145:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 146:Generated_Source\PSoC4/CommTimeoutISR.c **** *   The default Interrupt Service Routine for CommTimeoutISR.
 147:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 148:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Add custom code between the START and END comments to keep the next version
 149:Generated_Source\PSoC4/CommTimeoutISR.c **** *   of this file from over-writing your code.
 150:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 151:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Note You may use either the default ISR by using this API, or you may define
 152:Generated_Source\PSoC4/CommTimeoutISR.c **** *   your own separate ISR through ISR_StartEx().
 153:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 154:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:  
 155:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 156:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 157:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 158:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 159:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 160:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 161:Generated_Source\PSoC4/CommTimeoutISR.c **** CY_ISR(CommTimeoutISR_Interrupt)
 162:Generated_Source\PSoC4/CommTimeoutISR.c **** {
  28              		.loc 1 162 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 163:Generated_Source\PSoC4/CommTimeoutISR.c ****     #ifdef CommTimeoutISR_INTERRUPT_INTERRUPT_CALLBACK
 164:Generated_Source\PSoC4/CommTimeoutISR.c ****         CommTimeoutISR_Interrupt_InterruptCallback();
 165:Generated_Source\PSoC4/CommTimeoutISR.c ****     #endif /* CommTimeoutISR_INTERRUPT_INTERRUPT_CALLBACK */ 
 166:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 167:Generated_Source\PSoC4/CommTimeoutISR.c ****     /*  Place your Interrupt code here. */
 168:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* `#START CommTimeoutISR_Interrupt` */
 169:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 170:Generated_Source\PSoC4/CommTimeoutISR.c ****     processTimeoutTimerRoutine();
  36              		.loc 1 170 0
  37 0002 FFF7FEFF 		bl	processTimeoutTimerRoutine
  38              	.LVL0:
 171:Generated_Source\PSoC4/CommTimeoutISR.c ****     
 172:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* `#END` */
 173:Generated_Source\PSoC4/CommTimeoutISR.c **** }
  39              		.loc 1 173 0
  40              		@ sp needed
  41 0006 10BD     		pop	{r4, pc}
  42              		.cfi_endproc
  43              	.LFE35:
  44              		.size	CommTimeoutISR_Interrupt, .-CommTimeoutISR_Interrupt
  45              		.section	.text.CommTimeoutISR_SetVector,"ax",%progbits
  46              		.align	2
  47              		.global	CommTimeoutISR_SetVector
  48              		.code	16
  49              		.thumb_func
  50              		.type	CommTimeoutISR_SetVector, %function
  51              	CommTimeoutISR_SetVector:
  52              	.LFB36:
 174:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 175:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 176:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 5


 177:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_SetVector
 178:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 179:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 180:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 181:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Change the ISR vector for the Interrupt. Note calling CommTimeoutISR_Start
 182:Generated_Source\PSoC4/CommTimeoutISR.c **** *   will override any effect this method would have had. To set the vector 
 183:Generated_Source\PSoC4/CommTimeoutISR.c **** *   before the component has been started use CommTimeoutISR_StartEx instead.
 184:Generated_Source\PSoC4/CommTimeoutISR.c **** * 
 185:Generated_Source\PSoC4/CommTimeoutISR.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 186:Generated_Source\PSoC4/CommTimeoutISR.c **** *   used to provide consistent definition across compilers:
 187:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 188:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Function definition example:
 189:Generated_Source\PSoC4/CommTimeoutISR.c **** *   CY_ISR(MyISR)
 190:Generated_Source\PSoC4/CommTimeoutISR.c **** *   {
 191:Generated_Source\PSoC4/CommTimeoutISR.c **** *   }
 192:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 193:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Function prototype example:
 194:Generated_Source\PSoC4/CommTimeoutISR.c **** *     CY_ISR_PROTO(MyISR);
 195:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 196:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 197:Generated_Source\PSoC4/CommTimeoutISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 198:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 199:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 200:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 201:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 202:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 203:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_SetVector(cyisraddress address)
 204:Generated_Source\PSoC4/CommTimeoutISR.c **** {
  53              		.loc 1 204 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
 205:Generated_Source\PSoC4/CommTimeoutISR.c ****     CyRamVectors[CYINT_IRQ_BASE + CommTimeoutISR__INTC_NUMBER] = address;
  59              		.loc 1 205 0
  60 0000 014B     		ldr	r3, .L3
  61 0002 9864     		str	r0, [r3, #72]
 206:Generated_Source\PSoC4/CommTimeoutISR.c **** }
  62              		.loc 1 206 0
  63              		@ sp needed
  64 0004 7047     		bx	lr
  65              	.L4:
  66 0006 C046     		.align	2
  67              	.L3:
  68 0008 00000000 		.word	CyRamVectors
  69              		.cfi_endproc
  70              	.LFE36:
  71              		.size	CommTimeoutISR_SetVector, .-CommTimeoutISR_SetVector
  72              		.section	.text.CommTimeoutISR_GetVector,"ax",%progbits
  73              		.align	2
  74              		.global	CommTimeoutISR_GetVector
  75              		.code	16
  76              		.thumb_func
  77              		.type	CommTimeoutISR_GetVector, %function
  78              	CommTimeoutISR_GetVector:
  79              	.LFB37:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 6


 207:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 208:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 209:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 210:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_GetVector
 211:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 212:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 213:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 214:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 215:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 216:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 217:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 218:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 219:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 220:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Address of the ISR in the interrupt vector table.
 221:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 222:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 223:Generated_Source\PSoC4/CommTimeoutISR.c **** cyisraddress CommTimeoutISR_GetVector(void)
 224:Generated_Source\PSoC4/CommTimeoutISR.c **** {
  80              		.loc 1 224 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
 225:Generated_Source\PSoC4/CommTimeoutISR.c ****     return CyRamVectors[CYINT_IRQ_BASE + CommTimeoutISR__INTC_NUMBER];
  85              		.loc 1 225 0
  86 0000 014B     		ldr	r3, .L6
  87 0002 986C     		ldr	r0, [r3, #72]
 226:Generated_Source\PSoC4/CommTimeoutISR.c **** }
  88              		.loc 1 226 0
  89              		@ sp needed
  90 0004 7047     		bx	lr
  91              	.L7:
  92 0006 C046     		.align	2
  93              	.L6:
  94 0008 00000000 		.word	CyRamVectors
  95              		.cfi_endproc
  96              	.LFE37:
  97              		.size	CommTimeoutISR_GetVector, .-CommTimeoutISR_GetVector
  98              		.section	.text.CommTimeoutISR_SetPriority,"ax",%progbits
  99              		.align	2
 100              		.global	CommTimeoutISR_SetPriority
 101              		.code	16
 102              		.thumb_func
 103              		.type	CommTimeoutISR_SetPriority, %function
 104              	CommTimeoutISR_SetPriority:
 105              	.LFB38:
 227:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 228:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 229:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 230:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_SetPriority
 231:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 232:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 233:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 234:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Sets the Priority of the Interrupt. 
 235:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 236:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Note calling CommTimeoutISR_Start or CommTimeoutISR_StartEx will 
 237:Generated_Source\PSoC4/CommTimeoutISR.c **** *   override any effect this API would have had. This API should only be called
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 7


 238:Generated_Source\PSoC4/CommTimeoutISR.c **** *   after CommTimeoutISR_Start or CommTimeoutISR_StartEx has been called. 
 239:Generated_Source\PSoC4/CommTimeoutISR.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 240:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Interrupt Editor.
 241:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 242:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 243:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 244:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 245:Generated_Source\PSoC4/CommTimeoutISR.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 246:Generated_Source\PSoC4/CommTimeoutISR.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 247:Generated_Source\PSoC4/CommTimeoutISR.c **** *             PSoC 4: Priority is from 0 to 3.
 248:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 249:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 250:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 251:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 252:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 253:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_SetPriority(uint8 priority)
 254:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 106              		.loc 1 254 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              	.LVL2:
 111 0000 10B5     		push	{r4, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
 115 0002 0400     		movs	r4, r0
 116              	.LVL3:
 255:Generated_Source\PSoC4/CommTimeoutISR.c **** 	uint8 interruptState;
 256:Generated_Source\PSoC4/CommTimeoutISR.c ****     uint32 priorityOffset = ((CommTimeoutISR__INTC_NUMBER % 4u) * 8u) + 6u;
 257:Generated_Source\PSoC4/CommTimeoutISR.c ****     
 258:Generated_Source\PSoC4/CommTimeoutISR.c **** 	interruptState = CyEnterCriticalSection();
 117              		.loc 1 258 0
 118 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 119              	.LVL4:
 259:Generated_Source\PSoC4/CommTimeoutISR.c ****     *CommTimeoutISR_INTC_PRIOR = (*CommTimeoutISR_INTC_PRIOR & (uint32)(~CommTimeoutISR__INTC_PRIOR
 120              		.loc 1 259 0
 121 0008 044A     		ldr	r2, .L9
 122 000a 1168     		ldr	r1, [r2]
 123 000c 044B     		ldr	r3, .L9+4
 124 000e 0B40     		ands	r3, r1
 260:Generated_Source\PSoC4/CommTimeoutISR.c ****                                     ((uint32)priority << priorityOffset);
 125              		.loc 1 260 0
 126 0010 A405     		lsls	r4, r4, #22
 259:Generated_Source\PSoC4/CommTimeoutISR.c ****     *CommTimeoutISR_INTC_PRIOR = (*CommTimeoutISR_INTC_PRIOR & (uint32)(~CommTimeoutISR__INTC_PRIOR
 127              		.loc 1 259 0
 128 0012 1C43     		orrs	r4, r3
 129 0014 1460     		str	r4, [r2]
 261:Generated_Source\PSoC4/CommTimeoutISR.c **** 	CyExitCriticalSection(interruptState);
 130              		.loc 1 261 0
 131 0016 FFF7FEFF 		bl	CyExitCriticalSection
 132              	.LVL5:
 262:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 133              		.loc 1 262 0
 134              		@ sp needed
 135 001a 10BD     		pop	{r4, pc}
 136              	.L10:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 8


 137              		.align	2
 138              	.L9:
 139 001c 00E400E0 		.word	-536812544
 140 0020 FFFF3FFF 		.word	-12582913
 141              		.cfi_endproc
 142              	.LFE38:
 143              		.size	CommTimeoutISR_SetPriority, .-CommTimeoutISR_SetPriority
 144              		.section	.text.CommTimeoutISR_GetPriority,"ax",%progbits
 145              		.align	2
 146              		.global	CommTimeoutISR_GetPriority
 147              		.code	16
 148              		.thumb_func
 149              		.type	CommTimeoutISR_GetPriority, %function
 150              	CommTimeoutISR_GetPriority:
 151              	.LFB39:
 263:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 264:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 265:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 266:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_GetPriority
 267:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 268:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 269:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 270:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Gets the Priority of the Interrupt.
 271:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 272:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 273:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 274:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 275:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 276:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Priority of the interrupt, 0 being the highest priority
 277:Generated_Source\PSoC4/CommTimeoutISR.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 278:Generated_Source\PSoC4/CommTimeoutISR.c **** *    PSoC 4: Priority is from 0 to 3.
 279:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 280:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 281:Generated_Source\PSoC4/CommTimeoutISR.c **** uint8 CommTimeoutISR_GetPriority(void)
 282:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 152              		.loc 1 282 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL6:
 283:Generated_Source\PSoC4/CommTimeoutISR.c ****     uint32 priority;
 284:Generated_Source\PSoC4/CommTimeoutISR.c **** 	uint32 priorityOffset = ((CommTimeoutISR__INTC_NUMBER % 4u) * 8u) + 6u;
 285:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 286:Generated_Source\PSoC4/CommTimeoutISR.c ****     priority = (*CommTimeoutISR_INTC_PRIOR & CommTimeoutISR__INTC_PRIOR_MASK) >> priorityOffset;
 158              		.loc 1 286 0
 159 0000 024B     		ldr	r3, .L12
 160 0002 1868     		ldr	r0, [r3]
 161 0004 800D     		lsrs	r0, r0, #22
 162              	.LVL7:
 287:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 288:Generated_Source\PSoC4/CommTimeoutISR.c ****     return (uint8)priority;
 163              		.loc 1 288 0
 164 0006 0323     		movs	r3, #3
 165 0008 1840     		ands	r0, r3
 166              	.LVL8:
 289:Generated_Source\PSoC4/CommTimeoutISR.c **** }
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 9


 167              		.loc 1 289 0
 168              		@ sp needed
 169 000a 7047     		bx	lr
 170              	.L13:
 171              		.align	2
 172              	.L12:
 173 000c 00E400E0 		.word	-536812544
 174              		.cfi_endproc
 175              	.LFE39:
 176              		.size	CommTimeoutISR_GetPriority, .-CommTimeoutISR_GetPriority
 177              		.section	.text.CommTimeoutISR_Enable,"ax",%progbits
 178              		.align	2
 179              		.global	CommTimeoutISR_Enable
 180              		.code	16
 181              		.thumb_func
 182              		.type	CommTimeoutISR_Enable, %function
 183              	CommTimeoutISR_Enable:
 184              	.LFB40:
 290:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 291:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 292:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_Enable
 294:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 295:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 296:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 297:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 298:Generated_Source\PSoC4/CommTimeoutISR.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 299:Generated_Source\PSoC4/CommTimeoutISR.c **** *   function, which sets the vector and the priority, has been called.
 300:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 301:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 302:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 303:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 304:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 305:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 306:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 307:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 308:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_Enable(void)
 309:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 185              		.loc 1 309 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 310:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Enable the general interrupt. */
 311:Generated_Source\PSoC4/CommTimeoutISR.c ****     *CommTimeoutISR_INTC_SET_EN = CommTimeoutISR__INTC_MASK;
 190              		.loc 1 311 0
 191 0000 0422     		movs	r2, #4
 192 0002 014B     		ldr	r3, .L15
 193 0004 1A60     		str	r2, [r3]
 312:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 194              		.loc 1 312 0
 195              		@ sp needed
 196 0006 7047     		bx	lr
 197              	.L16:
 198              		.align	2
 199              	.L15:
 200 0008 00E100E0 		.word	-536813312
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 10


 201              		.cfi_endproc
 202              	.LFE40:
 203              		.size	CommTimeoutISR_Enable, .-CommTimeoutISR_Enable
 204              		.section	.text.CommTimeoutISR_GetState,"ax",%progbits
 205              		.align	2
 206              		.global	CommTimeoutISR_GetState
 207              		.code	16
 208              		.thumb_func
 209              		.type	CommTimeoutISR_GetState, %function
 210              	CommTimeoutISR_GetState:
 211              	.LFB41:
 313:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 314:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 315:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 316:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_GetState
 317:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 318:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 319:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 320:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 321:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 322:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 323:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 324:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 325:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 326:Generated_Source\PSoC4/CommTimeoutISR.c **** *   1 if enabled, 0 if disabled.
 327:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 328:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 329:Generated_Source\PSoC4/CommTimeoutISR.c **** uint8 CommTimeoutISR_GetState(void)
 330:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 212              		.loc 1 330 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 331:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Get the state of the general interrupt. */
 332:Generated_Source\PSoC4/CommTimeoutISR.c ****     return ((*CommTimeoutISR_INTC_SET_EN & (uint32)CommTimeoutISR__INTC_MASK) != 0u) ? 1u:0u;
 217              		.loc 1 332 0
 218 0000 034B     		ldr	r3, .L20
 219 0002 1B68     		ldr	r3, [r3]
 220 0004 5B07     		lsls	r3, r3, #29
 221 0006 01D5     		bpl	.L19
 222 0008 0120     		movs	r0, #1
 223 000a 00E0     		b	.L18
 224              	.L19:
 225 000c 0020     		movs	r0, #0
 226              	.L18:
 333:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 227              		.loc 1 333 0 discriminator 4
 228              		@ sp needed
 229 000e 7047     		bx	lr
 230              	.L21:
 231              		.align	2
 232              	.L20:
 233 0010 00E100E0 		.word	-536813312
 234              		.cfi_endproc
 235              	.LFE41:
 236              		.size	CommTimeoutISR_GetState, .-CommTimeoutISR_GetState
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 11


 237              		.section	.text.CommTimeoutISR_Disable,"ax",%progbits
 238              		.align	2
 239              		.global	CommTimeoutISR_Disable
 240              		.code	16
 241              		.thumb_func
 242              		.type	CommTimeoutISR_Disable, %function
 243              	CommTimeoutISR_Disable:
 244              	.LFB42:
 334:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 335:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 336:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 337:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_Disable
 338:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 339:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 340:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 341:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Disables the Interrupt in the interrupt controller.
 342:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 343:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 344:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 345:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 346:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 347:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 348:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 349:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 350:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_Disable(void)
 351:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 245              		.loc 1 351 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 352:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Disable the general interrupt. */
 353:Generated_Source\PSoC4/CommTimeoutISR.c ****     *CommTimeoutISR_INTC_CLR_EN = CommTimeoutISR__INTC_MASK;
 250              		.loc 1 353 0
 251 0000 0422     		movs	r2, #4
 252 0002 014B     		ldr	r3, .L23
 253 0004 1A60     		str	r2, [r3]
 354:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 254              		.loc 1 354 0
 255              		@ sp needed
 256 0006 7047     		bx	lr
 257              	.L24:
 258              		.align	2
 259              	.L23:
 260 0008 80E100E0 		.word	-536813184
 261              		.cfi_endproc
 262              	.LFE42:
 263              		.size	CommTimeoutISR_Disable, .-CommTimeoutISR_Disable
 264              		.section	.text.CommTimeoutISR_Start,"ax",%progbits
 265              		.align	2
 266              		.global	CommTimeoutISR_Start
 267              		.code	16
 268              		.thumb_func
 269              		.type	CommTimeoutISR_Start, %function
 270              	CommTimeoutISR_Start:
 271              	.LFB32:
  59:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* For all we know the interrupt is active. */
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 12


 272              		.loc 1 59 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 10B5     		push	{r4, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
  61:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 280              		.loc 1 61 0
 281 0002 FFF7FEFF 		bl	CommTimeoutISR_Disable
 282              	.LVL9:
  64:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 283              		.loc 1 64 0
 284 0006 0448     		ldr	r0, .L26
 285 0008 FFF7FEFF 		bl	CommTimeoutISR_SetVector
 286              	.LVL10:
  67:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 287              		.loc 1 67 0
 288 000c 0320     		movs	r0, #3
 289 000e FFF7FEFF 		bl	CommTimeoutISR_SetPriority
 290              	.LVL11:
  70:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 291              		.loc 1 70 0
 292 0012 FFF7FEFF 		bl	CommTimeoutISR_Enable
 293              	.LVL12:
  71:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 294              		.loc 1 71 0
 295              		@ sp needed
 296 0016 10BD     		pop	{r4, pc}
 297              	.L27:
 298              		.align	2
 299              	.L26:
 300 0018 00000000 		.word	CommTimeoutISR_Interrupt
 301              		.cfi_endproc
 302              	.LFE32:
 303              		.size	CommTimeoutISR_Start, .-CommTimeoutISR_Start
 304              		.section	.text.CommTimeoutISR_StartEx,"ax",%progbits
 305              		.align	2
 306              		.global	CommTimeoutISR_StartEx
 307              		.code	16
 308              		.thumb_func
 309              		.type	CommTimeoutISR_StartEx, %function
 310              	CommTimeoutISR_StartEx:
 311              	.LFB33:
 102:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* For all we know the interrupt is active. */
 312              		.loc 1 102 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL13:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 0400     		movs	r4, r0
 104:Generated_Source\PSoC4/CommTimeoutISR.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 13


 322              		.loc 1 104 0
 323 0004 FFF7FEFF 		bl	CommTimeoutISR_Disable
 324              	.LVL14:
 107:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 325              		.loc 1 107 0
 326 0008 2000     		movs	r0, r4
 327 000a FFF7FEFF 		bl	CommTimeoutISR_SetVector
 328              	.LVL15:
 110:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 329              		.loc 1 110 0
 330 000e 0320     		movs	r0, #3
 331 0010 FFF7FEFF 		bl	CommTimeoutISR_SetPriority
 332              	.LVL16:
 113:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 333              		.loc 1 113 0
 334 0014 FFF7FEFF 		bl	CommTimeoutISR_Enable
 335              	.LVL17:
 114:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 336              		.loc 1 114 0
 337              		@ sp needed
 338              	.LVL18:
 339 0018 10BD     		pop	{r4, pc}
 340              		.cfi_endproc
 341              	.LFE33:
 342              		.size	CommTimeoutISR_StartEx, .-CommTimeoutISR_StartEx
 343 001a C046     		.section	.text.CommTimeoutISR_Stop,"ax",%progbits
 344              		.align	2
 345              		.global	CommTimeoutISR_Stop
 346              		.code	16
 347              		.thumb_func
 348              		.type	CommTimeoutISR_Stop, %function
 349              	CommTimeoutISR_Stop:
 350              	.LFB34:
 132:Generated_Source\PSoC4/CommTimeoutISR.c ****     /* Disable this interrupt. */
 351              		.loc 1 132 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 10B5     		push	{r4, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 4, -8
 358              		.cfi_offset 14, -4
 134:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 359              		.loc 1 134 0
 360 0002 FFF7FEFF 		bl	CommTimeoutISR_Disable
 361              	.LVL19:
 137:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 362              		.loc 1 137 0
 363 0006 0248     		ldr	r0, .L30
 364 0008 FFF7FEFF 		bl	CommTimeoutISR_SetVector
 365              	.LVL20:
 138:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 366              		.loc 1 138 0
 367              		@ sp needed
 368 000c 10BD     		pop	{r4, pc}
 369              	.L31:
 370 000e C046     		.align	2
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 14


 371              	.L30:
 372 0010 00000000 		.word	IntDefaultHandler
 373              		.cfi_endproc
 374              	.LFE34:
 375              		.size	CommTimeoutISR_Stop, .-CommTimeoutISR_Stop
 376              		.section	.text.CommTimeoutISR_SetPending,"ax",%progbits
 377              		.align	2
 378              		.global	CommTimeoutISR_SetPending
 379              		.code	16
 380              		.thumb_func
 381              		.type	CommTimeoutISR_SetPending, %function
 382              	CommTimeoutISR_SetPending:
 383              	.LFB43:
 355:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 356:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 357:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 358:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_SetPending
 359:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 360:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 361:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 362:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Causes the Interrupt to enter the pending state, a software method of
 363:Generated_Source\PSoC4/CommTimeoutISR.c **** *   generating the interrupt.
 364:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 365:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 366:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 367:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 368:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 369:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 370:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 371:Generated_Source\PSoC4/CommTimeoutISR.c **** * Side Effects:
 372:Generated_Source\PSoC4/CommTimeoutISR.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 373:Generated_Source\PSoC4/CommTimeoutISR.c **** *   entered (depending on the priority of this interrupt and other pending 
 374:Generated_Source\PSoC4/CommTimeoutISR.c **** *   interrupts).
 375:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 376:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 377:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_SetPending(void)
 378:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 384              		.loc 1 378 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 379:Generated_Source\PSoC4/CommTimeoutISR.c ****     *CommTimeoutISR_INTC_SET_PD = CommTimeoutISR__INTC_MASK;
 389              		.loc 1 379 0
 390 0000 0422     		movs	r2, #4
 391 0002 014B     		ldr	r3, .L33
 392 0004 1A60     		str	r2, [r3]
 380:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 393              		.loc 1 380 0
 394              		@ sp needed
 395 0006 7047     		bx	lr
 396              	.L34:
 397              		.align	2
 398              	.L33:
 399 0008 00E200E0 		.word	-536813056
 400              		.cfi_endproc
 401              	.LFE43:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 15


 402              		.size	CommTimeoutISR_SetPending, .-CommTimeoutISR_SetPending
 403              		.section	.text.CommTimeoutISR_ClearPending,"ax",%progbits
 404              		.align	2
 405              		.global	CommTimeoutISR_ClearPending
 406              		.code	16
 407              		.thumb_func
 408              		.type	CommTimeoutISR_ClearPending, %function
 409              	CommTimeoutISR_ClearPending:
 410              	.LFB44:
 381:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 382:Generated_Source\PSoC4/CommTimeoutISR.c **** 
 383:Generated_Source\PSoC4/CommTimeoutISR.c **** /*******************************************************************************
 384:Generated_Source\PSoC4/CommTimeoutISR.c **** * Function Name: CommTimeoutISR_ClearPending
 385:Generated_Source\PSoC4/CommTimeoutISR.c **** ********************************************************************************
 386:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 387:Generated_Source\PSoC4/CommTimeoutISR.c **** * Summary:
 388:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Clears a pending interrupt in the interrupt controller.
 389:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 390:Generated_Source\PSoC4/CommTimeoutISR.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 391:Generated_Source\PSoC4/CommTimeoutISR.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 392:Generated_Source\PSoC4/CommTimeoutISR.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 393:Generated_Source\PSoC4/CommTimeoutISR.c **** *   pending state even though the interrupt itself is cleared using this API.
 394:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 395:Generated_Source\PSoC4/CommTimeoutISR.c **** * Parameters:
 396:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 397:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 398:Generated_Source\PSoC4/CommTimeoutISR.c **** * Return:
 399:Generated_Source\PSoC4/CommTimeoutISR.c **** *   None
 400:Generated_Source\PSoC4/CommTimeoutISR.c **** *
 401:Generated_Source\PSoC4/CommTimeoutISR.c **** *******************************************************************************/
 402:Generated_Source\PSoC4/CommTimeoutISR.c **** void CommTimeoutISR_ClearPending(void)
 403:Generated_Source\PSoC4/CommTimeoutISR.c **** {
 411              		.loc 1 403 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 404:Generated_Source\PSoC4/CommTimeoutISR.c ****     *CommTimeoutISR_INTC_CLR_PD = CommTimeoutISR__INTC_MASK;
 416              		.loc 1 404 0
 417 0000 0422     		movs	r2, #4
 418 0002 014B     		ldr	r3, .L36
 419 0004 1A60     		str	r2, [r3]
 405:Generated_Source\PSoC4/CommTimeoutISR.c **** }
 420              		.loc 1 405 0
 421              		@ sp needed
 422 0006 7047     		bx	lr
 423              	.L37:
 424              		.align	2
 425              	.L36:
 426 0008 80E200E0 		.word	-536812928
 427              		.cfi_endproc
 428              	.LFE44:
 429              		.size	CommTimeoutISR_ClearPending, .-CommTimeoutISR_ClearPending
 430              		.text
 431              	.Letext0:
 432              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 433              		.file 3 "./BrightnessCommManager.h"
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 16


 434              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 435              		.section	.debug_info,"",%progbits
 436              	.Ldebug_info0:
 437 0000 1B030000 		.4byte	0x31b
 438 0004 0400     		.2byte	0x4
 439 0006 00000000 		.4byte	.Ldebug_abbrev0
 440 000a 04       		.byte	0x4
 441 000b 01       		.uleb128 0x1
 442 000c CC010000 		.4byte	.LASF37
 443 0010 0C       		.byte	0xc
 444 0011 89010000 		.4byte	.LASF38
 445 0015 2C030000 		.4byte	.LASF39
 446 0019 00000000 		.4byte	.Ldebug_ranges0+0
 447 001d 00000000 		.4byte	0
 448 0021 00000000 		.4byte	.Ldebug_line0
 449 0025 02       		.uleb128 0x2
 450 0026 01       		.byte	0x1
 451 0027 06       		.byte	0x6
 452 0028 05030000 		.4byte	.LASF0
 453 002c 02       		.uleb128 0x2
 454 002d 01       		.byte	0x1
 455 002e 08       		.byte	0x8
 456 002f 62000000 		.4byte	.LASF1
 457 0033 02       		.uleb128 0x2
 458 0034 02       		.byte	0x2
 459 0035 05       		.byte	0x5
 460 0036 8F020000 		.4byte	.LASF2
 461 003a 02       		.uleb128 0x2
 462 003b 02       		.byte	0x2
 463 003c 07       		.byte	0x7
 464 003d AD000000 		.4byte	.LASF3
 465 0041 02       		.uleb128 0x2
 466 0042 04       		.byte	0x4
 467 0043 05       		.byte	0x5
 468 0044 F0020000 		.4byte	.LASF4
 469 0048 02       		.uleb128 0x2
 470 0049 04       		.byte	0x4
 471 004a 07       		.byte	0x7
 472 004b 9B000000 		.4byte	.LASF5
 473 004f 02       		.uleb128 0x2
 474 0050 08       		.byte	0x8
 475 0051 05       		.byte	0x5
 476 0052 63020000 		.4byte	.LASF6
 477 0056 02       		.uleb128 0x2
 478 0057 08       		.byte	0x8
 479 0058 07       		.byte	0x7
 480 0059 34010000 		.4byte	.LASF7
 481 005d 03       		.uleb128 0x3
 482 005e 04       		.byte	0x4
 483 005f 05       		.byte	0x5
 484 0060 696E7400 		.ascii	"int\000"
 485 0064 02       		.uleb128 0x2
 486 0065 04       		.byte	0x4
 487 0066 07       		.byte	0x7
 488 0067 1F010000 		.4byte	.LASF8
 489 006b 04       		.uleb128 0x4
 490 006c 99020000 		.4byte	.LASF9
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 17


 491 0070 02       		.byte	0x2
 492 0071 D201     		.2byte	0x1d2
 493 0073 2C000000 		.4byte	0x2c
 494 0077 04       		.uleb128 0x4
 495 0078 01010000 		.4byte	.LASF10
 496 007c 02       		.byte	0x2
 497 007d D401     		.2byte	0x1d4
 498 007f 48000000 		.4byte	0x48
 499 0083 02       		.uleb128 0x2
 500 0084 04       		.byte	0x4
 501 0085 04       		.byte	0x4
 502 0086 5C000000 		.4byte	.LASF11
 503 008a 02       		.uleb128 0x2
 504 008b 08       		.byte	0x8
 505 008c 04       		.byte	0x4
 506 008d FA000000 		.4byte	.LASF12
 507 0091 02       		.uleb128 0x2
 508 0092 01       		.byte	0x1
 509 0093 08       		.byte	0x8
 510 0094 8A020000 		.4byte	.LASF13
 511 0098 04       		.uleb128 0x4
 512 0099 00000000 		.4byte	.LASF14
 513 009d 02       		.byte	0x2
 514 009e 7E02     		.2byte	0x27e
 515 00a0 A4000000 		.4byte	0xa4
 516 00a4 05       		.uleb128 0x5
 517 00a5 77000000 		.4byte	0x77
 518 00a9 04       		.uleb128 0x4
 519 00aa 4B010000 		.4byte	.LASF15
 520 00ae 02       		.byte	0x2
 521 00af 8E02     		.2byte	0x28e
 522 00b1 B5000000 		.4byte	0xb5
 523 00b5 06       		.uleb128 0x6
 524 00b6 04       		.byte	0x4
 525 00b7 BB000000 		.4byte	0xbb
 526 00bb 07       		.uleb128 0x7
 527 00bc 02       		.uleb128 0x2
 528 00bd 08       		.byte	0x8
 529 00be 04       		.byte	0x4
 530 00bf F9020000 		.4byte	.LASF16
 531 00c3 02       		.uleb128 0x2
 532 00c4 04       		.byte	0x4
 533 00c5 07       		.byte	0x7
 534 00c6 5A020000 		.4byte	.LASF17
 535 00ca 08       		.uleb128 0x8
 536 00cb 2C000000 		.4byte	.LASF18
 537 00cf 01       		.byte	0x1
 538 00d0 A1       		.byte	0xa1
 539 00d1 00000000 		.4byte	.LFB35
 540 00d5 08000000 		.4byte	.LFE35-.LFB35
 541 00d9 01       		.uleb128 0x1
 542 00da 9C       		.byte	0x9c
 543 00db E9000000 		.4byte	0xe9
 544 00df 09       		.uleb128 0x9
 545 00e0 06000000 		.4byte	.LVL0
 546 00e4 FD020000 		.4byte	0x2fd
 547 00e8 00       		.byte	0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 18


 548 00e9 08       		.uleb128 0x8
 549 00ea 71020000 		.4byte	.LASF19
 550 00ee 01       		.byte	0x1
 551 00ef CB       		.byte	0xcb
 552 00f0 00000000 		.4byte	.LFB36
 553 00f4 0C000000 		.4byte	.LFE36-.LFB36
 554 00f8 01       		.uleb128 0x1
 555 00f9 9C       		.byte	0x9c
 556 00fa 0C010000 		.4byte	0x10c
 557 00fe 0A       		.uleb128 0xa
 558 00ff 2C010000 		.4byte	.LASF21
 559 0103 01       		.byte	0x1
 560 0104 CB       		.byte	0xcb
 561 0105 A9000000 		.4byte	0xa9
 562 0109 01       		.uleb128 0x1
 563 010a 50       		.byte	0x50
 564 010b 00       		.byte	0
 565 010c 0B       		.uleb128 0xb
 566 010d 13000000 		.4byte	.LASF25
 567 0111 01       		.byte	0x1
 568 0112 DF       		.byte	0xdf
 569 0113 A9000000 		.4byte	0xa9
 570 0117 00000000 		.4byte	.LFB37
 571 011b 0C000000 		.4byte	.LFE37-.LFB37
 572 011f 01       		.uleb128 0x1
 573 0120 9C       		.byte	0x9c
 574 0121 08       		.uleb128 0x8
 575 0122 11030000 		.4byte	.LASF20
 576 0126 01       		.byte	0x1
 577 0127 FD       		.byte	0xfd
 578 0128 00000000 		.4byte	.LFB38
 579 012c 24000000 		.4byte	.LFE38-.LFB38
 580 0130 01       		.uleb128 0x1
 581 0131 9C       		.byte	0x9c
 582 0132 74010000 		.4byte	0x174
 583 0136 0C       		.uleb128 0xc
 584 0137 C0000000 		.4byte	.LASF22
 585 013b 01       		.byte	0x1
 586 013c FD       		.byte	0xfd
 587 013d 6B000000 		.4byte	0x6b
 588 0141 00000000 		.4byte	.LLST0
 589 0145 0D       		.uleb128 0xd
 590 0146 8C000000 		.4byte	.LASF23
 591 014a 01       		.byte	0x1
 592 014b FF       		.byte	0xff
 593 014c 6B000000 		.4byte	0x6b
 594 0150 21000000 		.4byte	.LLST1
 595 0154 0E       		.uleb128 0xe
 596 0155 CD020000 		.4byte	.LASF24
 597 0159 01       		.byte	0x1
 598 015a 0001     		.2byte	0x100
 599 015c 77000000 		.4byte	0x77
 600 0160 16       		.byte	0x16
 601 0161 09       		.uleb128 0x9
 602 0162 08000000 		.4byte	.LVL4
 603 0166 08030000 		.4byte	0x308
 604 016a 09       		.uleb128 0x9
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 19


 605 016b 1A000000 		.4byte	.LVL5
 606 016f 13030000 		.4byte	0x313
 607 0173 00       		.byte	0
 608 0174 0F       		.uleb128 0xf
 609 0175 B1010000 		.4byte	.LASF40
 610 0179 01       		.byte	0x1
 611 017a 1901     		.2byte	0x119
 612 017c 6B000000 		.4byte	0x6b
 613 0180 00000000 		.4byte	.LFB39
 614 0184 10000000 		.4byte	.LFE39-.LFB39
 615 0188 01       		.uleb128 0x1
 616 0189 9C       		.byte	0x9c
 617 018a AC010000 		.4byte	0x1ac
 618 018e 10       		.uleb128 0x10
 619 018f C0000000 		.4byte	.LASF22
 620 0193 01       		.byte	0x1
 621 0194 1B01     		.2byte	0x11b
 622 0196 77000000 		.4byte	0x77
 623 019a 34000000 		.4byte	.LLST2
 624 019e 0E       		.uleb128 0xe
 625 019f CD020000 		.4byte	.LASF24
 626 01a3 01       		.byte	0x1
 627 01a4 1C01     		.2byte	0x11c
 628 01a6 77000000 		.4byte	0x77
 629 01aa 16       		.byte	0x16
 630 01ab 00       		.byte	0
 631 01ac 11       		.uleb128 0x11
 632 01ad 58010000 		.4byte	.LASF27
 633 01b1 01       		.byte	0x1
 634 01b2 3401     		.2byte	0x134
 635 01b4 00000000 		.4byte	.LFB40
 636 01b8 0C000000 		.4byte	.LFE40-.LFB40
 637 01bc 01       		.uleb128 0x1
 638 01bd 9C       		.byte	0x9c
 639 01be 12       		.uleb128 0x12
 640 01bf 9F020000 		.4byte	.LASF26
 641 01c3 01       		.byte	0x1
 642 01c4 4901     		.2byte	0x149
 643 01c6 6B000000 		.4byte	0x6b
 644 01ca 00000000 		.4byte	.LFB41
 645 01ce 14000000 		.4byte	.LFE41-.LFB41
 646 01d2 01       		.uleb128 0x1
 647 01d3 9C       		.byte	0x9c
 648 01d4 11       		.uleb128 0x11
 649 01d5 C9000000 		.4byte	.LASF28
 650 01d9 01       		.byte	0x1
 651 01da 5E01     		.2byte	0x15e
 652 01dc 00000000 		.4byte	.LFB42
 653 01e0 0C000000 		.4byte	.LFE42-.LFB42
 654 01e4 01       		.uleb128 0x1
 655 01e5 9C       		.byte	0x9c
 656 01e6 08       		.uleb128 0x8
 657 01e7 97030000 		.4byte	.LASF29
 658 01eb 01       		.byte	0x1
 659 01ec 3A       		.byte	0x3a
 660 01ed 00000000 		.4byte	.LFB32
 661 01f1 1C000000 		.4byte	.LFE32-.LFB32
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 20


 662 01f5 01       		.uleb128 0x1
 663 01f6 9C       		.byte	0x9c
 664 01f7 38020000 		.4byte	0x238
 665 01fb 09       		.uleb128 0x9
 666 01fc 06000000 		.4byte	.LVL9
 667 0200 D4010000 		.4byte	0x1d4
 668 0204 13       		.uleb128 0x13
 669 0205 0C000000 		.4byte	.LVL10
 670 0209 E9000000 		.4byte	0xe9
 671 020d 1B020000 		.4byte	0x21b
 672 0211 14       		.uleb128 0x14
 673 0212 01       		.uleb128 0x1
 674 0213 50       		.byte	0x50
 675 0214 05       		.uleb128 0x5
 676 0215 03       		.byte	0x3
 677 0216 00000000 		.4byte	CommTimeoutISR_Interrupt
 678 021a 00       		.byte	0
 679 021b 13       		.uleb128 0x13
 680 021c 12000000 		.4byte	.LVL11
 681 0220 21010000 		.4byte	0x121
 682 0224 2E020000 		.4byte	0x22e
 683 0228 14       		.uleb128 0x14
 684 0229 01       		.uleb128 0x1
 685 022a 50       		.byte	0x50
 686 022b 01       		.uleb128 0x1
 687 022c 33       		.byte	0x33
 688 022d 00       		.byte	0
 689 022e 09       		.uleb128 0x9
 690 022f 16000000 		.4byte	.LVL12
 691 0233 AC010000 		.4byte	0x1ac
 692 0237 00       		.byte	0
 693 0238 08       		.uleb128 0x8
 694 0239 45000000 		.4byte	.LASF30
 695 023d 01       		.byte	0x1
 696 023e 65       		.byte	0x65
 697 023f 00000000 		.4byte	.LFB33
 698 0243 1A000000 		.4byte	.LFE33-.LFB33
 699 0247 01       		.uleb128 0x1
 700 0248 9C       		.byte	0x9c
 701 0249 96020000 		.4byte	0x296
 702 024d 0C       		.uleb128 0xc
 703 024e 2C010000 		.4byte	.LASF21
 704 0252 01       		.byte	0x1
 705 0253 65       		.byte	0x65
 706 0254 A9000000 		.4byte	0xa9
 707 0258 56000000 		.4byte	.LLST3
 708 025c 09       		.uleb128 0x9
 709 025d 08000000 		.4byte	.LVL14
 710 0261 D4010000 		.4byte	0x1d4
 711 0265 13       		.uleb128 0x13
 712 0266 0E000000 		.4byte	.LVL15
 713 026a E9000000 		.4byte	0xe9
 714 026e 79020000 		.4byte	0x279
 715 0272 14       		.uleb128 0x14
 716 0273 01       		.uleb128 0x1
 717 0274 50       		.byte	0x50
 718 0275 02       		.uleb128 0x2
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 21


 719 0276 74       		.byte	0x74
 720 0277 00       		.sleb128 0
 721 0278 00       		.byte	0
 722 0279 13       		.uleb128 0x13
 723 027a 14000000 		.4byte	.LVL16
 724 027e 21010000 		.4byte	0x121
 725 0282 8C020000 		.4byte	0x28c
 726 0286 14       		.uleb128 0x14
 727 0287 01       		.uleb128 0x1
 728 0288 50       		.byte	0x50
 729 0289 01       		.uleb128 0x1
 730 028a 33       		.byte	0x33
 731 028b 00       		.byte	0
 732 028c 09       		.uleb128 0x9
 733 028d 18000000 		.4byte	.LVL17
 734 0291 AC010000 		.4byte	0x1ac
 735 0295 00       		.byte	0
 736 0296 08       		.uleb128 0x8
 737 0297 DC020000 		.4byte	.LASF31
 738 029b 01       		.byte	0x1
 739 029c 83       		.byte	0x83
 740 029d 00000000 		.4byte	.LFB34
 741 02a1 14000000 		.4byte	.LFE34-.LFB34
 742 02a5 01       		.uleb128 0x1
 743 02a6 9C       		.byte	0x9c
 744 02a7 BE020000 		.4byte	0x2be
 745 02ab 09       		.uleb128 0x9
 746 02ac 06000000 		.4byte	.LVL19
 747 02b0 D4010000 		.4byte	0x1d4
 748 02b4 09       		.uleb128 0x9
 749 02b5 0C000000 		.4byte	.LVL20
 750 02b9 E9000000 		.4byte	0xe9
 751 02bd 00       		.byte	0
 752 02be 11       		.uleb128 0x11
 753 02bf E0000000 		.4byte	.LASF32
 754 02c3 01       		.byte	0x1
 755 02c4 7901     		.2byte	0x179
 756 02c6 00000000 		.4byte	.LFB43
 757 02ca 0C000000 		.4byte	.LFE43-.LFB43
 758 02ce 01       		.uleb128 0x1
 759 02cf 9C       		.byte	0x9c
 760 02d0 11       		.uleb128 0x11
 761 02d1 70000000 		.4byte	.LASF33
 762 02d5 01       		.byte	0x1
 763 02d6 9201     		.2byte	0x192
 764 02d8 00000000 		.4byte	.LFB44
 765 02dc 0C000000 		.4byte	.LFE44-.LFB44
 766 02e0 01       		.uleb128 0x1
 767 02e1 9C       		.byte	0x9c
 768 02e2 15       		.uleb128 0x15
 769 02e3 A9000000 		.4byte	0xa9
 770 02e7 F2020000 		.4byte	0x2f2
 771 02eb 16       		.uleb128 0x16
 772 02ec C3000000 		.4byte	0xc3
 773 02f0 2F       		.byte	0x2f
 774 02f1 00       		.byte	0
 775 02f2 17       		.uleb128 0x17
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 22


 776 02f3 06000000 		.4byte	.LASF41
 777 02f7 01       		.byte	0x1
 778 02f8 23       		.byte	0x23
 779 02f9 E2020000 		.4byte	0x2e2
 780 02fd 18       		.uleb128 0x18
 781 02fe 6E010000 		.4byte	.LASF34
 782 0302 6E010000 		.4byte	.LASF34
 783 0306 03       		.byte	0x3
 784 0307 33       		.byte	0x33
 785 0308 18       		.uleb128 0x18
 786 0309 08010000 		.4byte	.LASF35
 787 030d 08010000 		.4byte	.LASF35
 788 0311 04       		.byte	0x4
 789 0312 E5       		.byte	0xe5
 790 0313 18       		.uleb128 0x18
 791 0314 B7020000 		.4byte	.LASF36
 792 0318 B7020000 		.4byte	.LASF36
 793 031c 04       		.byte	0x4
 794 031d E6       		.byte	0xe6
 795 031e 00       		.byte	0
 796              		.section	.debug_abbrev,"",%progbits
 797              	.Ldebug_abbrev0:
 798 0000 01       		.uleb128 0x1
 799 0001 11       		.uleb128 0x11
 800 0002 01       		.byte	0x1
 801 0003 25       		.uleb128 0x25
 802 0004 0E       		.uleb128 0xe
 803 0005 13       		.uleb128 0x13
 804 0006 0B       		.uleb128 0xb
 805 0007 03       		.uleb128 0x3
 806 0008 0E       		.uleb128 0xe
 807 0009 1B       		.uleb128 0x1b
 808 000a 0E       		.uleb128 0xe
 809 000b 55       		.uleb128 0x55
 810 000c 17       		.uleb128 0x17
 811 000d 11       		.uleb128 0x11
 812 000e 01       		.uleb128 0x1
 813 000f 10       		.uleb128 0x10
 814 0010 17       		.uleb128 0x17
 815 0011 00       		.byte	0
 816 0012 00       		.byte	0
 817 0013 02       		.uleb128 0x2
 818 0014 24       		.uleb128 0x24
 819 0015 00       		.byte	0
 820 0016 0B       		.uleb128 0xb
 821 0017 0B       		.uleb128 0xb
 822 0018 3E       		.uleb128 0x3e
 823 0019 0B       		.uleb128 0xb
 824 001a 03       		.uleb128 0x3
 825 001b 0E       		.uleb128 0xe
 826 001c 00       		.byte	0
 827 001d 00       		.byte	0
 828 001e 03       		.uleb128 0x3
 829 001f 24       		.uleb128 0x24
 830 0020 00       		.byte	0
 831 0021 0B       		.uleb128 0xb
 832 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 23


 833 0023 3E       		.uleb128 0x3e
 834 0024 0B       		.uleb128 0xb
 835 0025 03       		.uleb128 0x3
 836 0026 08       		.uleb128 0x8
 837 0027 00       		.byte	0
 838 0028 00       		.byte	0
 839 0029 04       		.uleb128 0x4
 840 002a 16       		.uleb128 0x16
 841 002b 00       		.byte	0
 842 002c 03       		.uleb128 0x3
 843 002d 0E       		.uleb128 0xe
 844 002e 3A       		.uleb128 0x3a
 845 002f 0B       		.uleb128 0xb
 846 0030 3B       		.uleb128 0x3b
 847 0031 05       		.uleb128 0x5
 848 0032 49       		.uleb128 0x49
 849 0033 13       		.uleb128 0x13
 850 0034 00       		.byte	0
 851 0035 00       		.byte	0
 852 0036 05       		.uleb128 0x5
 853 0037 35       		.uleb128 0x35
 854 0038 00       		.byte	0
 855 0039 49       		.uleb128 0x49
 856 003a 13       		.uleb128 0x13
 857 003b 00       		.byte	0
 858 003c 00       		.byte	0
 859 003d 06       		.uleb128 0x6
 860 003e 0F       		.uleb128 0xf
 861 003f 00       		.byte	0
 862 0040 0B       		.uleb128 0xb
 863 0041 0B       		.uleb128 0xb
 864 0042 49       		.uleb128 0x49
 865 0043 13       		.uleb128 0x13
 866 0044 00       		.byte	0
 867 0045 00       		.byte	0
 868 0046 07       		.uleb128 0x7
 869 0047 15       		.uleb128 0x15
 870 0048 00       		.byte	0
 871 0049 27       		.uleb128 0x27
 872 004a 19       		.uleb128 0x19
 873 004b 00       		.byte	0
 874 004c 00       		.byte	0
 875 004d 08       		.uleb128 0x8
 876 004e 2E       		.uleb128 0x2e
 877 004f 01       		.byte	0x1
 878 0050 3F       		.uleb128 0x3f
 879 0051 19       		.uleb128 0x19
 880 0052 03       		.uleb128 0x3
 881 0053 0E       		.uleb128 0xe
 882 0054 3A       		.uleb128 0x3a
 883 0055 0B       		.uleb128 0xb
 884 0056 3B       		.uleb128 0x3b
 885 0057 0B       		.uleb128 0xb
 886 0058 27       		.uleb128 0x27
 887 0059 19       		.uleb128 0x19
 888 005a 11       		.uleb128 0x11
 889 005b 01       		.uleb128 0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 24


 890 005c 12       		.uleb128 0x12
 891 005d 06       		.uleb128 0x6
 892 005e 40       		.uleb128 0x40
 893 005f 18       		.uleb128 0x18
 894 0060 9742     		.uleb128 0x2117
 895 0062 19       		.uleb128 0x19
 896 0063 01       		.uleb128 0x1
 897 0064 13       		.uleb128 0x13
 898 0065 00       		.byte	0
 899 0066 00       		.byte	0
 900 0067 09       		.uleb128 0x9
 901 0068 898201   		.uleb128 0x4109
 902 006b 00       		.byte	0
 903 006c 11       		.uleb128 0x11
 904 006d 01       		.uleb128 0x1
 905 006e 31       		.uleb128 0x31
 906 006f 13       		.uleb128 0x13
 907 0070 00       		.byte	0
 908 0071 00       		.byte	0
 909 0072 0A       		.uleb128 0xa
 910 0073 05       		.uleb128 0x5
 911 0074 00       		.byte	0
 912 0075 03       		.uleb128 0x3
 913 0076 0E       		.uleb128 0xe
 914 0077 3A       		.uleb128 0x3a
 915 0078 0B       		.uleb128 0xb
 916 0079 3B       		.uleb128 0x3b
 917 007a 0B       		.uleb128 0xb
 918 007b 49       		.uleb128 0x49
 919 007c 13       		.uleb128 0x13
 920 007d 02       		.uleb128 0x2
 921 007e 18       		.uleb128 0x18
 922 007f 00       		.byte	0
 923 0080 00       		.byte	0
 924 0081 0B       		.uleb128 0xb
 925 0082 2E       		.uleb128 0x2e
 926 0083 00       		.byte	0
 927 0084 3F       		.uleb128 0x3f
 928 0085 19       		.uleb128 0x19
 929 0086 03       		.uleb128 0x3
 930 0087 0E       		.uleb128 0xe
 931 0088 3A       		.uleb128 0x3a
 932 0089 0B       		.uleb128 0xb
 933 008a 3B       		.uleb128 0x3b
 934 008b 0B       		.uleb128 0xb
 935 008c 27       		.uleb128 0x27
 936 008d 19       		.uleb128 0x19
 937 008e 49       		.uleb128 0x49
 938 008f 13       		.uleb128 0x13
 939 0090 11       		.uleb128 0x11
 940 0091 01       		.uleb128 0x1
 941 0092 12       		.uleb128 0x12
 942 0093 06       		.uleb128 0x6
 943 0094 40       		.uleb128 0x40
 944 0095 18       		.uleb128 0x18
 945 0096 9742     		.uleb128 0x2117
 946 0098 19       		.uleb128 0x19
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 25


 947 0099 00       		.byte	0
 948 009a 00       		.byte	0
 949 009b 0C       		.uleb128 0xc
 950 009c 05       		.uleb128 0x5
 951 009d 00       		.byte	0
 952 009e 03       		.uleb128 0x3
 953 009f 0E       		.uleb128 0xe
 954 00a0 3A       		.uleb128 0x3a
 955 00a1 0B       		.uleb128 0xb
 956 00a2 3B       		.uleb128 0x3b
 957 00a3 0B       		.uleb128 0xb
 958 00a4 49       		.uleb128 0x49
 959 00a5 13       		.uleb128 0x13
 960 00a6 02       		.uleb128 0x2
 961 00a7 17       		.uleb128 0x17
 962 00a8 00       		.byte	0
 963 00a9 00       		.byte	0
 964 00aa 0D       		.uleb128 0xd
 965 00ab 34       		.uleb128 0x34
 966 00ac 00       		.byte	0
 967 00ad 03       		.uleb128 0x3
 968 00ae 0E       		.uleb128 0xe
 969 00af 3A       		.uleb128 0x3a
 970 00b0 0B       		.uleb128 0xb
 971 00b1 3B       		.uleb128 0x3b
 972 00b2 0B       		.uleb128 0xb
 973 00b3 49       		.uleb128 0x49
 974 00b4 13       		.uleb128 0x13
 975 00b5 02       		.uleb128 0x2
 976 00b6 17       		.uleb128 0x17
 977 00b7 00       		.byte	0
 978 00b8 00       		.byte	0
 979 00b9 0E       		.uleb128 0xe
 980 00ba 34       		.uleb128 0x34
 981 00bb 00       		.byte	0
 982 00bc 03       		.uleb128 0x3
 983 00bd 0E       		.uleb128 0xe
 984 00be 3A       		.uleb128 0x3a
 985 00bf 0B       		.uleb128 0xb
 986 00c0 3B       		.uleb128 0x3b
 987 00c1 05       		.uleb128 0x5
 988 00c2 49       		.uleb128 0x49
 989 00c3 13       		.uleb128 0x13
 990 00c4 1C       		.uleb128 0x1c
 991 00c5 0B       		.uleb128 0xb
 992 00c6 00       		.byte	0
 993 00c7 00       		.byte	0
 994 00c8 0F       		.uleb128 0xf
 995 00c9 2E       		.uleb128 0x2e
 996 00ca 01       		.byte	0x1
 997 00cb 3F       		.uleb128 0x3f
 998 00cc 19       		.uleb128 0x19
 999 00cd 03       		.uleb128 0x3
 1000 00ce 0E       		.uleb128 0xe
 1001 00cf 3A       		.uleb128 0x3a
 1002 00d0 0B       		.uleb128 0xb
 1003 00d1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 26


 1004 00d2 05       		.uleb128 0x5
 1005 00d3 27       		.uleb128 0x27
 1006 00d4 19       		.uleb128 0x19
 1007 00d5 49       		.uleb128 0x49
 1008 00d6 13       		.uleb128 0x13
 1009 00d7 11       		.uleb128 0x11
 1010 00d8 01       		.uleb128 0x1
 1011 00d9 12       		.uleb128 0x12
 1012 00da 06       		.uleb128 0x6
 1013 00db 40       		.uleb128 0x40
 1014 00dc 18       		.uleb128 0x18
 1015 00dd 9742     		.uleb128 0x2117
 1016 00df 19       		.uleb128 0x19
 1017 00e0 01       		.uleb128 0x1
 1018 00e1 13       		.uleb128 0x13
 1019 00e2 00       		.byte	0
 1020 00e3 00       		.byte	0
 1021 00e4 10       		.uleb128 0x10
 1022 00e5 34       		.uleb128 0x34
 1023 00e6 00       		.byte	0
 1024 00e7 03       		.uleb128 0x3
 1025 00e8 0E       		.uleb128 0xe
 1026 00e9 3A       		.uleb128 0x3a
 1027 00ea 0B       		.uleb128 0xb
 1028 00eb 3B       		.uleb128 0x3b
 1029 00ec 05       		.uleb128 0x5
 1030 00ed 49       		.uleb128 0x49
 1031 00ee 13       		.uleb128 0x13
 1032 00ef 02       		.uleb128 0x2
 1033 00f0 17       		.uleb128 0x17
 1034 00f1 00       		.byte	0
 1035 00f2 00       		.byte	0
 1036 00f3 11       		.uleb128 0x11
 1037 00f4 2E       		.uleb128 0x2e
 1038 00f5 00       		.byte	0
 1039 00f6 3F       		.uleb128 0x3f
 1040 00f7 19       		.uleb128 0x19
 1041 00f8 03       		.uleb128 0x3
 1042 00f9 0E       		.uleb128 0xe
 1043 00fa 3A       		.uleb128 0x3a
 1044 00fb 0B       		.uleb128 0xb
 1045 00fc 3B       		.uleb128 0x3b
 1046 00fd 05       		.uleb128 0x5
 1047 00fe 27       		.uleb128 0x27
 1048 00ff 19       		.uleb128 0x19
 1049 0100 11       		.uleb128 0x11
 1050 0101 01       		.uleb128 0x1
 1051 0102 12       		.uleb128 0x12
 1052 0103 06       		.uleb128 0x6
 1053 0104 40       		.uleb128 0x40
 1054 0105 18       		.uleb128 0x18
 1055 0106 9742     		.uleb128 0x2117
 1056 0108 19       		.uleb128 0x19
 1057 0109 00       		.byte	0
 1058 010a 00       		.byte	0
 1059 010b 12       		.uleb128 0x12
 1060 010c 2E       		.uleb128 0x2e
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 27


 1061 010d 00       		.byte	0
 1062 010e 3F       		.uleb128 0x3f
 1063 010f 19       		.uleb128 0x19
 1064 0110 03       		.uleb128 0x3
 1065 0111 0E       		.uleb128 0xe
 1066 0112 3A       		.uleb128 0x3a
 1067 0113 0B       		.uleb128 0xb
 1068 0114 3B       		.uleb128 0x3b
 1069 0115 05       		.uleb128 0x5
 1070 0116 27       		.uleb128 0x27
 1071 0117 19       		.uleb128 0x19
 1072 0118 49       		.uleb128 0x49
 1073 0119 13       		.uleb128 0x13
 1074 011a 11       		.uleb128 0x11
 1075 011b 01       		.uleb128 0x1
 1076 011c 12       		.uleb128 0x12
 1077 011d 06       		.uleb128 0x6
 1078 011e 40       		.uleb128 0x40
 1079 011f 18       		.uleb128 0x18
 1080 0120 9742     		.uleb128 0x2117
 1081 0122 19       		.uleb128 0x19
 1082 0123 00       		.byte	0
 1083 0124 00       		.byte	0
 1084 0125 13       		.uleb128 0x13
 1085 0126 898201   		.uleb128 0x4109
 1086 0129 01       		.byte	0x1
 1087 012a 11       		.uleb128 0x11
 1088 012b 01       		.uleb128 0x1
 1089 012c 31       		.uleb128 0x31
 1090 012d 13       		.uleb128 0x13
 1091 012e 01       		.uleb128 0x1
 1092 012f 13       		.uleb128 0x13
 1093 0130 00       		.byte	0
 1094 0131 00       		.byte	0
 1095 0132 14       		.uleb128 0x14
 1096 0133 8A8201   		.uleb128 0x410a
 1097 0136 00       		.byte	0
 1098 0137 02       		.uleb128 0x2
 1099 0138 18       		.uleb128 0x18
 1100 0139 9142     		.uleb128 0x2111
 1101 013b 18       		.uleb128 0x18
 1102 013c 00       		.byte	0
 1103 013d 00       		.byte	0
 1104 013e 15       		.uleb128 0x15
 1105 013f 01       		.uleb128 0x1
 1106 0140 01       		.byte	0x1
 1107 0141 49       		.uleb128 0x49
 1108 0142 13       		.uleb128 0x13
 1109 0143 01       		.uleb128 0x1
 1110 0144 13       		.uleb128 0x13
 1111 0145 00       		.byte	0
 1112 0146 00       		.byte	0
 1113 0147 16       		.uleb128 0x16
 1114 0148 21       		.uleb128 0x21
 1115 0149 00       		.byte	0
 1116 014a 49       		.uleb128 0x49
 1117 014b 13       		.uleb128 0x13
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 28


 1118 014c 2F       		.uleb128 0x2f
 1119 014d 0B       		.uleb128 0xb
 1120 014e 00       		.byte	0
 1121 014f 00       		.byte	0
 1122 0150 17       		.uleb128 0x17
 1123 0151 34       		.uleb128 0x34
 1124 0152 00       		.byte	0
 1125 0153 03       		.uleb128 0x3
 1126 0154 0E       		.uleb128 0xe
 1127 0155 3A       		.uleb128 0x3a
 1128 0156 0B       		.uleb128 0xb
 1129 0157 3B       		.uleb128 0x3b
 1130 0158 0B       		.uleb128 0xb
 1131 0159 49       		.uleb128 0x49
 1132 015a 13       		.uleb128 0x13
 1133 015b 3F       		.uleb128 0x3f
 1134 015c 19       		.uleb128 0x19
 1135 015d 3C       		.uleb128 0x3c
 1136 015e 19       		.uleb128 0x19
 1137 015f 00       		.byte	0
 1138 0160 00       		.byte	0
 1139 0161 18       		.uleb128 0x18
 1140 0162 2E       		.uleb128 0x2e
 1141 0163 00       		.byte	0
 1142 0164 3F       		.uleb128 0x3f
 1143 0165 19       		.uleb128 0x19
 1144 0166 3C       		.uleb128 0x3c
 1145 0167 19       		.uleb128 0x19
 1146 0168 6E       		.uleb128 0x6e
 1147 0169 0E       		.uleb128 0xe
 1148 016a 03       		.uleb128 0x3
 1149 016b 0E       		.uleb128 0xe
 1150 016c 3A       		.uleb128 0x3a
 1151 016d 0B       		.uleb128 0xb
 1152 016e 3B       		.uleb128 0x3b
 1153 016f 0B       		.uleb128 0xb
 1154 0170 00       		.byte	0
 1155 0171 00       		.byte	0
 1156 0172 00       		.byte	0
 1157              		.section	.debug_loc,"",%progbits
 1158              	.Ldebug_loc0:
 1159              	.LLST0:
 1160 0000 00000000 		.4byte	.LVL2
 1161 0004 07000000 		.4byte	.LVL4-1
 1162 0008 0100     		.2byte	0x1
 1163 000a 50       		.byte	0x50
 1164 000b 07000000 		.4byte	.LVL4-1
 1165 000f 24000000 		.4byte	.LFE38
 1166 0013 0400     		.2byte	0x4
 1167 0015 F3       		.byte	0xf3
 1168 0016 01       		.uleb128 0x1
 1169 0017 50       		.byte	0x50
 1170 0018 9F       		.byte	0x9f
 1171 0019 00000000 		.4byte	0
 1172 001d 00000000 		.4byte	0
 1173              	.LLST1:
 1174 0021 08000000 		.4byte	.LVL4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 29


 1175 0025 19000000 		.4byte	.LVL5-1
 1176 0029 0100     		.2byte	0x1
 1177 002b 50       		.byte	0x50
 1178 002c 00000000 		.4byte	0
 1179 0030 00000000 		.4byte	0
 1180              	.LLST2:
 1181 0034 06000000 		.4byte	.LVL7
 1182 0038 0A000000 		.4byte	.LVL8
 1183 003c 0500     		.2byte	0x5
 1184 003e 70       		.byte	0x70
 1185 003f 00       		.sleb128 0
 1186 0040 33       		.byte	0x33
 1187 0041 1A       		.byte	0x1a
 1188 0042 9F       		.byte	0x9f
 1189 0043 0A000000 		.4byte	.LVL8
 1190 0047 10000000 		.4byte	.LFE39
 1191 004b 0100     		.2byte	0x1
 1192 004d 50       		.byte	0x50
 1193 004e 00000000 		.4byte	0
 1194 0052 00000000 		.4byte	0
 1195              	.LLST3:
 1196 0056 00000000 		.4byte	.LVL13
 1197 005a 07000000 		.4byte	.LVL14-1
 1198 005e 0100     		.2byte	0x1
 1199 0060 50       		.byte	0x50
 1200 0061 07000000 		.4byte	.LVL14-1
 1201 0065 18000000 		.4byte	.LVL18
 1202 0069 0100     		.2byte	0x1
 1203 006b 54       		.byte	0x54
 1204 006c 18000000 		.4byte	.LVL18
 1205 0070 1A000000 		.4byte	.LFE33
 1206 0074 0400     		.2byte	0x4
 1207 0076 F3       		.byte	0xf3
 1208 0077 01       		.uleb128 0x1
 1209 0078 50       		.byte	0x50
 1210 0079 9F       		.byte	0x9f
 1211 007a 00000000 		.4byte	0
 1212 007e 00000000 		.4byte	0
 1213              		.section	.debug_aranges,"",%progbits
 1214 0000 7C000000 		.4byte	0x7c
 1215 0004 0200     		.2byte	0x2
 1216 0006 00000000 		.4byte	.Ldebug_info0
 1217 000a 04       		.byte	0x4
 1218 000b 00       		.byte	0
 1219 000c 0000     		.2byte	0
 1220 000e 0000     		.2byte	0
 1221 0010 00000000 		.4byte	.LFB35
 1222 0014 08000000 		.4byte	.LFE35-.LFB35
 1223 0018 00000000 		.4byte	.LFB36
 1224 001c 0C000000 		.4byte	.LFE36-.LFB36
 1225 0020 00000000 		.4byte	.LFB37
 1226 0024 0C000000 		.4byte	.LFE37-.LFB37
 1227 0028 00000000 		.4byte	.LFB38
 1228 002c 24000000 		.4byte	.LFE38-.LFB38
 1229 0030 00000000 		.4byte	.LFB39
 1230 0034 10000000 		.4byte	.LFE39-.LFB39
 1231 0038 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 30


 1232 003c 0C000000 		.4byte	.LFE40-.LFB40
 1233 0040 00000000 		.4byte	.LFB41
 1234 0044 14000000 		.4byte	.LFE41-.LFB41
 1235 0048 00000000 		.4byte	.LFB42
 1236 004c 0C000000 		.4byte	.LFE42-.LFB42
 1237 0050 00000000 		.4byte	.LFB32
 1238 0054 1C000000 		.4byte	.LFE32-.LFB32
 1239 0058 00000000 		.4byte	.LFB33
 1240 005c 1A000000 		.4byte	.LFE33-.LFB33
 1241 0060 00000000 		.4byte	.LFB34
 1242 0064 14000000 		.4byte	.LFE34-.LFB34
 1243 0068 00000000 		.4byte	.LFB43
 1244 006c 0C000000 		.4byte	.LFE43-.LFB43
 1245 0070 00000000 		.4byte	.LFB44
 1246 0074 0C000000 		.4byte	.LFE44-.LFB44
 1247 0078 00000000 		.4byte	0
 1248 007c 00000000 		.4byte	0
 1249              		.section	.debug_ranges,"",%progbits
 1250              	.Ldebug_ranges0:
 1251 0000 00000000 		.4byte	.LFB35
 1252 0004 08000000 		.4byte	.LFE35
 1253 0008 00000000 		.4byte	.LFB36
 1254 000c 0C000000 		.4byte	.LFE36
 1255 0010 00000000 		.4byte	.LFB37
 1256 0014 0C000000 		.4byte	.LFE37
 1257 0018 00000000 		.4byte	.LFB38
 1258 001c 24000000 		.4byte	.LFE38
 1259 0020 00000000 		.4byte	.LFB39
 1260 0024 10000000 		.4byte	.LFE39
 1261 0028 00000000 		.4byte	.LFB40
 1262 002c 0C000000 		.4byte	.LFE40
 1263 0030 00000000 		.4byte	.LFB41
 1264 0034 14000000 		.4byte	.LFE41
 1265 0038 00000000 		.4byte	.LFB42
 1266 003c 0C000000 		.4byte	.LFE42
 1267 0040 00000000 		.4byte	.LFB32
 1268 0044 1C000000 		.4byte	.LFE32
 1269 0048 00000000 		.4byte	.LFB33
 1270 004c 1A000000 		.4byte	.LFE33
 1271 0050 00000000 		.4byte	.LFB34
 1272 0054 14000000 		.4byte	.LFE34
 1273 0058 00000000 		.4byte	.LFB43
 1274 005c 0C000000 		.4byte	.LFE43
 1275 0060 00000000 		.4byte	.LFB44
 1276 0064 0C000000 		.4byte	.LFE44
 1277 0068 00000000 		.4byte	0
 1278 006c 00000000 		.4byte	0
 1279              		.section	.debug_line,"",%progbits
 1280              	.Ldebug_line0:
 1281 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1281      02007300 
 1281      00000201 
 1281      FB0E0D00 
 1281      01010101 
 1282              	.LASF14:
 1283 0000 72656733 		.ascii	"reg32\000"
 1283      3200
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 31


 1284              	.LASF41:
 1285 0006 43795261 		.ascii	"CyRamVectors\000"
 1285      6D566563 
 1285      746F7273 
 1285      00
 1286              	.LASF25:
 1287 0013 436F6D6D 		.ascii	"CommTimeoutISR_GetVector\000"
 1287      54696D65 
 1287      6F757449 
 1287      53525F47 
 1287      65745665 
 1288              	.LASF18:
 1289 002c 436F6D6D 		.ascii	"CommTimeoutISR_Interrupt\000"
 1289      54696D65 
 1289      6F757449 
 1289      53525F49 
 1289      6E746572 
 1290              	.LASF30:
 1291 0045 436F6D6D 		.ascii	"CommTimeoutISR_StartEx\000"
 1291      54696D65 
 1291      6F757449 
 1291      53525F53 
 1291      74617274 
 1292              	.LASF11:
 1293 005c 666C6F61 		.ascii	"float\000"
 1293      7400
 1294              	.LASF1:
 1295 0062 756E7369 		.ascii	"unsigned char\000"
 1295      676E6564 
 1295      20636861 
 1295      7200
 1296              	.LASF33:
 1297 0070 436F6D6D 		.ascii	"CommTimeoutISR_ClearPending\000"
 1297      54696D65 
 1297      6F757449 
 1297      53525F43 
 1297      6C656172 
 1298              	.LASF23:
 1299 008c 696E7465 		.ascii	"interruptState\000"
 1299      72727570 
 1299      74537461 
 1299      746500
 1300              	.LASF5:
 1301 009b 6C6F6E67 		.ascii	"long unsigned int\000"
 1301      20756E73 
 1301      69676E65 
 1301      6420696E 
 1301      7400
 1302              	.LASF3:
 1303 00ad 73686F72 		.ascii	"short unsigned int\000"
 1303      7420756E 
 1303      7369676E 
 1303      65642069 
 1303      6E7400
 1304              	.LASF22:
 1305 00c0 7072696F 		.ascii	"priority\000"
 1305      72697479 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 32


 1305      00
 1306              	.LASF28:
 1307 00c9 436F6D6D 		.ascii	"CommTimeoutISR_Disable\000"
 1307      54696D65 
 1307      6F757449 
 1307      53525F44 
 1307      69736162 
 1308              	.LASF32:
 1309 00e0 436F6D6D 		.ascii	"CommTimeoutISR_SetPending\000"
 1309      54696D65 
 1309      6F757449 
 1309      53525F53 
 1309      65745065 
 1310              	.LASF12:
 1311 00fa 646F7562 		.ascii	"double\000"
 1311      6C6500
 1312              	.LASF10:
 1313 0101 75696E74 		.ascii	"uint32\000"
 1313      333200
 1314              	.LASF35:
 1315 0108 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1315      74657243 
 1315      72697469 
 1315      63616C53 
 1315      65637469 
 1316              	.LASF8:
 1317 011f 756E7369 		.ascii	"unsigned int\000"
 1317      676E6564 
 1317      20696E74 
 1317      00
 1318              	.LASF21:
 1319 012c 61646472 		.ascii	"address\000"
 1319      65737300 
 1320              	.LASF7:
 1321 0134 6C6F6E67 		.ascii	"long long unsigned int\000"
 1321      206C6F6E 
 1321      6720756E 
 1321      7369676E 
 1321      65642069 
 1322              	.LASF15:
 1323 014b 63796973 		.ascii	"cyisraddress\000"
 1323      72616464 
 1323      72657373 
 1323      00
 1324              	.LASF27:
 1325 0158 436F6D6D 		.ascii	"CommTimeoutISR_Enable\000"
 1325      54696D65 
 1325      6F757449 
 1325      53525F45 
 1325      6E61626C 
 1326              	.LASF34:
 1327 016e 70726F63 		.ascii	"processTimeoutTimerRoutine\000"
 1327      65737354 
 1327      696D656F 
 1327      75745469 
 1327      6D657252 
 1328              	.LASF38:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 33


 1329 0189 47656E65 		.ascii	"Generated_Source\\PSoC4\\CommTimeoutISR.c\000"
 1329      72617465 
 1329      645F536F 
 1329      75726365 
 1329      5C50536F 
 1330              	.LASF40:
 1331 01b1 436F6D6D 		.ascii	"CommTimeoutISR_GetPriority\000"
 1331      54696D65 
 1331      6F757449 
 1331      53525F47 
 1331      65745072 
 1332              	.LASF37:
 1333 01cc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1333      43313120 
 1333      352E342E 
 1333      31203230 
 1333      31363036 
 1334 01ff 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1334      20726576 
 1334      6973696F 
 1334      6E203233 
 1334      37373135 
 1335 0232 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1335      66756E63 
 1335      74696F6E 
 1335      2D736563 
 1335      74696F6E 
 1336              	.LASF17:
 1337 025a 73697A65 		.ascii	"sizetype\000"
 1337      74797065 
 1337      00
 1338              	.LASF6:
 1339 0263 6C6F6E67 		.ascii	"long long int\000"
 1339      206C6F6E 
 1339      6720696E 
 1339      7400
 1340              	.LASF19:
 1341 0271 436F6D6D 		.ascii	"CommTimeoutISR_SetVector\000"
 1341      54696D65 
 1341      6F757449 
 1341      53525F53 
 1341      65745665 
 1342              	.LASF13:
 1343 028a 63686172 		.ascii	"char\000"
 1343      00
 1344              	.LASF2:
 1345 028f 73686F72 		.ascii	"short int\000"
 1345      7420696E 
 1345      7400
 1346              	.LASF9:
 1347 0299 75696E74 		.ascii	"uint8\000"
 1347      3800
 1348              	.LASF26:
 1349 029f 436F6D6D 		.ascii	"CommTimeoutISR_GetState\000"
 1349      54696D65 
 1349      6F757449 
 1349      53525F47 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 34


 1349      65745374 
 1350              	.LASF36:
 1351 02b7 43794578 		.ascii	"CyExitCriticalSection\000"
 1351      69744372 
 1351      69746963 
 1351      616C5365 
 1351      6374696F 
 1352              	.LASF24:
 1353 02cd 7072696F 		.ascii	"priorityOffset\000"
 1353      72697479 
 1353      4F666673 
 1353      657400
 1354              	.LASF31:
 1355 02dc 436F6D6D 		.ascii	"CommTimeoutISR_Stop\000"
 1355      54696D65 
 1355      6F757449 
 1355      53525F53 
 1355      746F7000 
 1356              	.LASF4:
 1357 02f0 6C6F6E67 		.ascii	"long int\000"
 1357      20696E74 
 1357      00
 1358              	.LASF16:
 1359 02f9 6C6F6E67 		.ascii	"long double\000"
 1359      20646F75 
 1359      626C6500 
 1360              	.LASF0:
 1361 0305 7369676E 		.ascii	"signed char\000"
 1361      65642063 
 1361      68617200 
 1362              	.LASF20:
 1363 0311 436F6D6D 		.ascii	"CommTimeoutISR_SetPriority\000"
 1363      54696D65 
 1363      6F757449 
 1363      53525F53 
 1363      65745072 
 1364              	.LASF39:
 1365 032c 433A5C55 		.ascii	"C:\\Users\\kylep\\Box Sync\\Box Sync\\Feniex Electr"
 1365      73657273 
 1365      5C6B796C 
 1365      65705C42 
 1365      6F782053 
 1366 035a 6963616C 		.ascii	"ical Files\\WorkingFolder-Kyle\\Firm-AI-Cube\\81-00"
 1366      2046696C 
 1366      65735C57 
 1366      6F726B69 
 1366      6E67466F 
 1367 038a 3032342D 		.ascii	"024-01.cydsn\000"
 1367      30312E63 
 1367      7964736E 
 1367      00
 1368              	.LASF29:
 1369 0397 436F6D6D 		.ascii	"CommTimeoutISR_Start\000"
 1369      54696D65 
 1369      6F757449 
 1369      53525F53 
 1369      74617274 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccRh8esq.s 			page 35


 1370              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
