ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103 002e 0000     		.section	.text.CySysClkImoStart,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStart
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStart, %function
 109              	CySysClkImoStart:
 110              	.LFB0:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 3


 111              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:.\Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:.\Generated_Source\PSoC4/CyLib.c **** *
   9:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:.\Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:.\Generated_Source\PSoC4/CyLib.c **** *
  13:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC4/CyLib.c **** 
  20:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLib.c **** 
  22:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:.\Generated_Source\PSoC4/CyLib.c **** 
  27:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** 
  35:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** 
  43:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:.\Generated_Source\PSoC4/CyLib.c **** *
  47:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:.\Generated_Source\PSoC4/CyLib.c **** *
  50:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 4


  57:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:.\Generated_Source\PSoC4/CyLib.c **** 
  74:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:.\Generated_Source\PSoC4/CyLib.c **** 
  85:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:.\Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:.\Generated_Source\PSoC4/CyLib.c **** 
  90:.\Generated_Source\PSoC4/CyLib.c **** 
  91:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:.\Generated_Source\PSoC4/CyLib.c **** *
  95:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:.\Generated_Source\PSoC4/CyLib.c **** *
  98:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:.\Generated_Source\PSoC4/CyLib.c **** *
 101:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:.\Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:.\Generated_Source\PSoC4/CyLib.c **** *
 104:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:.\Generated_Source\PSoC4/CyLib.c **** *  None
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  None
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 112:.\Generated_Source\PSoC4/CyLib.c **** {
 112              		.loc 1 112 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 5


 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 113:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 120              		.loc 1 113 0
 121 0004 044B     		ldr	r3, .L2
 122 0006 044A     		ldr	r2, .L2
 123 0008 1268     		ldr	r2, [r2]
 124 000a 8021     		mov	r1, #128
 125 000c 0906     		lsl	r1, r1, #24
 126 000e 0A43     		orr	r2, r1
 127 0010 1A60     		str	r2, [r3]
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** 
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:.\Generated_Source\PSoC4/CyLib.c **** 
 128:.\Generated_Source\PSoC4/CyLib.c **** }
 128              		.loc 1 128 0
 129 0012 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0014 80BD     		pop	{r7, pc}
 132              	.L3:
 133 0016 C046     		.align	2
 134              	.L2:
 135 0018 08010B40 		.word	1074462984
 136              		.cfi_endproc
 137              	.LFE0:
 138              		.size	CySysClkImoStart, .-CySysClkImoStart
 139              		.section	.text.CySysClkImoStop,"ax",%progbits
 140              		.align	2
 141              		.global	CySysClkImoStop
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkImoStop, %function
 145              	CySysClkImoStop:
 146              	.LFB1:
 129:.\Generated_Source\PSoC4/CyLib.c **** 
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 6


 136:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:.\Generated_Source\PSoC4/CyLib.c **** *
 138:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:.\Generated_Source\PSoC4/CyLib.c **** *
 140:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:.\Generated_Source\PSoC4/CyLib.c **** *
 142:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c **** *  None
 144:.\Generated_Source\PSoC4/CyLib.c **** *
 145:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 146:.\Generated_Source\PSoC4/CyLib.c **** *  None
 147:.\Generated_Source\PSoC4/CyLib.c **** *
 148:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:.\Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 150 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 151:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:.\Generated_Source\PSoC4/CyLib.c **** 
 155:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:.\Generated_Source\PSoC4/CyLib.c **** 
 159:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 155              		.loc 1 159 0
 156 0004 034B     		ldr	r3, .L5
 157 0006 034A     		ldr	r2, .L5
 158 0008 1268     		ldr	r2, [r2]
 159 000a 5200     		lsl	r2, r2, #1
 160 000c 5208     		lsr	r2, r2, #1
 161 000e 1A60     		str	r2, [r3]
 160:.\Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 160 0
 163 0010 BD46     		mov	sp, r7
 164              		@ sp needed
 165 0012 80BD     		pop	{r7, pc}
 166              	.L6:
 167              		.align	2
 168              	.L5:
 169 0014 08010B40 		.word	1074462984
 170              		.cfi_endproc
 171              	.LFE1:
 172              		.size	CySysClkImoStop, .-CySysClkImoStop
 173              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 174              		.align	2
 175              		.global	CySysClkWriteHfclkDirect
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkWriteHfclkDirect, %function
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 7


 179              	CySysClkWriteHfclkDirect:
 180              	.LFB2:
 161:.\Generated_Source\PSoC4/CyLib.c **** 
 162:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:.\Generated_Source\PSoC4/CyLib.c **** 
 164:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:.\Generated_Source\PSoC4/CyLib.c ****     *
 173:.\Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:.\Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:.\Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
 177:.\Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:.\Generated_Source\PSoC4/CyLib.c ****     *
 179:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:.\Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:.\Generated_Source\PSoC4/CyLib.c ****     *
 182:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:.\Generated_Source\PSoC4/CyLib.c ****     *
 184:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 186:.\Generated_Source\PSoC4/CyLib.c ****     *
 187:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 189:.\Generated_Source\PSoC4/CyLib.c ****     *
 190:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:.\Generated_Source\PSoC4/CyLib.c ****     {
 193:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:.\Generated_Source\PSoC4/CyLib.c ****         {
 202:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:.\Generated_Source\PSoC4/CyLib.c **** 
 204:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 208:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:.\Generated_Source\PSoC4/CyLib.c **** 
 211:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:.\Generated_Source\PSoC4/CyLib.c ****             {
 214:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 8


 216:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 218:.\Generated_Source\PSoC4/CyLib.c ****                 }
 219:.\Generated_Source\PSoC4/CyLib.c ****             }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****             {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****             }
 227:.\Generated_Source\PSoC4/CyLib.c **** 
 228:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:.\Generated_Source\PSoC4/CyLib.c **** 
 233:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 234:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:.\Generated_Source\PSoC4/CyLib.c **** 
 236:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:.\Generated_Source\PSoC4/CyLib.c **** 
 239:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:.\Generated_Source\PSoC4/CyLib.c ****             {
 242:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:.\Generated_Source\PSoC4/CyLib.c ****             }
 244:.\Generated_Source\PSoC4/CyLib.c ****             else
 245:.\Generated_Source\PSoC4/CyLib.c ****             {
 246:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:.\Generated_Source\PSoC4/CyLib.c **** 
 249:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:.\Generated_Source\PSoC4/CyLib.c **** 
 252:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:.\Generated_Source\PSoC4/CyLib.c ****             }
 254:.\Generated_Source\PSoC4/CyLib.c **** 
 255:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 257:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 259:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:.\Generated_Source\PSoC4/CyLib.c **** 
 263:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:.\Generated_Source\PSoC4/CyLib.c ****         }
 265:.\Generated_Source\PSoC4/CyLib.c ****     }
 266:.\Generated_Source\PSoC4/CyLib.c **** 
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:.\Generated_Source\PSoC4/CyLib.c ****     *
 272:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 9


 273:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:.\Generated_Source\PSoC4/CyLib.c ****     *
 277:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 279:.\Generated_Source\PSoC4/CyLib.c ****     *
 280:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 282:.\Generated_Source\PSoC4/CyLib.c ****     *
 283:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:.\Generated_Source\PSoC4/CyLib.c ****     {
 286:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 287:.\Generated_Source\PSoC4/CyLib.c ****     }
 288:.\Generated_Source\PSoC4/CyLib.c **** 
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:.\Generated_Source\PSoC4/CyLib.c ****     *
 299:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 301:.\Generated_Source\PSoC4/CyLib.c ****     *
 302:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:.\Generated_Source\PSoC4/CyLib.c ****     *
 305:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:.\Generated_Source\PSoC4/CyLib.c ****     {
 308:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 309:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 310:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:.\Generated_Source\PSoC4/CyLib.c ****     }
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:.\Generated_Source\PSoC4/CyLib.c **** 
 315:.\Generated_Source\PSoC4/CyLib.c **** 
 316:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:.\Generated_Source\PSoC4/CyLib.c **** 
 318:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:.\Generated_Source\PSoC4/CyLib.c ****     *
 322:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:.\Generated_Source\PSoC4/CyLib.c ****     *
 325:.\Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:.\Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 10


 330:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:.\Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:.\Generated_Source\PSoC4/CyLib.c ****     *
 333:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 335:.\Generated_Source\PSoC4/CyLib.c ****     *
 336:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 338:.\Generated_Source\PSoC4/CyLib.c ****     *
 339:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:.\Generated_Source\PSoC4/CyLib.c ****     {
 342:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:.\Generated_Source\PSoC4/CyLib.c **** 
 348:.\Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:.\Generated_Source\PSoC4/CyLib.c **** 
 353:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:.\Generated_Source\PSoC4/CyLib.c ****     }
 355:.\Generated_Source\PSoC4/CyLib.c **** 
 356:.\Generated_Source\PSoC4/CyLib.c **** 
 357:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:.\Generated_Source\PSoC4/CyLib.c ****     *
 361:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:.\Generated_Source\PSoC4/CyLib.c ****     *
 364:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:.\Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:.\Generated_Source\PSoC4/CyLib.c ****     *
 367:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
 368:.\Generated_Source\PSoC4/CyLib.c ****     *
 369:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 371:.\Generated_Source\PSoC4/CyLib.c ****     *
 372:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 373:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 374:.\Generated_Source\PSoC4/CyLib.c ****     *
 375:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:.\Generated_Source\PSoC4/CyLib.c ****     {
 378:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 379:.\Generated_Source\PSoC4/CyLib.c **** 
 380:.\Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:.\Generated_Source\PSoC4/CyLib.c ****     }
 384:.\Generated_Source\PSoC4/CyLib.c **** 
 385:.\Generated_Source\PSoC4/CyLib.c **** 
 386:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 11


 387:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:.\Generated_Source\PSoC4/CyLib.c ****     *
 390:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:.\Generated_Source\PSoC4/CyLib.c ****     *
 393:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:.\Generated_Source\PSoC4/CyLib.c ****     *
 395:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 397:.\Generated_Source\PSoC4/CyLib.c ****     *
 398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:.\Generated_Source\PSoC4/CyLib.c ****     *
 401:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:.\Generated_Source\PSoC4/CyLib.c ****     {
 404:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:.\Generated_Source\PSoC4/CyLib.c ****     }
 408:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:.\Generated_Source\PSoC4/CyLib.c **** 
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c **** 
 412:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:.\Generated_Source\PSoC4/CyLib.c **** *
 416:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:.\Generated_Source\PSoC4/CyLib.c **** *
 419:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 425:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 430:.\Generated_Source\PSoC4/CyLib.c **** *
 431:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 432:.\Generated_Source\PSoC4/CyLib.c **** *  None
 433:.\Generated_Source\PSoC4/CyLib.c **** *
 434:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 436:.\Generated_Source\PSoC4/CyLib.c **** *
 437:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:.\Generated_Source\PSoC4/CyLib.c **** *
 441:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 12


 444:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:.\Generated_Source\PSoC4/CyLib.c **** *
 448:.\Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:.\Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:.\Generated_Source\PSoC4/CyLib.c **** *
 451:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:.\Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 453 0
 182              		.cfi_startproc
 183 0000 90B5     		push	{r4, r7, lr}
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              		.cfi_def_cfa_offset 32
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 454:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:.\Generated_Source\PSoC4/CyLib.c **** 
 457:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 193              		.loc 1 457 0
 194 0008 0F23     		mov	r3, #15
 195 000a FC18     		add	r4, r7, r3
 196 000c FFF7FEFF 		bl	CyEnterCriticalSection
 197 0010 031C     		mov	r3, r0
 198 0012 2370     		strb	r3, [r4]
 458:.\Generated_Source\PSoC4/CyLib.c **** 
 459:.\Generated_Source\PSoC4/CyLib.c **** 
 460:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 199              		.loc 1 460 0
 200 0014 0B4B     		ldr	r3, .L8
 201 0016 1B68     		ldr	r3, [r3]
 202 0018 0722     		mov	r2, #7
 203 001a 9343     		bic	r3, r2
 204 001c BB60     		str	r3, [r7, #8]
 461:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:.\Generated_Source\PSoC4/CyLib.c **** 
 463:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 465:.\Generated_Source\PSoC4/CyLib.c ****     {
 466:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:.\Generated_Source\PSoC4/CyLib.c ****     }
 468:.\Generated_Source\PSoC4/CyLib.c ****     else
 469:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:.\Generated_Source\PSoC4/CyLib.c ****     {
 471:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 205              		.loc 1 471 0
 206 001e 7B68     		ldr	r3, [r7, #4]
 207 0020 0722     		mov	r2, #7
 208 0022 1340     		and	r3, r2
 209 0024 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 13


 210 0026 1343     		orr	r3, r2
 211 0028 BB60     		str	r3, [r7, #8]
 472:.\Generated_Source\PSoC4/CyLib.c ****     }
 473:.\Generated_Source\PSoC4/CyLib.c **** 
 474:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 212              		.loc 1 474 0
 213 002a 064B     		ldr	r3, .L8
 214 002c BA68     		ldr	r2, [r7, #8]
 215 002e 1A60     		str	r2, [r3]
 475:.\Generated_Source\PSoC4/CyLib.c **** 
 476:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 216              		.loc 1 476 0
 217 0030 0F23     		mov	r3, #15
 218 0032 FB18     		add	r3, r7, r3
 219 0034 1B78     		ldrb	r3, [r3]
 220 0036 181C     		mov	r0, r3
 221 0038 FFF7FEFF 		bl	CyExitCriticalSection
 477:.\Generated_Source\PSoC4/CyLib.c **** }
 222              		.loc 1 477 0
 223 003c BD46     		mov	sp, r7
 224 003e 05B0     		add	sp, sp, #20
 225              		@ sp needed
 226 0040 90BD     		pop	{r4, r7, pc}
 227              	.L9:
 228 0042 C046     		.align	2
 229              	.L8:
 230 0044 00010B40 		.word	1074462976
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 234              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 235              		.align	2
 236              		.global	CySysClkGetSysclkSource
 237              		.code	16
 238              		.thumb_func
 239              		.type	CySysClkGetSysclkSource, %function
 240              	CySysClkGetSysclkSource:
 241              	.LFB3:
 478:.\Generated_Source\PSoC4/CyLib.c **** 
 479:.\Generated_Source\PSoC4/CyLib.c **** 
 480:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:.\Generated_Source\PSoC4/CyLib.c **** *
 484:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
 486:.\Generated_Source\PSoC4/CyLib.c **** *
 487:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:.\Generated_Source\PSoC4/CyLib.c **** *  None
 489:.\Generated_Source\PSoC4/CyLib.c **** *
 490:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 491:.\Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:.\Generated_Source\PSoC4/CyLib.c **** {
 242              		.loc 1 495 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 14


 243              		.cfi_startproc
 244 0000 90B5     		push	{r4, r7, lr}
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 496:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:.\Generated_Source\PSoC4/CyLib.c **** 
 499:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 253              		.loc 1 499 0
 254 0006 FC1D     		add	r4, r7, #7
 255 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000c 031C     		mov	r3, r0
 257 000e 2370     		strb	r3, [r4]
 500:.\Generated_Source\PSoC4/CyLib.c **** 
 501:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:.\Generated_Source\PSoC4/CyLib.c ****     {
 504:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:.\Generated_Source\PSoC4/CyLib.c ****     }
 506:.\Generated_Source\PSoC4/CyLib.c ****     else
 507:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:.\Generated_Source\PSoC4/CyLib.c ****     {
 509:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 258              		.loc 1 509 0
 259 0010 074B     		ldr	r3, .L12
 260 0012 1B68     		ldr	r3, [r3]
 261 0014 0722     		mov	r2, #7
 262 0016 1340     		and	r3, r2
 263 0018 3B60     		str	r3, [r7]
 510:.\Generated_Source\PSoC4/CyLib.c ****     }
 511:.\Generated_Source\PSoC4/CyLib.c **** 
 512:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 264              		.loc 1 512 0
 265 001a FB1D     		add	r3, r7, #7
 266 001c 1B78     		ldrb	r3, [r3]
 267 001e 181C     		mov	r0, r3
 268 0020 FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/CyLib.c **** 
 514:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 269              		.loc 1 514 0
 270 0024 3B68     		ldr	r3, [r7]
 515:.\Generated_Source\PSoC4/CyLib.c **** }
 271              		.loc 1 515 0
 272 0026 181C     		mov	r0, r3
 273 0028 BD46     		mov	sp, r7
 274 002a 03B0     		add	sp, sp, #12
 275              		@ sp needed
 276 002c 90BD     		pop	{r4, r7, pc}
 277              	.L13:
 278 002e C046     		.align	2
 279              	.L12:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 15


 280 0030 00010B40 		.word	1074462976
 281              		.cfi_endproc
 282              	.LFE3:
 283              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 284              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 285              		.align	2
 286              		.global	CySysClkWriteSysclkDiv
 287              		.code	16
 288              		.thumb_func
 289              		.type	CySysClkWriteSysclkDiv, %function
 290              	CySysClkWriteSysclkDiv:
 291              	.LFB4:
 516:.\Generated_Source\PSoC4/CyLib.c **** 
 517:.\Generated_Source\PSoC4/CyLib.c **** 
 518:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:.\Generated_Source\PSoC4/CyLib.c **** *
 522:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 524:.\Generated_Source\PSoC4/CyLib.c **** *
 525:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:.\Generated_Source\PSoC4/CyLib.c **** *
 528:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:.\Generated_Source\PSoC4/CyLib.c **** *
 538:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 539:.\Generated_Source\PSoC4/CyLib.c **** *  None
 540:.\Generated_Source\PSoC4/CyLib.c **** *
 541:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 548:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:.\Generated_Source\PSoC4/CyLib.c **** *
 553:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:.\Generated_Source\PSoC4/CyLib.c **** {
 292              		.loc 1 555 0
 293              		.cfi_startproc
 294 0000 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 16


 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 85B0     		sub	sp, sp, #20
 300              		.cfi_def_cfa_offset 32
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 556:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 304              		.loc 1 558 0
 305 0008 0F23     		mov	r3, #15
 306 000a FC18     		add	r4, r7, r3
 307 000c FFF7FEFF 		bl	CyEnterCriticalSection
 308 0010 031C     		mov	r3, r0
 309 0012 2370     		strb	r3, [r4]
 559:.\Generated_Source\PSoC4/CyLib.c **** 
 560:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 310              		.loc 1 560 0
 311 0014 094B     		ldr	r3, .L15
 312 0016 7A68     		ldr	r2, [r7, #4]
 313 0018 0721     		mov	r1, #7
 314 001a 0A40     		and	r2, r1
 315 001c D104     		lsl	r1, r2, #19
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 316              		.loc 1 562 0
 317 001e 074A     		ldr	r2, .L15
 318 0020 1268     		ldr	r2, [r2]
 319 0022 0748     		ldr	r0, .L15+4
 320 0024 0240     		and	r2, r0
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 321              		.loc 1 561 0
 322 0026 0A43     		orr	r2, r1
 560:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 323              		.loc 1 560 0
 324 0028 1A60     		str	r2, [r3]
 563:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 325              		.loc 1 565 0
 326 002a 0F23     		mov	r3, #15
 327 002c FB18     		add	r3, r7, r3
 328 002e 1B78     		ldrb	r3, [r3]
 329 0030 181C     		mov	r0, r3
 330 0032 FFF7FEFF 		bl	CyExitCriticalSection
 566:.\Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 566 0
 332 0036 BD46     		mov	sp, r7
 333 0038 05B0     		add	sp, sp, #20
 334              		@ sp needed
 335 003a 90BD     		pop	{r4, r7, pc}
 336              	.L16:
 337              		.align	2
 338              	.L15:
 339 003c 00010B40 		.word	1074462976
 340 0040 FFFFC7FF 		.word	-3670017
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 17


 341              		.cfi_endproc
 342              	.LFE4:
 343              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 344              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 345              		.align	2
 346              		.global	CySysClkWriteImoFreq
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteImoFreq, %function
 350              	CySysClkWriteImoFreq:
 351              	.LFB5:
 567:.\Generated_Source\PSoC4/CyLib.c **** 
 568:.\Generated_Source\PSoC4/CyLib.c **** 
 569:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/CyLib.c **** *
 573:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:.\Generated_Source\PSoC4/CyLib.c **** *
 576:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 578:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:.\Generated_Source\PSoC4/CyLib.c **** *
 580:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:.\Generated_Source\PSoC4/CyLib.c **** *
 584:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:.\Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:.\Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:.\Generated_Source\PSoC4/CyLib.c **** *
 588:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
 589:.\Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:.\Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:.\Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:.\Generated_Source\PSoC4/CyLib.c **** *
 593:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:.\Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:.\Generated_Source\PSoC4/CyLib.c **** *
 596:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:.\Generated_Source\PSoC4/CyLib.c **** *
 600:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:.\Generated_Source\PSoC4/CyLib.c **** *
 602:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:.\Generated_Source\PSoC4/CyLib.c **** *
 605:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 606:.\Generated_Source\PSoC4/CyLib.c **** *  None
 607:.\Generated_Source\PSoC4/CyLib.c **** *
 608:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 18


 613:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:.\Generated_Source\PSoC4/CyLib.c **** *
 616:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:.\Generated_Source\PSoC4/CyLib.c **** *
 620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 622:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:.\Generated_Source\PSoC4/CyLib.c ****     {
 352              		.loc 1 623 0
 353              		.cfi_startproc
 354 0000 90B5     		push	{r4, r7, lr}
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 85B0     		sub	sp, sp, #20
 360              		.cfi_def_cfa_offset 32
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 624:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:.\Generated_Source\PSoC4/CyLib.c ****         #else
 628:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:.\Generated_Source\PSoC4/CyLib.c **** 
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 364              		.loc 1 646 0
 365 0008 0C23     		mov	r3, #12
 366 000a FC18     		add	r4, r7, r3
 367 000c FFF7FEFF 		bl	CyEnterCriticalSection
 368 0010 031C     		mov	r3, r0
 369 0012 2370     		strb	r3, [r4]
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:.\Generated_Source\PSoC4/CyLib.c ****             {
 651:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 19


 652:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:.\Generated_Source\PSoC4/CyLib.c ****             }
 654:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:.\Generated_Source\PSoC4/CyLib.c **** 
 656:.\Generated_Source\PSoC4/CyLib.c **** 
 657:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:.\Generated_Source\PSoC4/CyLib.c **** 
 659:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:.\Generated_Source\PSoC4/CyLib.c ****                 {
 662:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:.\Generated_Source\PSoC4/CyLib.c **** 
 664:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:.\Generated_Source\PSoC4/CyLib.c ****                 {
 666:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:.\Generated_Source\PSoC4/CyLib.c ****                 }
 669:.\Generated_Source\PSoC4/CyLib.c **** 
 670:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:.\Generated_Source\PSoC4/CyLib.c ****                 }
 672:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:.\Generated_Source\PSoC4/CyLib.c **** 
 674:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:.\Generated_Source\PSoC4/CyLib.c **** 
 676:.\Generated_Source\PSoC4/CyLib.c **** 
 677:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:.\Generated_Source\PSoC4/CyLib.c **** 
 679:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:.\Generated_Source\PSoC4/CyLib.c **** 
 685:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 690:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 692:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:.\Generated_Source\PSoC4/CyLib.c **** 
 694:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:.\Generated_Source\PSoC4/CyLib.c **** 
 696:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 370              		.loc 1 696 0
 371 0014 7B68     		ldr	r3, [r7, #4]
 372 0016 022B     		cmp	r3, #2
 373 0018 00D8     		bhi	.LCB233
 374 001a B2E0     		b	.L18	@long jump
 375              	.LCB233:
 376              		.loc 1 696 0 is_stmt 0 discriminator 1
 377 001c 7B68     		ldr	r3, [r7, #4]
 378 001e 302B     		cmp	r3, #48
 379 0020 00D9     		bls	.LCB236
 380 0022 AEE0     		b	.L18	@long jump
 381              	.LCB236:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 20


 697:.\Generated_Source\PSoC4/CyLib.c ****         {
 698:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 382              		.loc 1 698 0 is_stmt 1
 383 0024 5B4B     		ldr	r3, .L28
 384 0026 1B78     		ldrb	r3, [r3]
 385 0028 DBB2     		uxtb	r3, r3
 386 002a 1A1E     		sub	r2, r3, #0
 387 002c 7B68     		ldr	r3, [r7, #4]
 388 002e 9A42     		cmp	r2, r3
 389 0030 0AD3     		bcc	.L19
 699:.\Generated_Source\PSoC4/CyLib.c ****             {
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 390              		.loc 1 700 0
 391 0032 594A     		ldr	r2, .L28+4
 392 0034 0F23     		mov	r3, #15
 393 0036 FB18     		add	r3, r7, r3
 394 0038 1278     		ldrb	r2, [r2]
 395 003a 1A70     		strb	r2, [r3]
 701:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 396              		.loc 1 701 0
 397 003c 574A     		ldr	r2, .L28+8
 398 003e 0E23     		mov	r3, #14
 399 0040 FB18     		add	r3, r7, r3
 400 0042 1278     		ldrb	r2, [r2]
 401 0044 1A70     		strb	r2, [r3]
 402 0046 3FE0     		b	.L20
 403              	.L19:
 702:.\Generated_Source\PSoC4/CyLib.c ****             }
 703:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 404              		.loc 1 703 0
 405 0048 554B     		ldr	r3, .L28+12
 406 004a 1B78     		ldrb	r3, [r3]
 407 004c DBB2     		uxtb	r3, r3
 408 004e 1A1E     		sub	r2, r3, #0
 409 0050 7B68     		ldr	r3, [r7, #4]
 410 0052 9A42     		cmp	r2, r3
 411 0054 0AD3     		bcc	.L21
 704:.\Generated_Source\PSoC4/CyLib.c ****             {
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 412              		.loc 1 705 0
 413 0056 534A     		ldr	r2, .L28+16
 414 0058 0F23     		mov	r3, #15
 415 005a FB18     		add	r3, r7, r3
 416 005c 1278     		ldrb	r2, [r2]
 417 005e 1A70     		strb	r2, [r3]
 706:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 418              		.loc 1 706 0
 419 0060 514A     		ldr	r2, .L28+20
 420 0062 0E23     		mov	r3, #14
 421 0064 FB18     		add	r3, r7, r3
 422 0066 1278     		ldrb	r2, [r2]
 423 0068 1A70     		strb	r2, [r3]
 424 006a 2DE0     		b	.L20
 425              	.L21:
 707:.\Generated_Source\PSoC4/CyLib.c ****             }
 708:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 426              		.loc 1 708 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 21


 427 006c 4F4B     		ldr	r3, .L28+24
 428 006e 1B78     		ldrb	r3, [r3]
 429 0070 DBB2     		uxtb	r3, r3
 430 0072 1A1E     		sub	r2, r3, #0
 431 0074 7B68     		ldr	r3, [r7, #4]
 432 0076 9A42     		cmp	r2, r3
 433 0078 0AD3     		bcc	.L22
 709:.\Generated_Source\PSoC4/CyLib.c ****             {
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 434              		.loc 1 710 0
 435 007a 4D4A     		ldr	r2, .L28+28
 436 007c 0F23     		mov	r3, #15
 437 007e FB18     		add	r3, r7, r3
 438 0080 1278     		ldrb	r2, [r2]
 439 0082 1A70     		strb	r2, [r3]
 711:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 440              		.loc 1 711 0
 441 0084 4B4A     		ldr	r2, .L28+32
 442 0086 0E23     		mov	r3, #14
 443 0088 FB18     		add	r3, r7, r3
 444 008a 1278     		ldrb	r2, [r2]
 445 008c 1A70     		strb	r2, [r3]
 446 008e 1BE0     		b	.L20
 447              	.L22:
 712:.\Generated_Source\PSoC4/CyLib.c ****             }
 713:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 448              		.loc 1 713 0
 449 0090 494B     		ldr	r3, .L28+36
 450 0092 1B78     		ldrb	r3, [r3]
 451 0094 DBB2     		uxtb	r3, r3
 452 0096 1A1E     		sub	r2, r3, #0
 453 0098 7B68     		ldr	r3, [r7, #4]
 454 009a 9A42     		cmp	r2, r3
 455 009c 0AD3     		bcc	.L23
 714:.\Generated_Source\PSoC4/CyLib.c ****             {
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 456              		.loc 1 715 0
 457 009e 474A     		ldr	r2, .L28+40
 458 00a0 0F23     		mov	r3, #15
 459 00a2 FB18     		add	r3, r7, r3
 460 00a4 1278     		ldrb	r2, [r2]
 461 00a6 1A70     		strb	r2, [r3]
 716:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 462              		.loc 1 716 0
 463 00a8 454A     		ldr	r2, .L28+44
 464 00aa 0E23     		mov	r3, #14
 465 00ac FB18     		add	r3, r7, r3
 466 00ae 1278     		ldrb	r2, [r2]
 467 00b0 1A70     		strb	r2, [r3]
 468 00b2 09E0     		b	.L20
 469              	.L23:
 717:.\Generated_Source\PSoC4/CyLib.c ****             }
 718:.\Generated_Source\PSoC4/CyLib.c ****             else
 719:.\Generated_Source\PSoC4/CyLib.c ****             {
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 470              		.loc 1 720 0
 471 00b4 434A     		ldr	r2, .L28+48
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 22


 472 00b6 0F23     		mov	r3, #15
 473 00b8 FB18     		add	r3, r7, r3
 474 00ba 1278     		ldrb	r2, [r2]
 475 00bc 1A70     		strb	r2, [r3]
 721:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 476              		.loc 1 721 0
 477 00be 424A     		ldr	r2, .L28+52
 478 00c0 0E23     		mov	r3, #14
 479 00c2 FB18     		add	r3, r7, r3
 480 00c4 1278     		ldrb	r2, [r2]
 481 00c6 1A70     		strb	r2, [r3]
 482              	.L20:
 722:.\Generated_Source\PSoC4/CyLib.c ****             }
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 483              		.loc 1 725 0
 484 00c8 7B68     		ldr	r3, [r7, #4]
 485 00ca DA1E     		sub	r2, r3, #3
 486 00cc 0B23     		mov	r3, #11
 487 00ce FB18     		add	r3, r7, r3
 488 00d0 3E49     		ldr	r1, .L28+56
 489 00d2 8A5C     		ldrb	r2, [r1, r2]
 490 00d4 1A70     		strb	r2, [r3]
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c **** 
 728:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:.\Generated_Source\PSoC4/CyLib.c ****             *
 733:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 736:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 491              		.loc 1 737 0
 492 00d6 0B23     		mov	r3, #11
 493 00d8 FB18     		add	r3, r7, r3
 494 00da 1B78     		ldrb	r3, [r3]
 495 00dc 2F2B     		cmp	r3, #47
 496 00de 0DD9     		bls	.L24
 497              		.loc 1 737 0 is_stmt 0 discriminator 1
 498 00e0 7B68     		ldr	r3, [r7, #4]
 499 00e2 2A2B     		cmp	r3, #42
 500 00e4 0AD9     		bls	.L24
 738:.\Generated_Source\PSoC4/CyLib.c ****             {
 739:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 501              		.loc 1 740 0 is_stmt 1
 502 00e6 3A4B     		ldr	r3, .L28+60
 503 00e8 1922     		mov	r2, #25
 504 00ea 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:.\Generated_Source\PSoC4/CyLib.c **** 
 743:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 505              		.loc 1 743 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 23


 506 00ec 0520     		mov	r0, #5
 507 00ee FFF7FEFF 		bl	CyDelayCycles
 744:.\Generated_Source\PSoC4/CyLib.c **** 
 745:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 508              		.loc 1 745 0
 509 00f2 0D23     		mov	r3, #13
 510 00f4 FB18     		add	r3, r7, r3
 511 00f6 1922     		mov	r2, #25
 512 00f8 1A70     		strb	r2, [r3]
 513 00fa 07E0     		b	.L25
 514              	.L24:
 746:.\Generated_Source\PSoC4/CyLib.c ****             }
 747:.\Generated_Source\PSoC4/CyLib.c ****             else
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 515              		.loc 1 749 0
 516 00fc 344B     		ldr	r3, .L28+60
 517 00fe 1B68     		ldr	r3, [r3]
 518 0100 DAB2     		uxtb	r2, r3
 519 0102 0D23     		mov	r3, #13
 520 0104 FB18     		add	r3, r7, r3
 521 0106 3F21     		mov	r1, #63
 522 0108 0A40     		and	r2, r1
 523 010a 1A70     		strb	r2, [r3]
 524              	.L25:
 750:.\Generated_Source\PSoC4/CyLib.c ****             }
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c **** 
 753:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:.\Generated_Source\PSoC4/CyLib.c ****             *
 757:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 760:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 525              		.loc 1 761 0
 526 010c 0B23     		mov	r3, #11
 527 010e FA18     		add	r2, r7, r3
 528 0110 0D23     		mov	r3, #13
 529 0112 FB18     		add	r3, r7, r3
 530 0114 1278     		ldrb	r2, [r2]
 531 0116 1B78     		ldrb	r3, [r3]
 532 0118 9A42     		cmp	r2, r3
 533 011a 08D2     		bcs	.L26
 762:.\Generated_Source\PSoC4/CyLib.c ****             {
 763:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 534              		.loc 1 764 0
 535 011c 2C4B     		ldr	r3, .L28+60
 536 011e 7A68     		ldr	r2, [r7, #4]
 537 0120 033A     		sub	r2, r2, #3
 538 0122 2A49     		ldr	r1, .L28+56
 539 0124 8A5C     		ldrb	r2, [r1, r2]
 540 0126 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 24


 541              		.loc 1 765 0
 542 0128 0520     		mov	r0, #5
 543 012a FFF7FEFF 		bl	CyDelayCycles
 544              	.L26:
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c **** 
 768:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:.\Generated_Source\PSoC4/CyLib.c **** 
 770:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:.\Generated_Source\PSoC4/CyLib.c ****                 {
 773:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:.\Generated_Source\PSoC4/CyLib.c ****                 }
 775:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:.\Generated_Source\PSoC4/CyLib.c ****                 {
 777:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:.\Generated_Source\PSoC4/CyLib.c ****                 }
 779:.\Generated_Source\PSoC4/CyLib.c ****                 else
 780:.\Generated_Source\PSoC4/CyLib.c ****                 {
 781:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:.\Generated_Source\PSoC4/CyLib.c ****                 }
 783:.\Generated_Source\PSoC4/CyLib.c ****             #else
 784:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 545              		.loc 1 784 0
 546 012e 7B68     		ldr	r3, [r7, #4]
 547 0130 254A     		ldr	r2, .L28+52
 548 0132 9A18     		add	r2, r3, r2
 549 0134 0A23     		mov	r3, #10
 550 0136 FB18     		add	r3, r7, r3
 551 0138 1278     		ldrb	r2, [r2]
 552 013a 1A70     		strb	r2, [r3]
 785:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:.\Generated_Source\PSoC4/CyLib.c **** 
 787:.\Generated_Source\PSoC4/CyLib.c **** 
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 553              		.loc 1 788 0
 554 013c 254B     		ldr	r3, .L28+64
 555 013e 0A22     		mov	r2, #10
 556 0140 BA18     		add	r2, r7, r2
 557 0142 1278     		ldrb	r2, [r2]
 558 0144 1A60     		str	r2, [r3]
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 559              		.loc 1 789 0
 560 0146 244B     		ldr	r3, .L28+68
 561 0148 0F22     		mov	r2, #15
 562 014a BA18     		add	r2, r7, r2
 563 014c 1278     		ldrb	r2, [r2]
 564 014e 1A60     		str	r2, [r3]
 790:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 565              		.loc 1 790 0
 566 0150 224B     		ldr	r3, .L28+72
 567 0152 0E22     		mov	r2, #14
 568 0154 BA18     		add	r2, r7, r2
 569 0156 1278     		ldrb	r2, [r2]
 570 0158 1A60     		str	r2, [r3]
 791:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 571              		.loc 1 791 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 25


 572 015a 0520     		mov	r0, #5
 573 015c FFF7FEFF 		bl	CyDelayUs
 792:.\Generated_Source\PSoC4/CyLib.c **** 
 793:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 574              		.loc 1 793 0
 575 0160 0B23     		mov	r3, #11
 576 0162 FA18     		add	r2, r7, r3
 577 0164 0D23     		mov	r3, #13
 578 0166 FB18     		add	r3, r7, r3
 579 0168 1278     		ldrb	r2, [r2]
 580 016a 1B78     		ldrb	r3, [r3]
 581 016c 9A42     		cmp	r2, r3
 582 016e 08D9     		bls	.L18
 794:.\Generated_Source\PSoC4/CyLib.c ****             {
 795:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 583              		.loc 1 796 0
 584 0170 174B     		ldr	r3, .L28+60
 585 0172 7A68     		ldr	r2, [r7, #4]
 586 0174 033A     		sub	r2, r2, #3
 587 0176 1549     		ldr	r1, .L28+56
 588 0178 8A5C     		ldrb	r2, [r1, r2]
 589 017a 1A60     		str	r2, [r3]
 797:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 590              		.loc 1 797 0
 591 017c 0520     		mov	r0, #5
 592 017e FFF7FEFF 		bl	CyDelayCycles
 593              	.L18:
 798:.\Generated_Source\PSoC4/CyLib.c ****             }
 799:.\Generated_Source\PSoC4/CyLib.c ****         }
 800:.\Generated_Source\PSoC4/CyLib.c ****         else
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 804:.\Generated_Source\PSoC4/CyLib.c ****         }
 805:.\Generated_Source\PSoC4/CyLib.c **** 
 806:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:.\Generated_Source\PSoC4/CyLib.c ****             {
 811:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:.\Generated_Source\PSoC4/CyLib.c ****             }
 813:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:.\Generated_Source\PSoC4/CyLib.c **** 
 815:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 817:.\Generated_Source\PSoC4/CyLib.c ****             {
 818:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:.\Generated_Source\PSoC4/CyLib.c ****             }
 820:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:.\Generated_Source\PSoC4/CyLib.c **** 
 822:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 594              		.loc 1 822 0
 595 0182 0C23     		mov	r3, #12
 596 0184 FB18     		add	r3, r7, r3
 597 0186 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 26


 598 0188 181C     		mov	r0, r3
 599 018a FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/CyLib.c ****     }
 600              		.loc 1 823 0
 601 018e BD46     		mov	sp, r7
 602 0190 05B0     		add	sp, sp, #20
 603              		@ sp needed
 604 0192 90BD     		pop	{r4, r7, pc}
 605              	.L29:
 606              		.align	2
 607              	.L28:
 608 0194 C0F1FF0F 		.word	268431808
 609 0198 C1F1FF0F 		.word	268431809
 610 019c C2F1FF0F 		.word	268431810
 611 01a0 C3F1FF0F 		.word	268431811
 612 01a4 C4F1FF0F 		.word	268431812
 613 01a8 C5F1FF0F 		.word	268431813
 614 01ac C6F1FF0F 		.word	268431814
 615 01b0 C7F1FF0F 		.word	268431815
 616 01b4 C8F1FF0F 		.word	268431816
 617 01b8 C9F1FF0F 		.word	268431817
 618 01bc CAF1FF0F 		.word	268431818
 619 01c0 CBF1FF0F 		.word	268431819
 620 01c4 CCF1FF0F 		.word	268431820
 621 01c8 CDF1FF0F 		.word	268431821
 622 01cc 00000000 		.word	cyImoFreqMhz2Reg
 623 01d0 2CFF0B40 		.word	1074528044
 624 01d4 28FF0B40 		.word	1074528040
 625 01d8 1CFF0B40 		.word	1074528028
 626 01dc 20FF0B40 		.word	1074528032
 627              		.cfi_endproc
 628              	.LFE5:
 629              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 630              		.section	.text.CySysLvdEnable,"ax",%progbits
 631              		.align	2
 632              		.global	CySysLvdEnable
 633              		.code	16
 634              		.thumb_func
 635              		.type	CySysLvdEnable, %function
 636              	CySysLvdEnable:
 637              	.LFB6:
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c **** #else
 826:.\Generated_Source\PSoC4/CyLib.c **** 
 827:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:.\Generated_Source\PSoC4/CyLib.c ****     {
 829:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:.\Generated_Source\PSoC4/CyLib.c ****         {
 833:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:.\Generated_Source\PSoC4/CyLib.c **** 
 838:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 27


 840:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:.\Generated_Source\PSoC4/CyLib.c **** 
 842:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:.\Generated_Source\PSoC4/CyLib.c **** 
 845:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:.\Generated_Source\PSoC4/CyLib.c **** 
 849:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 850:.\Generated_Source\PSoC4/CyLib.c **** 
 851:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:.\Generated_Source\PSoC4/CyLib.c ****             {
 853:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:.\Generated_Source\PSoC4/CyLib.c **** 
 859:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 863:.\Generated_Source\PSoC4/CyLib.c ****             }
 864:.\Generated_Source\PSoC4/CyLib.c **** 
 865:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:.\Generated_Source\PSoC4/CyLib.c ****         }
 867:.\Generated_Source\PSoC4/CyLib.c ****         else
 868:.\Generated_Source\PSoC4/CyLib.c ****         {
 869:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 870:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:.\Generated_Source\PSoC4/CyLib.c ****         }
 872:.\Generated_Source\PSoC4/CyLib.c ****     }
 873:.\Generated_Source\PSoC4/CyLib.c **** 
 874:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:.\Generated_Source\PSoC4/CyLib.c **** 
 876:.\Generated_Source\PSoC4/CyLib.c **** 
 877:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:.\Generated_Source\PSoC4/CyLib.c ****     *
 882:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:.\Generated_Source\PSoC4/CyLib.c ****     *
 885:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 888:.\Generated_Source\PSoC4/CyLib.c ****     *
 889:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:.\Generated_Source\PSoC4/CyLib.c ****     *
 892:.\Generated_Source\PSoC4/CyLib.c ****     *
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 28


 897:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:.\Generated_Source\PSoC4/CyLib.c ****     *
 901:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 903:.\Generated_Source\PSoC4/CyLib.c ****     *
 904:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 907:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:.\Generated_Source\PSoC4/CyLib.c ****     {
 915:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:.\Generated_Source\PSoC4/CyLib.c **** 
 917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:.\Generated_Source\PSoC4/CyLib.c **** 
 919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 920:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:.\Generated_Source\PSoC4/CyLib.c **** 
 923:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:.\Generated_Source\PSoC4/CyLib.c ****     }
 925:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:.\Generated_Source\PSoC4/CyLib.c **** 
 927:.\Generated_Source\PSoC4/CyLib.c **** 
 928:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:.\Generated_Source\PSoC4/CyLib.c **** 
 930:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 931:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:.\Generated_Source\PSoC4/CyLib.c ****     *
 934:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:.\Generated_Source\PSoC4/CyLib.c ****     *
 938:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:.\Generated_Source\PSoC4/CyLib.c ****     *
 942:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 945:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:.\Generated_Source\PSoC4/CyLib.c ****     *
 951:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 29


 954:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:.\Generated_Source\PSoC4/CyLib.c ****     *
 957:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:.\Generated_Source\PSoC4/CyLib.c ****     {
 960:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 961:.\Generated_Source\PSoC4/CyLib.c **** 
 962:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 964:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 965:.\Generated_Source\PSoC4/CyLib.c **** 
 966:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 968:.\Generated_Source\PSoC4/CyLib.c **** 
 969:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 971:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:.\Generated_Source\PSoC4/CyLib.c **** 
 977:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 978:.\Generated_Source\PSoC4/CyLib.c ****         {
 979:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 981:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 982:.\Generated_Source\PSoC4/CyLib.c ****             {
 983:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 985:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 986:.\Generated_Source\PSoC4/CyLib.c ****                 {
 987:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 988:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 989:.\Generated_Source\PSoC4/CyLib.c ****                 }
 990:.\Generated_Source\PSoC4/CyLib.c ****             }
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****         }
 993:.\Generated_Source\PSoC4/CyLib.c **** 
 994:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 995:.\Generated_Source\PSoC4/CyLib.c ****     }
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c **** 
 998:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC4/CyLib.c ****     *
1002:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:.\Generated_Source\PSoC4/CyLib.c ****     *
1005:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1007:.\Generated_Source\PSoC4/CyLib.c ****     *
1008:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1010:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 30


1011:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:.\Generated_Source\PSoC4/CyLib.c ****     {
1014:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1020:.\Generated_Source\PSoC4/CyLib.c ****         #else
1021:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:.\Generated_Source\PSoC4/CyLib.c ****     }
1024:.\Generated_Source\PSoC4/CyLib.c **** 
1025:.\Generated_Source\PSoC4/CyLib.c **** 
1026:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:.\Generated_Source\PSoC4/CyLib.c ****     *
1030:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:.\Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:.\Generated_Source\PSoC4/CyLib.c ****     *
1033:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
1034:.\Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:.\Generated_Source\PSoC4/CyLib.c ****     *
1036:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:.\Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:.\Generated_Source\PSoC4/CyLib.c ****     *
1039:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1041:.\Generated_Source\PSoC4/CyLib.c ****     *
1042:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
1045:.\Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:.\Generated_Source\PSoC4/CyLib.c ****     *
1050:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:.\Generated_Source\PSoC4/CyLib.c ****     {
1053:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1057:.\Generated_Source\PSoC4/CyLib.c ****         #else
1058:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1059:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:.\Generated_Source\PSoC4/CyLib.c **** 
1061:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1062:.\Generated_Source\PSoC4/CyLib.c ****     }
1063:.\Generated_Source\PSoC4/CyLib.c **** 
1064:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 31


1068:.\Generated_Source\PSoC4/CyLib.c ****         *
1069:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:.\Generated_Source\PSoC4/CyLib.c ****         *
1072:.\Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:.\Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:.\Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:.\Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:.\Generated_Source\PSoC4/CyLib.c ****         *
1078:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:.\Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1089:.\Generated_Source\PSoC4/CyLib.c ****         *
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1091:.\Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:.\Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:.\Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:.\Generated_Source\PSoC4/CyLib.c ****         *
1098:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:.\Generated_Source\PSoC4/CyLib.c ****         {
1101:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1102:.\Generated_Source\PSoC4/CyLib.c **** 
1103:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1104:.\Generated_Source\PSoC4/CyLib.c ****             {
1105:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1108:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1111:.\Generated_Source\PSoC4/CyLib.c ****             }
1112:.\Generated_Source\PSoC4/CyLib.c ****             else
1113:.\Generated_Source\PSoC4/CyLib.c ****             {
1114:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1116:.\Generated_Source\PSoC4/CyLib.c ****             }
1117:.\Generated_Source\PSoC4/CyLib.c ****         }
1118:.\Generated_Source\PSoC4/CyLib.c **** 
1119:.\Generated_Source\PSoC4/CyLib.c ****     #else
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 32


1125:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:.\Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:.\Generated_Source\PSoC4/CyLib.c ****         *
1129:.\Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:.\Generated_Source\PSoC4/CyLib.c ****         *
1132:.\Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:.\Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:.\Generated_Source\PSoC4/CyLib.c ****         *
1135:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:.\Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:.\Generated_Source\PSoC4/CyLib.c ****         *
1139:.\Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:.\Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:.\Generated_Source\PSoC4/CyLib.c ****         *
1142:.\Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:.\Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:.\Generated_Source\PSoC4/CyLib.c ****         *
1145:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:.\Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:.\Generated_Source\PSoC4/CyLib.c ****         *
1148:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:.\Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1153:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         *
1156:.\Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1159:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         *
1167:.\Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:.\Generated_Source\PSoC4/CyLib.c ****         *
1181:.\Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 33


1182:.\Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:.\Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:.\Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:.\Generated_Source\PSoC4/CyLib.c **** 
1191:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1192:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1193:.\Generated_Source\PSoC4/CyLib.c ****         *
1194:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:.\Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:.\Generated_Source\PSoC4/CyLib.c ****         {
1200:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:.\Generated_Source\PSoC4/CyLib.c **** 
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:.\Generated_Source\PSoC4/CyLib.c **** 
1210:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1212:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1216:.\Generated_Source\PSoC4/CyLib.c **** 
1217:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:.\Generated_Source\PSoC4/CyLib.c **** 
1219:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC4/CyLib.c ****         }
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c ****         *
1227:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
1230:.\Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:.\Generated_Source\PSoC4/CyLib.c ****         *
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:.\Generated_Source\PSoC4/CyLib.c ****         *
1234:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:.\Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 34


1239:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:.\Generated_Source\PSoC4/CyLib.c ****         *
1241:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:.\Generated_Source\PSoC4/CyLib.c ****         *
1247:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:.\Generated_Source\PSoC4/CyLib.c ****         *  status:
1249:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:.\Generated_Source\PSoC4/CyLib.c ****         *
1252:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:.\Generated_Source\PSoC4/CyLib.c ****         {
1255:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:.\Generated_Source\PSoC4/CyLib.c **** 
1257:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:.\Generated_Source\PSoC4/CyLib.c **** 
1265:.\Generated_Source\PSoC4/CyLib.c **** 
1266:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1267:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:.\Generated_Source\PSoC4/CyLib.c ****             {
1269:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:.\Generated_Source\PSoC4/CyLib.c ****             }
1271:.\Generated_Source\PSoC4/CyLib.c ****             else
1272:.\Generated_Source\PSoC4/CyLib.c ****             {
1273:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:.\Generated_Source\PSoC4/CyLib.c **** 
1276:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 35


1296:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:.\Generated_Source\PSoC4/CyLib.c ****                 {
1298:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:.\Generated_Source\PSoC4/CyLib.c ****                 }
1300:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:.\Generated_Source\PSoC4/CyLib.c ****                 {
1302:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:.\Generated_Source\PSoC4/CyLib.c ****                 }
1304:.\Generated_Source\PSoC4/CyLib.c ****                 else
1305:.\Generated_Source\PSoC4/CyLib.c ****                 {
1306:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:.\Generated_Source\PSoC4/CyLib.c ****                 }
1308:.\Generated_Source\PSoC4/CyLib.c **** 
1309:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:.\Generated_Source\PSoC4/CyLib.c **** 
1312:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:.\Generated_Source\PSoC4/CyLib.c ****                 {
1316:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:.\Generated_Source\PSoC4/CyLib.c ****                 }
1319:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:.\Generated_Source\PSoC4/CyLib.c ****                 {
1321:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:.\Generated_Source\PSoC4/CyLib.c ****                 }
1323:.\Generated_Source\PSoC4/CyLib.c ****                 else
1324:.\Generated_Source\PSoC4/CyLib.c ****                 {
1325:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1326:.\Generated_Source\PSoC4/CyLib.c ****                 }
1327:.\Generated_Source\PSoC4/CyLib.c **** 
1328:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:.\Generated_Source\PSoC4/CyLib.c ****                 {
1335:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:.\Generated_Source\PSoC4/CyLib.c ****                 }
1337:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:.\Generated_Source\PSoC4/CyLib.c ****                 {
1339:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:.\Generated_Source\PSoC4/CyLib.c ****                 }
1341:.\Generated_Source\PSoC4/CyLib.c ****                 else
1342:.\Generated_Source\PSoC4/CyLib.c ****                 {
1343:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c **** 
1346:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:.\Generated_Source\PSoC4/CyLib.c **** 
1349:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:.\Generated_Source\PSoC4/CyLib.c **** 
1351:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 36


1353:.\Generated_Source\PSoC4/CyLib.c ****                 {
1354:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:.\Generated_Source\PSoC4/CyLib.c ****                 }
1357:.\Generated_Source\PSoC4/CyLib.c ****                 else
1358:.\Generated_Source\PSoC4/CyLib.c ****                 {
1359:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:.\Generated_Source\PSoC4/CyLib.c ****                     */
1362:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1363:.\Generated_Source\PSoC4/CyLib.c ****                 }
1364:.\Generated_Source\PSoC4/CyLib.c ****             }
1365:.\Generated_Source\PSoC4/CyLib.c **** 
1366:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:.\Generated_Source\PSoC4/CyLib.c ****         }
1368:.\Generated_Source\PSoC4/CyLib.c **** 
1369:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:.\Generated_Source\PSoC4/CyLib.c **** 
1371:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:.\Generated_Source\PSoC4/CyLib.c **** 
1373:.\Generated_Source\PSoC4/CyLib.c **** 
1374:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1376:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
1381:.\Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:.\Generated_Source\PSoC4/CyLib.c ****     *
1383:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:.\Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:.\Generated_Source\PSoC4/CyLib.c ****     *
1386:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1387:.\Generated_Source\PSoC4/CyLib.c ****     *
1388:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:.\Generated_Source\PSoC4/CyLib.c ****     *
1393:.\Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:.\Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:.\Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:.\Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:.\Generated_Source\PSoC4/CyLib.c ****     *
1398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:.\Generated_Source\PSoC4/CyLib.c ****     *
1401:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:.\Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:.\Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:.\Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:.\Generated_Source\PSoC4/CyLib.c ****     *
1406:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:.\Generated_Source\PSoC4/CyLib.c ****     *
1408:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 37


1410:.\Generated_Source\PSoC4/CyLib.c ****     {
1411:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:.\Generated_Source\PSoC4/CyLib.c **** 
1415:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:.\Generated_Source\PSoC4/CyLib.c ****         {
1417:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:.\Generated_Source\PSoC4/CyLib.c **** 
1419:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1420:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:.\Generated_Source\PSoC4/CyLib.c **** 
1422:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:.\Generated_Source\PSoC4/CyLib.c **** 
1425:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:.\Generated_Source\PSoC4/CyLib.c **** 
1427:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:.\Generated_Source\PSoC4/CyLib.c **** 
1433:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:.\Generated_Source\PSoC4/CyLib.c ****             {
1435:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1438:.\Generated_Source\PSoC4/CyLib.c ****                 {
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:.\Generated_Source\PSoC4/CyLib.c ****                     {
1442:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1444:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1445:.\Generated_Source\PSoC4/CyLib.c ****                     }
1446:.\Generated_Source\PSoC4/CyLib.c **** 
1447:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:.\Generated_Source\PSoC4/CyLib.c ****                 }
1450:.\Generated_Source\PSoC4/CyLib.c ****             }
1451:.\Generated_Source\PSoC4/CyLib.c ****         }
1452:.\Generated_Source\PSoC4/CyLib.c ****         else
1453:.\Generated_Source\PSoC4/CyLib.c ****         {
1454:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:.\Generated_Source\PSoC4/CyLib.c ****         }
1456:.\Generated_Source\PSoC4/CyLib.c **** 
1457:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1458:.\Generated_Source\PSoC4/CyLib.c ****     }
1459:.\Generated_Source\PSoC4/CyLib.c **** 
1460:.\Generated_Source\PSoC4/CyLib.c **** 
1461:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:.\Generated_Source\PSoC4/CyLib.c ****     *
1465:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 38


1467:.\Generated_Source\PSoC4/CyLib.c ****     *
1468:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:.\Generated_Source\PSoC4/CyLib.c ****     *
1470:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:.\Generated_Source\PSoC4/CyLib.c ****     *
1474:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:.\Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:.\Generated_Source\PSoC4/CyLib.c ****     *
1477:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:.\Generated_Source\PSoC4/CyLib.c ****     {
1480:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:.\Generated_Source\PSoC4/CyLib.c **** 
1483:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:.\Generated_Source\PSoC4/CyLib.c **** 
1485:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:.\Generated_Source\PSoC4/CyLib.c **** 
1487:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1490:.\Generated_Source\PSoC4/CyLib.c ****         {
1491:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:.\Generated_Source\PSoC4/CyLib.c ****         }
1493:.\Generated_Source\PSoC4/CyLib.c **** 
1494:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1495:.\Generated_Source\PSoC4/CyLib.c **** 
1496:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1497:.\Generated_Source\PSoC4/CyLib.c ****     }
1498:.\Generated_Source\PSoC4/CyLib.c **** 
1499:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1501:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:.\Generated_Source\PSoC4/CyLib.c ****     *
1503:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:.\Generated_Source\PSoC4/CyLib.c ****     *
1506:.\Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:.\Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:.\Generated_Source\PSoC4/CyLib.c ****     *
1509:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:.\Generated_Source\PSoC4/CyLib.c ****     *
1511:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:.\Generated_Source\PSoC4/CyLib.c ****     *
1515:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:.\Generated_Source\PSoC4/CyLib.c ****     {
1521:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:.\Generated_Source\PSoC4/CyLib.c **** 
1523:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 39


1524:.\Generated_Source\PSoC4/CyLib.c ****         {
1525:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:.\Generated_Source\PSoC4/CyLib.c ****         }
1529:.\Generated_Source\PSoC4/CyLib.c ****     }
1530:.\Generated_Source\PSoC4/CyLib.c **** 
1531:.\Generated_Source\PSoC4/CyLib.c **** 
1532:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1534:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:.\Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:.\Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:.\Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:.\Generated_Source\PSoC4/CyLib.c ****     *
1542:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:.\Generated_Source\PSoC4/CyLib.c ****     *
1545:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:.\Generated_Source\PSoC4/CyLib.c ****     *
1547:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:.\Generated_Source\PSoC4/CyLib.c ****     *
1552:.\Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
1554:.\Generated_Source\PSoC4/CyLib.c ****     *
1555:.\Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:.\Generated_Source\PSoC4/CyLib.c ****     *
1558:.\Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:.\Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:.\Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:.\Generated_Source\PSoC4/CyLib.c ****     *
1562:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:.\Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:.\Generated_Source\PSoC4/CyLib.c ****     *
1567:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:.\Generated_Source\PSoC4/CyLib.c ****     {
1570:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1572:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:.\Generated_Source\PSoC4/CyLib.c **** 
1575:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 40


1581:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:.\Generated_Source\PSoC4/CyLib.c ****         {
1585:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:.\Generated_Source\PSoC4/CyLib.c **** 
1590:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1591:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:.\Generated_Source\PSoC4/CyLib.c **** 
1594:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:.\Generated_Source\PSoC4/CyLib.c **** 
1596:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:.\Generated_Source\PSoC4/CyLib.c ****         }
1598:.\Generated_Source\PSoC4/CyLib.c **** 
1599:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:.\Generated_Source\PSoC4/CyLib.c **** 
1601:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:.\Generated_Source\PSoC4/CyLib.c ****     }
1603:.\Generated_Source\PSoC4/CyLib.c **** 
1604:.\Generated_Source\PSoC4/CyLib.c **** 
1605:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:.\Generated_Source\PSoC4/CyLib.c ****     *
1609:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
1611:.\Generated_Source\PSoC4/CyLib.c ****     *
1612:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:.\Generated_Source\PSoC4/CyLib.c ****     *
1615:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:.\Generated_Source\PSoC4/CyLib.c ****     *
1617:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:.\Generated_Source\PSoC4/CyLib.c ****     *
1622:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:.\Generated_Source\PSoC4/CyLib.c ****     *
1627:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:.\Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
1629:.\Generated_Source\PSoC4/CyLib.c ****     *
1630:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:.\Generated_Source\PSoC4/CyLib.c ****     *
1632:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1634:.\Generated_Source\PSoC4/CyLib.c ****     *
1635:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 41


1638:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:.\Generated_Source\PSoC4/CyLib.c **** 
1641:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:.\Generated_Source\PSoC4/CyLib.c **** 
1643:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:.\Generated_Source\PSoC4/CyLib.c ****         {
1645:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1648:.\Generated_Source\PSoC4/CyLib.c ****         }
1649:.\Generated_Source\PSoC4/CyLib.c **** 
1650:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:.\Generated_Source\PSoC4/CyLib.c ****     }
1652:.\Generated_Source\PSoC4/CyLib.c **** 
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:.\Generated_Source\PSoC4/CyLib.c ****     *
1658:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:.\Generated_Source\PSoC4/CyLib.c ****     *
1662:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  Return
1668:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:.\Generated_Source\PSoC4/CyLib.c ****     *
1671:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1672:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:.\Generated_Source\PSoC4/CyLib.c ****     {
1674:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:.\Generated_Source\PSoC4/CyLib.c **** 
1677:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:.\Generated_Source\PSoC4/CyLib.c **** 
1679:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:.\Generated_Source\PSoC4/CyLib.c **** 
1681:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:.\Generated_Source\PSoC4/CyLib.c **** 
1684:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:.\Generated_Source\PSoC4/CyLib.c ****     }
1688:.\Generated_Source\PSoC4/CyLib.c **** 
1689:.\Generated_Source\PSoC4/CyLib.c **** 
1690:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:.\Generated_Source\PSoC4/CyLib.c ****     *
1694:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 42


1695:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:.\Generated_Source\PSoC4/CyLib.c ****     *
1698:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:.\Generated_Source\PSoC4/CyLib.c ****     *
1700:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:.\Generated_Source\PSoC4/CyLib.c ****     *
1705:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:.\Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:.\Generated_Source\PSoC4/CyLib.c ****     *
1709:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:.\Generated_Source\PSoC4/CyLib.c ****     {
1712:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:.\Generated_Source\PSoC4/CyLib.c **** 
1716:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1718:.\Generated_Source\PSoC4/CyLib.c **** 
1719:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:.\Generated_Source\PSoC4/CyLib.c ****         {
1723:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:.\Generated_Source\PSoC4/CyLib.c ****         }
1725:.\Generated_Source\PSoC4/CyLib.c **** 
1726:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:.\Generated_Source\PSoC4/CyLib.c ****     }
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c ****     *
1734:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:.\Generated_Source\PSoC4/CyLib.c ****     *
1740:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1743:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:.\Generated_Source\PSoC4/CyLib.c ****     *
1747:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 43


1752:.\Generated_Source\PSoC4/CyLib.c ****     {
1753:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:.\Generated_Source\PSoC4/CyLib.c **** 
1756:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:.\Generated_Source\PSoC4/CyLib.c **** 
1758:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:.\Generated_Source\PSoC4/CyLib.c **** 
1761:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1762:.\Generated_Source\PSoC4/CyLib.c **** 
1763:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:.\Generated_Source\PSoC4/CyLib.c ****     }
1765:.\Generated_Source\PSoC4/CyLib.c **** 
1766:.\Generated_Source\PSoC4/CyLib.c **** 
1767:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:.\Generated_Source\PSoC4/CyLib.c ****     *
1771:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:.\Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:.\Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:.\Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
1775:.\Generated_Source\PSoC4/CyLib.c ****     *
1776:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:.\Generated_Source\PSoC4/CyLib.c ****     *
1779:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1780:.\Generated_Source\PSoC4/CyLib.c ****     *
1781:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1782:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:.\Generated_Source\PSoC4/CyLib.c ****     *
1786:.\Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:.\Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:.\Generated_Source\PSoC4/CyLib.c ****     *
1789:.\Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:.\Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:.\Generated_Source\PSoC4/CyLib.c ****     *
1792:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:.\Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:.\Generated_Source\PSoC4/CyLib.c ****     *
1799:.\Generated_Source\PSoC4/CyLib.c ****     * freqTol:
1800:.\Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:.\Generated_Source\PSoC4/CyLib.c ****     *
1802:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:.\Generated_Source\PSoC4/CyLib.c ****     *
1806:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:.\Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 44


1809:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:.\Generated_Source\PSoC4/CyLib.c ****     {
1812:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:.\Generated_Source\PSoC4/CyLib.c **** 
1815:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:.\Generated_Source\PSoC4/CyLib.c **** 
1818:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1819:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:.\Generated_Source\PSoC4/CyLib.c **** 
1821:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:.\Generated_Source\PSoC4/CyLib.c **** 
1824:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c **** 
1828:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:.\Generated_Source\PSoC4/CyLib.c **** 
1830:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1832:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c **** 
1837:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1839:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1843:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:.\Generated_Source\PSoC4/CyLib.c ****             {
1847:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:.\Generated_Source\PSoC4/CyLib.c ****                 {
1849:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:.\Generated_Source\PSoC4/CyLib.c **** 
1851:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:.\Generated_Source\PSoC4/CyLib.c **** 
1854:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:.\Generated_Source\PSoC4/CyLib.c **** 
1857:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:.\Generated_Source\PSoC4/CyLib.c **** 
1860:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:.\Generated_Source\PSoC4/CyLib.c ****                     {
1863:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:.\Generated_Source\PSoC4/CyLib.c ****                         break;
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 45


1866:.\Generated_Source\PSoC4/CyLib.c ****                     }
1867:.\Generated_Source\PSoC4/CyLib.c ****                 }
1868:.\Generated_Source\PSoC4/CyLib.c **** 
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:.\Generated_Source\PSoC4/CyLib.c ****                 {
1872:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:.\Generated_Source\PSoC4/CyLib.c ****                     {
1874:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:.\Generated_Source\PSoC4/CyLib.c ****                     }
1876:.\Generated_Source\PSoC4/CyLib.c ****                 }
1877:.\Generated_Source\PSoC4/CyLib.c ****             }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         }
1880:.\Generated_Source\PSoC4/CyLib.c **** 
1881:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:.\Generated_Source\PSoC4/CyLib.c ****     }
1883:.\Generated_Source\PSoC4/CyLib.c **** 
1884:.\Generated_Source\PSoC4/CyLib.c **** 
1885:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:.\Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:.\Generated_Source\PSoC4/CyLib.c ****     *
1896:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1900:.\Generated_Source\PSoC4/CyLib.c ****     *
1901:.\Generated_Source\PSoC4/CyLib.c ****     * source:
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:.\Generated_Source\PSoC4/CyLib.c ****     *
1910:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1912:.\Generated_Source\PSoC4/CyLib.c ****     *
1913:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1914:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:.\Generated_Source\PSoC4/CyLib.c ****     {
1916:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 46


1923:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:.\Generated_Source\PSoC4/CyLib.c ****         }
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:.\Generated_Source\PSoC4/CyLib.c ****     }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c **** 
1932:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1933:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:.\Generated_Source\PSoC4/CyLib.c ****     *
1936:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:.\Generated_Source\PSoC4/CyLib.c ****     *
1939:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:.\Generated_Source\PSoC4/CyLib.c ****     *
1942:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1946:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:.\Generated_Source\PSoC4/CyLib.c ****     *
1949:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1951:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1953:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:.\Generated_Source\PSoC4/CyLib.c ****     *
1955:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
1957:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:.\Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:.\Generated_Source\PSoC4/CyLib.c ****     *
1960:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:.\Generated_Source\PSoC4/CyLib.c ****     {
1963:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:.\Generated_Source\PSoC4/CyLib.c **** 
1968:.\Generated_Source\PSoC4/CyLib.c **** 
1969:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:.\Generated_Source\PSoC4/CyLib.c **** 
1971:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:.\Generated_Source\PSoC4/CyLib.c **** 
1973:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:.\Generated_Source\PSoC4/CyLib.c ****         {
1975:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 47


1980:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:.\Generated_Source\PSoC4/CyLib.c ****         }
1982:.\Generated_Source\PSoC4/CyLib.c **** 
1983:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:.\Generated_Source\PSoC4/CyLib.c **** 
1985:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:.\Generated_Source\PSoC4/CyLib.c ****     }
1987:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:.\Generated_Source\PSoC4/CyLib.c **** 
1989:.\Generated_Source\PSoC4/CyLib.c **** 
1990:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:.\Generated_Source\PSoC4/CyLib.c ****     *
2001:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2003:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2008:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2010:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:.\Generated_Source\PSoC4/CyLib.c ****     *
2022:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2024:.\Generated_Source\PSoC4/CyLib.c ****     *
2025:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:.\Generated_Source\PSoC4/CyLib.c ****     {
 638              		.loc 1 2027 0
 639              		.cfi_startproc
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 82B0     		sub	sp, sp, #8
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 48


 647              		.cfi_def_cfa_register 7
 648 0006 7860     		str	r0, [r7, #4]
2028:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 649              		.loc 1 2029 0
 650 0008 134B     		ldr	r3, .L31
 651 000a 134A     		ldr	r2, .L31
 652 000c 1268     		ldr	r2, [r2]
 653 000e 0221     		mov	r1, #2
 654 0010 8A43     		bic	r2, r1
 655 0012 1A60     		str	r2, [r3]
2030:.\Generated_Source\PSoC4/CyLib.c **** 
2031:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 656              		.loc 1 2032 0
 657 0014 114B     		ldr	r3, .L31+4
 658 0016 114A     		ldr	r2, .L31+4
 659 0018 1268     		ldr	r2, [r2]
 660 001a 1E21     		mov	r1, #30
 661 001c 8A43     		bic	r2, r1
 662 001e 111C     		mov	r1, r2
2033:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 663              		.loc 1 2033 0
 664 0020 7A68     		ldr	r2, [r7, #4]
 665 0022 5200     		lsl	r2, r2, #1
 666 0024 1E20     		mov	r0, #30
 667 0026 0240     		and	r2, r0
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 668              		.loc 1 2032 0
 669 0028 0A43     		orr	r2, r1
 670 002a 1A60     		str	r2, [r3]
2034:.\Generated_Source\PSoC4/CyLib.c **** 
2035:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 671              		.loc 1 2036 0
 672 002c 0B4B     		ldr	r3, .L31+4
 673 002e 0B4A     		ldr	r2, .L31+4
 674 0030 1268     		ldr	r2, [r2]
 675 0032 0121     		mov	r1, #1
 676 0034 0A43     		orr	r2, r1
 677 0036 1A60     		str	r2, [r3]
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 678              		.loc 1 2039 0
 679 0038 FA23     		mov	r3, #250
 680 003a 9B00     		lsl	r3, r3, #2
 681 003c 181C     		mov	r0, r3
 682 003e FFF7FEFF 		bl	CyDelayUs
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 683              		.loc 1 2042 0
 684 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2043:.\Generated_Source\PSoC4/CyLib.c **** 
2044:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 49


 685              		.loc 1 2045 0
 686 0046 044B     		ldr	r3, .L31
 687 0048 034A     		ldr	r2, .L31
 688 004a 1268     		ldr	r2, [r2]
 689 004c 0221     		mov	r1, #2
 690 004e 0A43     		orr	r2, r1
 691 0050 1A60     		str	r2, [r3]
2046:.\Generated_Source\PSoC4/CyLib.c ****     }
 692              		.loc 1 2046 0
 693 0052 BD46     		mov	sp, r7
 694 0054 02B0     		add	sp, sp, #8
 695              		@ sp needed
 696 0056 80BD     		pop	{r7, pc}
 697              	.L32:
 698              		.align	2
 699              	.L31:
 700 0058 08000B40 		.word	1074462728
 701 005c 18000B40 		.word	1074462744
 702              		.cfi_endproc
 703              	.LFE6:
 704              		.size	CySysLvdEnable, .-CySysLvdEnable
 705              		.section	.text.CySysLvdDisable,"ax",%progbits
 706              		.align	2
 707              		.global	CySysLvdDisable
 708              		.code	16
 709              		.thumb_func
 710              		.type	CySysLvdDisable, %function
 711              	CySysLvdDisable:
 712              	.LFB7:
2047:.\Generated_Source\PSoC4/CyLib.c **** 
2048:.\Generated_Source\PSoC4/CyLib.c **** 
2049:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:.\Generated_Source\PSoC4/CyLib.c ****     *
2053:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:.\Generated_Source\PSoC4/CyLib.c ****     *
2056:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2058:.\Generated_Source\PSoC4/CyLib.c ****     *
2059:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2060:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2061:.\Generated_Source\PSoC4/CyLib.c ****     *
2062:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:.\Generated_Source\PSoC4/CyLib.c ****     {
 713              		.loc 1 2064 0
 714              		.cfi_startproc
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
2065:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 721              		.loc 1 2065 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 50


 722 0004 064B     		ldr	r3, .L34
 723 0006 064A     		ldr	r2, .L34
 724 0008 1268     		ldr	r2, [r2]
 725 000a 0221     		mov	r1, #2
 726 000c 8A43     		bic	r2, r1
 727 000e 1A60     		str	r2, [r3]
2066:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 728              		.loc 1 2066 0
 729 0010 044B     		ldr	r3, .L34+4
 730 0012 044A     		ldr	r2, .L34+4
 731 0014 1268     		ldr	r2, [r2]
 732 0016 0121     		mov	r1, #1
 733 0018 8A43     		bic	r2, r1
 734 001a 1A60     		str	r2, [r3]
2067:.\Generated_Source\PSoC4/CyLib.c ****     }
 735              		.loc 1 2067 0
 736 001c BD46     		mov	sp, r7
 737              		@ sp needed
 738 001e 80BD     		pop	{r7, pc}
 739              	.L35:
 740              		.align	2
 741              	.L34:
 742 0020 08000B40 		.word	1074462728
 743 0024 18000B40 		.word	1074462744
 744              		.cfi_endproc
 745              	.LFE7:
 746              		.size	CySysLvdDisable, .-CySysLvdDisable
 747              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 748              		.align	2
 749              		.global	CySysLvdGetInterruptSource
 750              		.code	16
 751              		.thumb_func
 752              		.type	CySysLvdGetInterruptSource, %function
 753              	CySysLvdGetInterruptSource:
 754              	.LFB8:
2068:.\Generated_Source\PSoC4/CyLib.c **** 
2069:.\Generated_Source\PSoC4/CyLib.c **** 
2070:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c ****     *
2074:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:.\Generated_Source\PSoC4/CyLib.c ****     *
2077:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2079:.\Generated_Source\PSoC4/CyLib.c ****     *
2080:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2081:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:.\Generated_Source\PSoC4/CyLib.c ****     *
2084:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:.\Generated_Source\PSoC4/CyLib.c ****     {
 755              		.loc 1 2086 0
 756              		.cfi_startproc
 757 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 51


 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
2087:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 763              		.loc 1 2087 0
 764 0004 034B     		ldr	r3, .L38
 765 0006 1B68     		ldr	r3, [r3]
 766 0008 0222     		mov	r2, #2
 767 000a 1340     		and	r3, r2
2088:.\Generated_Source\PSoC4/CyLib.c ****     }
 768              		.loc 1 2088 0
 769 000c 181C     		mov	r0, r3
 770 000e BD46     		mov	sp, r7
 771              		@ sp needed
 772 0010 80BD     		pop	{r7, pc}
 773              	.L39:
 774 0012 C046     		.align	2
 775              	.L38:
 776 0014 04000B40 		.word	1074462724
 777              		.cfi_endproc
 778              	.LFE8:
 779              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 780              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 781              		.align	2
 782              		.global	CySysLvdClearInterrupt
 783              		.code	16
 784              		.thumb_func
 785              		.type	CySysLvdClearInterrupt, %function
 786              	CySysLvdClearInterrupt:
 787              	.LFB9:
2089:.\Generated_Source\PSoC4/CyLib.c **** 
2090:.\Generated_Source\PSoC4/CyLib.c **** 
2091:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:.\Generated_Source\PSoC4/CyLib.c ****     *
2095:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2096:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:.\Generated_Source\PSoC4/CyLib.c ****     *
2098:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2100:.\Generated_Source\PSoC4/CyLib.c ****     *
2101:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2103:.\Generated_Source\PSoC4/CyLib.c ****     *
2104:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:.\Generated_Source\PSoC4/CyLib.c ****     {
 788              		.loc 1 2106 0
 789              		.cfi_startproc
 790 0000 80B5     		push	{r7, lr}
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 52


 795              		.cfi_def_cfa_register 7
2107:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 796              		.loc 1 2107 0
 797 0004 024B     		ldr	r3, .L41
 798 0006 0222     		mov	r2, #2
 799 0008 1A60     		str	r2, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c ****     }
 800              		.loc 1 2108 0
 801 000a BD46     		mov	sp, r7
 802              		@ sp needed
 803 000c 80BD     		pop	{r7, pc}
 804              	.L42:
 805 000e C046     		.align	2
 806              	.L41:
 807 0010 04000B40 		.word	1074462724
 808              		.cfi_endproc
 809              	.LFE9:
 810              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 811              		.section	.text.CySysGetResetReason,"ax",%progbits
 812              		.align	2
 813              		.global	CySysGetResetReason
 814              		.code	16
 815              		.thumb_func
 816              		.type	CySysGetResetReason, %function
 817              	CySysGetResetReason:
 818              	.LFB10:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2111:.\Generated_Source\PSoC4/CyLib.c **** 
2112:.\Generated_Source\PSoC4/CyLib.c **** 
2113:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:.\Generated_Source\PSoC4/CyLib.c **** *
2117:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:.\Generated_Source\PSoC4/CyLib.c **** *
2123:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2126:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2130:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2131:.\Generated_Source\PSoC4/CyLib.c **** *
2132:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:.\Generated_Source\PSoC4/CyLib.c **** {
 819              		.loc 1 2134 0
 820              		.cfi_startproc
 821 0000 80B5     		push	{r7, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 53


 824              		.cfi_offset 14, -4
 825 0002 84B0     		sub	sp, sp, #16
 826              		.cfi_def_cfa_offset 24
 827 0004 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
2135:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 830              		.loc 1 2137 0
 831 0008 7B68     		ldr	r3, [r7, #4]
 832 000a 1922     		mov	r2, #25
 833 000c 1340     		and	r3, r2
 834 000e 7B60     		str	r3, [r7, #4]
2138:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 835              		.loc 1 2138 0
 836 0010 064B     		ldr	r3, .L45
 837 0012 1B68     		ldr	r3, [r3]
 838 0014 1922     		mov	r2, #25
 839 0016 1340     		and	r3, r2
 840 0018 FB60     		str	r3, [r7, #12]
2139:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 841              		.loc 1 2140 0
 842 001a 044B     		ldr	r3, .L45
 843 001c 7A68     		ldr	r2, [r7, #4]
 844 001e 1A60     		str	r2, [r3]
2141:.\Generated_Source\PSoC4/CyLib.c **** 
2142:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 845              		.loc 1 2142 0
 846 0020 FB68     		ldr	r3, [r7, #12]
2143:.\Generated_Source\PSoC4/CyLib.c **** }
 847              		.loc 1 2143 0
 848 0022 181C     		mov	r0, r3
 849 0024 BD46     		mov	sp, r7
 850 0026 04B0     		add	sp, sp, #16
 851              		@ sp needed
 852 0028 80BD     		pop	{r7, pc}
 853              	.L46:
 854 002a C046     		.align	2
 855              	.L45:
 856 002c 00030B40 		.word	1074463488
 857              		.cfi_endproc
 858              	.LFE10:
 859              		.size	CySysGetResetReason, .-CySysGetResetReason
 860              		.section	.text.CyDisableInts,"ax",%progbits
 861              		.align	2
 862              		.global	CyDisableInts
 863              		.code	16
 864              		.thumb_func
 865              		.type	CyDisableInts, %function
 866              	CyDisableInts:
 867              	.LFB11:
2144:.\Generated_Source\PSoC4/CyLib.c **** 
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 54


2148:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:.\Generated_Source\PSoC4/CyLib.c **** *
2150:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:.\Generated_Source\PSoC4/CyLib.c **** *
2153:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:.\Generated_Source\PSoC4/CyLib.c **** *  None
2155:.\Generated_Source\PSoC4/CyLib.c **** *
2156:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2157:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:.\Generated_Source\PSoC4/CyLib.c **** *
2159:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:.\Generated_Source\PSoC4/CyLib.c **** {
 868              		.loc 1 2161 0
 869              		.cfi_startproc
 870 0000 80B5     		push	{r7, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 82B0     		sub	sp, sp, #8
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
2162:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:.\Generated_Source\PSoC4/CyLib.c **** 
2164:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 878              		.loc 1 2165 0
 879 0006 064B     		ldr	r3, .L49
 880 0008 1B68     		ldr	r3, [r3]
 881 000a 7B60     		str	r3, [r7, #4]
2166:.\Generated_Source\PSoC4/CyLib.c **** 
2167:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 882              		.loc 1 2168 0
 883 000c 044B     		ldr	r3, .L49
 884 000e 0122     		mov	r2, #1
 885 0010 5242     		neg	r2, r2
 886 0012 1A60     		str	r2, [r3]
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 887              		.loc 1 2170 0
 888 0014 7B68     		ldr	r3, [r7, #4]
2171:.\Generated_Source\PSoC4/CyLib.c **** }
 889              		.loc 1 2171 0
 890 0016 181C     		mov	r0, r3
 891 0018 BD46     		mov	sp, r7
 892 001a 02B0     		add	sp, sp, #8
 893              		@ sp needed
 894 001c 80BD     		pop	{r7, pc}
 895              	.L50:
 896 001e C046     		.align	2
 897              	.L49:
 898 0020 80E100E0 		.word	-536813184
 899              		.cfi_endproc
 900              	.LFE11:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 55


 901              		.size	CyDisableInts, .-CyDisableInts
 902              		.section	.text.CyEnableInts,"ax",%progbits
 903              		.align	2
 904              		.global	CyEnableInts
 905              		.code	16
 906              		.thumb_func
 907              		.type	CyEnableInts, %function
 908              	CyEnableInts:
 909              	.LFB12:
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:.\Generated_Source\PSoC4/CyLib.c **** *
2181:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:.\Generated_Source\PSoC4/CyLib.c **** *
2184:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2185:.\Generated_Source\PSoC4/CyLib.c **** *  None
2186:.\Generated_Source\PSoC4/CyLib.c **** *
2187:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:.\Generated_Source\PSoC4/CyLib.c **** {
 910              		.loc 1 2189 0
 911              		.cfi_startproc
 912 0000 80B5     		push	{r7, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 82B0     		sub	sp, sp, #8
 917              		.cfi_def_cfa_offset 16
 918 0004 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 920 0006 7860     		str	r0, [r7, #4]
2190:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 921              		.loc 1 2190 0
 922 0008 024B     		ldr	r3, .L52
 923 000a 7A68     		ldr	r2, [r7, #4]
 924 000c 1A60     		str	r2, [r3]
2191:.\Generated_Source\PSoC4/CyLib.c **** }
 925              		.loc 1 2191 0
 926 000e BD46     		mov	sp, r7
 927 0010 02B0     		add	sp, sp, #8
 928              		@ sp needed
 929 0012 80BD     		pop	{r7, pc}
 930              	.L53:
 931              		.align	2
 932              	.L52:
 933 0014 00E100E0 		.word	-536813312
 934              		.cfi_endproc
 935              	.LFE12:
 936              		.size	CyEnableInts, .-CyEnableInts
 937              		.section	.text.CyIntSetSysVector,"ax",%progbits
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 56


 938              		.align	2
 939              		.global	CyIntSetSysVector
 940              		.code	16
 941              		.thumb_func
 942              		.type	CyIntSetSysVector, %function
 943              	CyIntSetSysVector:
 944              	.LFB13:
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c **** 
2194:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2197:.\Generated_Source\PSoC4/CyLib.c **** *
2198:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:.\Generated_Source\PSoC4/CyLib.c **** *
2202:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:.\Generated_Source\PSoC4/CyLib.c **** *
2210:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:.\Generated_Source\PSoC4/CyLib.c **** *
2212:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2213:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:.\Generated_Source\PSoC4/CyLib.c **** *
2215:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:.\Generated_Source\PSoC4/CyLib.c **** {
 945              		.loc 1 2217 0
 946              		.cfi_startproc
 947 0000 80B5     		push	{r7, lr}
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 951 0002 84B0     		sub	sp, sp, #16
 952              		.cfi_def_cfa_offset 24
 953 0004 00AF     		add	r7, sp, #0
 954              		.cfi_def_cfa_register 7
 955 0006 021C     		mov	r2, r0
 956 0008 3960     		str	r1, [r7]
 957 000a FB1D     		add	r3, r7, #7
 958 000c 1A70     		strb	r2, [r3]
2218:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2219:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 959              		.loc 1 2219 0
 960 000e 8023     		mov	r3, #128
 961 0010 9B05     		lsl	r3, r3, #22
 962 0012 FB60     		str	r3, [r7, #12]
2220:.\Generated_Source\PSoC4/CyLib.c **** 
2221:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 57


2224:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 963              		.loc 1 2224 0
 964 0014 FB1D     		add	r3, r7, #7
 965 0016 1B78     		ldrb	r3, [r3]
 966 0018 9B00     		lsl	r3, r3, #2
 967 001a FA68     		ldr	r2, [r7, #12]
 968 001c D318     		add	r3, r2, r3
 969 001e 1B68     		ldr	r3, [r3]
 970 0020 BB60     		str	r3, [r7, #8]
2225:.\Generated_Source\PSoC4/CyLib.c **** 
2226:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 971              		.loc 1 2227 0
 972 0022 FB1D     		add	r3, r7, #7
 973 0024 1B78     		ldrb	r3, [r3]
 974 0026 9B00     		lsl	r3, r3, #2
 975 0028 FA68     		ldr	r2, [r7, #12]
 976 002a D318     		add	r3, r2, r3
 977 002c 3A68     		ldr	r2, [r7]
 978 002e 1A60     		str	r2, [r3]
2228:.\Generated_Source\PSoC4/CyLib.c **** 
2229:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 979              		.loc 1 2229 0
 980 0030 BB68     		ldr	r3, [r7, #8]
2230:.\Generated_Source\PSoC4/CyLib.c **** }
 981              		.loc 1 2230 0
 982 0032 181C     		mov	r0, r3
 983 0034 BD46     		mov	sp, r7
 984 0036 04B0     		add	sp, sp, #16
 985              		@ sp needed
 986 0038 80BD     		pop	{r7, pc}
 987              		.cfi_endproc
 988              	.LFE13:
 989              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 990 003a C046     		.section	.text.CyIntGetSysVector,"ax",%progbits
 991              		.align	2
 992              		.global	CyIntGetSysVector
 993              		.code	16
 994              		.thumb_func
 995              		.type	CyIntGetSysVector, %function
 996              	CyIntGetSysVector:
 997              	.LFB14:
2231:.\Generated_Source\PSoC4/CyLib.c **** 
2232:.\Generated_Source\PSoC4/CyLib.c **** 
2233:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2234:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:.\Generated_Source\PSoC4/CyLib.c **** *
2237:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:.\Generated_Source\PSoC4/CyLib.c **** *
2241:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2245:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 58


2246:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2247:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:.\Generated_Source\PSoC4/CyLib.c **** *
2249:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2250:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:.\Generated_Source\PSoC4/CyLib.c **** *
2252:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:.\Generated_Source\PSoC4/CyLib.c **** {
 998              		.loc 1 2254 0
 999              		.cfi_startproc
 1000 0000 80B5     		push	{r7, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 84B0     		sub	sp, sp, #16
 1005              		.cfi_def_cfa_offset 24
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 1008 0006 021C     		mov	r2, r0
 1009 0008 FB1D     		add	r3, r7, #7
 1010 000a 1A70     		strb	r2, [r3]
2255:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1011              		.loc 1 2255 0
 1012 000c 8023     		mov	r3, #128
 1013 000e 9B05     		lsl	r3, r3, #22
 1014 0010 FB60     		str	r3, [r7, #12]
2256:.\Generated_Source\PSoC4/CyLib.c **** 
2257:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2258:.\Generated_Source\PSoC4/CyLib.c **** 
2259:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1015              		.loc 1 2259 0
 1016 0012 FB1D     		add	r3, r7, #7
 1017 0014 1B78     		ldrb	r3, [r3]
 1018 0016 9B00     		lsl	r3, r3, #2
 1019 0018 FA68     		ldr	r2, [r7, #12]
 1020 001a D318     		add	r3, r2, r3
 1021 001c 1B68     		ldr	r3, [r3]
2260:.\Generated_Source\PSoC4/CyLib.c **** }
 1022              		.loc 1 2260 0
 1023 001e 181C     		mov	r0, r3
 1024 0020 BD46     		mov	sp, r7
 1025 0022 04B0     		add	sp, sp, #16
 1026              		@ sp needed
 1027 0024 80BD     		pop	{r7, pc}
 1028              		.cfi_endproc
 1029              	.LFE14:
 1030              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1031 0026 C046     		.section	.text.CyIntSetVector,"ax",%progbits
 1032              		.align	2
 1033              		.global	CyIntSetVector
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	CyIntSetVector, %function
 1037              	CyIntSetVector:
 1038              	.LFB15:
2261:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 59


2262:.\Generated_Source\PSoC4/CyLib.c **** 
2263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:.\Generated_Source\PSoC4/CyLib.c **** *
2267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:.\Generated_Source\PSoC4/CyLib.c **** *
2270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2272:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:.\Generated_Source\PSoC4/CyLib.c **** *
2274:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2275:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:.\Generated_Source\PSoC4/CyLib.c **** *
2277:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:.\Generated_Source\PSoC4/CyLib.c **** {
 1039              		.loc 1 2279 0
 1040              		.cfi_startproc
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 84B0     		sub	sp, sp, #16
 1046              		.cfi_def_cfa_offset 24
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 021C     		mov	r2, r0
 1050 0008 3960     		str	r1, [r7]
 1051 000a FB1D     		add	r3, r7, #7
 1052 000c 1A70     		strb	r2, [r3]
2280:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1053              		.loc 1 2281 0
 1054 000e 8023     		mov	r3, #128
 1055 0010 9B05     		lsl	r3, r3, #22
 1056 0012 FB60     		str	r3, [r7, #12]
2282:.\Generated_Source\PSoC4/CyLib.c **** 
2283:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2284:.\Generated_Source\PSoC4/CyLib.c **** 
2285:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1057              		.loc 1 2286 0
 1058 0014 FB1D     		add	r3, r7, #7
 1059 0016 1B78     		ldrb	r3, [r3]
 1060 0018 1033     		add	r3, r3, #16
 1061 001a 9B00     		lsl	r3, r3, #2
 1062 001c FA68     		ldr	r2, [r7, #12]
 1063 001e D318     		add	r3, r2, r3
 1064 0020 1B68     		ldr	r3, [r3]
 1065 0022 BB60     		str	r3, [r7, #8]
2287:.\Generated_Source\PSoC4/CyLib.c **** 
2288:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1066              		.loc 1 2289 0
 1067 0024 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 60


 1068 0026 1B78     		ldrb	r3, [r3]
 1069 0028 1033     		add	r3, r3, #16
 1070 002a 9B00     		lsl	r3, r3, #2
 1071 002c FA68     		ldr	r2, [r7, #12]
 1072 002e D318     		add	r3, r2, r3
 1073 0030 3A68     		ldr	r2, [r7]
 1074 0032 1A60     		str	r2, [r3]
2290:.\Generated_Source\PSoC4/CyLib.c **** 
2291:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1075              		.loc 1 2291 0
 1076 0034 BB68     		ldr	r3, [r7, #8]
2292:.\Generated_Source\PSoC4/CyLib.c **** }
 1077              		.loc 1 2292 0
 1078 0036 181C     		mov	r0, r3
 1079 0038 BD46     		mov	sp, r7
 1080 003a 04B0     		add	sp, sp, #16
 1081              		@ sp needed
 1082 003c 80BD     		pop	{r7, pc}
 1083              		.cfi_endproc
 1084              	.LFE15:
 1085              		.size	CyIntSetVector, .-CyIntSetVector
 1086 003e C046     		.section	.text.CyIntGetVector,"ax",%progbits
 1087              		.align	2
 1088              		.global	CyIntGetVector
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	CyIntGetVector, %function
 1092              	CyIntGetVector:
 1093              	.LFB16:
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** 
2295:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:.\Generated_Source\PSoC4/CyLib.c **** *
2299:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2300:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2306:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:.\Generated_Source\PSoC4/CyLib.c **** *
2308:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:.\Generated_Source\PSoC4/CyLib.c **** {
 1094              		.loc 1 2310 0
 1095              		.cfi_startproc
 1096 0000 80B5     		push	{r7, lr}
 1097              		.cfi_def_cfa_offset 8
 1098              		.cfi_offset 7, -8
 1099              		.cfi_offset 14, -4
 1100 0002 84B0     		sub	sp, sp, #16
 1101              		.cfi_def_cfa_offset 24
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 61


 1104 0006 021C     		mov	r2, r0
 1105 0008 FB1D     		add	r3, r7, #7
 1106 000a 1A70     		strb	r2, [r3]
2311:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1107              		.loc 1 2311 0
 1108 000c 8023     		mov	r3, #128
 1109 000e 9B05     		lsl	r3, r3, #22
 1110 0010 FB60     		str	r3, [r7, #12]
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2314:.\Generated_Source\PSoC4/CyLib.c **** 
2315:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1111              		.loc 1 2315 0
 1112 0012 FB1D     		add	r3, r7, #7
 1113 0014 1B78     		ldrb	r3, [r3]
 1114 0016 1033     		add	r3, r3, #16
 1115 0018 9B00     		lsl	r3, r3, #2
 1116 001a FA68     		ldr	r2, [r7, #12]
 1117 001c D318     		add	r3, r2, r3
 1118 001e 1B68     		ldr	r3, [r3]
2316:.\Generated_Source\PSoC4/CyLib.c **** }
 1119              		.loc 1 2316 0
 1120 0020 181C     		mov	r0, r3
 1121 0022 BD46     		mov	sp, r7
 1122 0024 04B0     		add	sp, sp, #16
 1123              		@ sp needed
 1124 0026 80BD     		pop	{r7, pc}
 1125              		.cfi_endproc
 1126              	.LFE16:
 1127              		.size	CyIntGetVector, .-CyIntGetVector
 1128              		.section	.text.CyIntSetPriority,"ax",%progbits
 1129              		.align	2
 1130              		.global	CyIntSetPriority
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CyIntSetPriority, %function
 1134              	CyIntSetPriority:
 1135              	.LFB17:
2317:.\Generated_Source\PSoC4/CyLib.c **** 
2318:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:.\Generated_Source\PSoC4/CyLib.c **** *
2322:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:.\Generated_Source\PSoC4/CyLib.c **** *
2325:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2328:.\Generated_Source\PSoC4/CyLib.c **** *
2329:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2330:.\Generated_Source\PSoC4/CyLib.c **** *  None
2331:.\Generated_Source\PSoC4/CyLib.c **** *
2332:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:.\Generated_Source\PSoC4/CyLib.c **** {
 1136              		.loc 1 2334 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 62


 1137              		.cfi_startproc
 1138 0000 90B5     		push	{r4, r7, lr}
 1139              		.cfi_def_cfa_offset 12
 1140              		.cfi_offset 4, -12
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 87B0     		sub	sp, sp, #28
 1144              		.cfi_def_cfa_offset 40
 1145 0004 00AF     		add	r7, sp, #0
 1146              		.cfi_def_cfa_register 7
 1147 0006 021C     		mov	r2, r0
 1148 0008 FB1D     		add	r3, r7, #7
 1149 000a 1A70     		strb	r2, [r3]
 1150 000c BB1D     		add	r3, r7, #6
 1151 000e 0A1C     		add	r2, r1, #0
 1152 0010 1A70     		strb	r2, [r3]
2335:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:.\Generated_Source\PSoC4/CyLib.c **** 
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2340:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1153              		.loc 1 2342 0
 1154 0012 FB1D     		add	r3, r7, #7
 1155 0014 1B78     		ldrb	r3, [r3]
 1156 0016 0322     		mov	r2, #3
 1157 0018 1340     		and	r3, r2
 1158 001a DB00     		lsl	r3, r3, #3
 1159 001c 0633     		add	r3, r3, #6
 1160 001e 7B61     		str	r3, [r7, #20]
2343:.\Generated_Source\PSoC4/CyLib.c **** 
2344:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1161              		.loc 1 2344 0
 1162 0020 1323     		mov	r3, #19
 1163 0022 FC18     		add	r4, r7, r3
 1164 0024 FFF7FEFF 		bl	CyEnterCriticalSection
 1165 0028 031C     		mov	r3, r0
 1166 002a 2370     		strb	r3, [r4]
2345:.\Generated_Source\PSoC4/CyLib.c **** 
2346:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1167              		.loc 1 2346 0
 1168 002c FB1D     		add	r3, r7, #7
 1169 002e 1B78     		ldrb	r3, [r3]
 1170 0030 9B08     		lsr	r3, r3, #2
 1171 0032 DBB2     		uxtb	r3, r3
 1172 0034 9B00     		lsl	r3, r3, #2
 1173 0036 144A     		ldr	r2, .L63
 1174 0038 9446     		mov	ip, r2
 1175 003a 6344     		add	r3, r3, ip
 1176 003c 1B68     		ldr	r3, [r3]
 1177 003e FB60     		str	r3, [r7, #12]
2347:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1178              		.loc 1 2347 0
 1179 0040 7B69     		ldr	r3, [r7, #20]
 1180 0042 0322     		mov	r2, #3
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 63


 1181 0044 9A40     		lsl	r2, r2, r3
 1182 0046 131C     		mov	r3, r2
 1183 0048 DA43     		mvn	r2, r3
 1184 004a FB68     		ldr	r3, [r7, #12]
 1185 004c 1340     		and	r3, r2
 1186 004e FB60     		str	r3, [r7, #12]
2348:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1187              		.loc 1 2348 0
 1188 0050 BB1D     		add	r3, r7, #6
 1189 0052 1A78     		ldrb	r2, [r3]
 1190 0054 7B69     		ldr	r3, [r7, #20]
 1191 0056 9A40     		lsl	r2, r2, r3
 1192 0058 131C     		mov	r3, r2
 1193 005a FA68     		ldr	r2, [r7, #12]
 1194 005c 1343     		orr	r3, r2
 1195 005e FB60     		str	r3, [r7, #12]
2349:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1196              		.loc 1 2349 0
 1197 0060 FB1D     		add	r3, r7, #7
 1198 0062 1B78     		ldrb	r3, [r3]
 1199 0064 9B08     		lsr	r3, r3, #2
 1200 0066 DBB2     		uxtb	r3, r3
 1201 0068 9B00     		lsl	r3, r3, #2
 1202 006a 074A     		ldr	r2, .L63
 1203 006c 9446     		mov	ip, r2
 1204 006e 6344     		add	r3, r3, ip
 1205 0070 FA68     		ldr	r2, [r7, #12]
 1206 0072 1A60     		str	r2, [r3]
2350:.\Generated_Source\PSoC4/CyLib.c **** 
2351:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1207              		.loc 1 2351 0
 1208 0074 1323     		mov	r3, #19
 1209 0076 FB18     		add	r3, r7, r3
 1210 0078 1B78     		ldrb	r3, [r3]
 1211 007a 181C     		mov	r0, r3
 1212 007c FFF7FEFF 		bl	CyExitCriticalSection
2352:.\Generated_Source\PSoC4/CyLib.c **** }
 1213              		.loc 1 2352 0
 1214 0080 BD46     		mov	sp, r7
 1215 0082 07B0     		add	sp, sp, #28
 1216              		@ sp needed
 1217 0084 90BD     		pop	{r4, r7, pc}
 1218              	.L64:
 1219 0086 C046     		.align	2
 1220              	.L63:
 1221 0088 00E400E0 		.word	-536812544
 1222              		.cfi_endproc
 1223              	.LFE17:
 1224              		.size	CyIntSetPriority, .-CyIntSetPriority
 1225              		.section	.text.CyIntGetPriority,"ax",%progbits
 1226              		.align	2
 1227              		.global	CyIntGetPriority
 1228              		.code	16
 1229              		.thumb_func
 1230              		.type	CyIntGetPriority, %function
 1231              	CyIntGetPriority:
 1232              	.LFB18:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 64


2353:.\Generated_Source\PSoC4/CyLib.c **** 
2354:.\Generated_Source\PSoC4/CyLib.c **** 
2355:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2357:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** *
2359:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:.\Generated_Source\PSoC4/CyLib.c **** *
2362:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2366:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:.\Generated_Source\PSoC4/CyLib.c **** *
2368:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:.\Generated_Source\PSoC4/CyLib.c **** {
 1233              		.loc 1 2370 0
 1234              		.cfi_startproc
 1235 0000 80B5     		push	{r7, lr}
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 7, -8
 1238              		.cfi_offset 14, -4
 1239 0002 84B0     		sub	sp, sp, #16
 1240              		.cfi_def_cfa_offset 24
 1241 0004 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 1243 0006 021C     		mov	r2, r0
 1244 0008 FB1D     		add	r3, r7, #7
 1245 000a 1A70     		strb	r2, [r3]
2371:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2374:.\Generated_Source\PSoC4/CyLib.c **** 
2375:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1246              		.loc 1 2375 0
 1247 000c FB1D     		add	r3, r7, #7
 1248 000e 1B78     		ldrb	r3, [r3]
 1249 0010 9B08     		lsr	r3, r3, #2
 1250 0012 DBB2     		uxtb	r3, r3
 1251 0014 9B00     		lsl	r3, r3, #2
 1252 0016 0C4A     		ldr	r2, .L67
 1253 0018 9446     		mov	ip, r2
 1254 001a 6344     		add	r3, r3, ip
 1255 001c 1B68     		ldr	r3, [r3]
 1256 001e FA1D     		add	r2, r7, #7
 1257 0020 1278     		ldrb	r2, [r2]
 1258 0022 0321     		mov	r1, #3
 1259 0024 0A40     		and	r2, r1
 1260 0026 D200     		lsl	r2, r2, #3
 1261 0028 0632     		add	r2, r2, #6
 1262 002a D340     		lsr	r3, r3, r2
 1263 002c 1A1C     		mov	r2, r3
 1264 002e 0F23     		mov	r3, #15
 1265 0030 FB18     		add	r3, r7, r3
 1266 0032 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 65


2376:.\Generated_Source\PSoC4/CyLib.c **** 
2377:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1267              		.loc 1 2377 0
 1268 0034 0F23     		mov	r3, #15
 1269 0036 FB18     		add	r3, r7, r3
 1270 0038 1B78     		ldrb	r3, [r3]
 1271 003a 0322     		mov	r2, #3
 1272 003c 1340     		and	r3, r2
 1273 003e DBB2     		uxtb	r3, r3
2378:.\Generated_Source\PSoC4/CyLib.c **** }
 1274              		.loc 1 2378 0
 1275 0040 181C     		mov	r0, r3
 1276 0042 BD46     		mov	sp, r7
 1277 0044 04B0     		add	sp, sp, #16
 1278              		@ sp needed
 1279 0046 80BD     		pop	{r7, pc}
 1280              	.L68:
 1281              		.align	2
 1282              	.L67:
 1283 0048 00E400E0 		.word	-536812544
 1284              		.cfi_endproc
 1285              	.LFE18:
 1286              		.size	CyIntGetPriority, .-CyIntGetPriority
 1287              		.section	.text.CyIntEnable,"ax",%progbits
 1288              		.align	2
 1289              		.global	CyIntEnable
 1290              		.code	16
 1291              		.thumb_func
 1292              		.type	CyIntEnable, %function
 1293              	CyIntEnable:
 1294              	.LFB19:
2379:.\Generated_Source\PSoC4/CyLib.c **** 
2380:.\Generated_Source\PSoC4/CyLib.c **** 
2381:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** *
2385:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:.\Generated_Source\PSoC4/CyLib.c **** *
2388:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2390:.\Generated_Source\PSoC4/CyLib.c **** *
2391:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2392:.\Generated_Source\PSoC4/CyLib.c **** *  None
2393:.\Generated_Source\PSoC4/CyLib.c **** *
2394:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:.\Generated_Source\PSoC4/CyLib.c **** {
 1295              		.loc 1 2396 0
 1296              		.cfi_startproc
 1297 0000 80B5     		push	{r7, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 82B0     		sub	sp, sp, #8
 1302              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 66


 1303 0004 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 1305 0006 021C     		mov	r2, r0
 1306 0008 FB1D     		add	r3, r7, #7
 1307 000a 1A70     		strb	r2, [r3]
2397:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1308              		.loc 1 2397 0
 1309 000c 054B     		ldr	r3, .L70
 1310 000e FA1D     		add	r2, r7, #7
 1311 0010 1278     		ldrb	r2, [r2]
 1312 0012 1F21     		mov	r1, #31
 1313 0014 0A40     		and	r2, r1
 1314 0016 0121     		mov	r1, #1
 1315 0018 9140     		lsl	r1, r1, r2
 1316 001a 0A1C     		mov	r2, r1
 1317 001c 1A60     		str	r2, [r3]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 1318              		.loc 1 2398 0
 1319 001e BD46     		mov	sp, r7
 1320 0020 02B0     		add	sp, sp, #8
 1321              		@ sp needed
 1322 0022 80BD     		pop	{r7, pc}
 1323              	.L71:
 1324              		.align	2
 1325              	.L70:
 1326 0024 00E100E0 		.word	-536813312
 1327              		.cfi_endproc
 1328              	.LFE19:
 1329              		.size	CyIntEnable, .-CyIntEnable
 1330              		.section	.text.CyIntGetState,"ax",%progbits
 1331              		.align	2
 1332              		.global	CyIntGetState
 1333              		.code	16
 1334              		.thumb_func
 1335              		.type	CyIntGetState, %function
 1336              	CyIntGetState:
 1337              	.LFB20:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:.\Generated_Source\PSoC4/CyLib.c **** *
2408:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2410:.\Generated_Source\PSoC4/CyLib.c **** *
2411:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2412:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:.\Generated_Source\PSoC4/CyLib.c **** *
2414:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:.\Generated_Source\PSoC4/CyLib.c **** {
 1338              		.loc 1 2416 0
 1339              		.cfi_startproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 67


 1340 0000 80B5     		push	{r7, lr}
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 7, -8
 1343              		.cfi_offset 14, -4
 1344 0002 82B0     		sub	sp, sp, #8
 1345              		.cfi_def_cfa_offset 16
 1346 0004 00AF     		add	r7, sp, #0
 1347              		.cfi_def_cfa_register 7
 1348 0006 021C     		mov	r2, r0
 1349 0008 FB1D     		add	r3, r7, #7
 1350 000a 1A70     		strb	r2, [r3]
2417:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1351              		.loc 1 2418 0
 1352 000c 074B     		ldr	r3, .L74
 1353 000e 1A68     		ldr	r2, [r3]
 1354 0010 FB1D     		add	r3, r7, #7
 1355 0012 1B78     		ldrb	r3, [r3]
 1356 0014 1F21     		mov	r1, #31
 1357 0016 0B40     		and	r3, r1
 1358 0018 DA40     		lsr	r2, r2, r3
 1359 001a 131C     		mov	r3, r2
 1360 001c DBB2     		uxtb	r3, r3
 1361 001e 0122     		mov	r2, #1
 1362 0020 1340     		and	r3, r2
 1363 0022 DBB2     		uxtb	r3, r3
2419:.\Generated_Source\PSoC4/CyLib.c **** }
 1364              		.loc 1 2419 0
 1365 0024 181C     		mov	r0, r3
 1366 0026 BD46     		mov	sp, r7
 1367 0028 02B0     		add	sp, sp, #8
 1368              		@ sp needed
 1369 002a 80BD     		pop	{r7, pc}
 1370              	.L75:
 1371              		.align	2
 1372              	.L74:
 1373 002c 00E100E0 		.word	-536813312
 1374              		.cfi_endproc
 1375              	.LFE20:
 1376              		.size	CyIntGetState, .-CyIntGetState
 1377              		.section	.text.CyIntDisable,"ax",%progbits
 1378              		.align	2
 1379              		.global	CyIntDisable
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CyIntDisable, %function
 1383              	CyIntDisable:
 1384              	.LFB21:
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c **** 
2422:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:.\Generated_Source\PSoC4/CyLib.c **** *
2426:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 68


2429:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2433:.\Generated_Source\PSoC4/CyLib.c **** *  None
2434:.\Generated_Source\PSoC4/CyLib.c **** *
2435:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:.\Generated_Source\PSoC4/CyLib.c **** {
 1385              		.loc 1 2437 0
 1386              		.cfi_startproc
 1387 0000 80B5     		push	{r7, lr}
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 82B0     		sub	sp, sp, #8
 1392              		.cfi_def_cfa_offset 16
 1393 0004 00AF     		add	r7, sp, #0
 1394              		.cfi_def_cfa_register 7
 1395 0006 021C     		mov	r2, r0
 1396 0008 FB1D     		add	r3, r7, #7
 1397 000a 1A70     		strb	r2, [r3]
2438:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1398              		.loc 1 2438 0
 1399 000c 054B     		ldr	r3, .L77
 1400 000e FA1D     		add	r2, r7, #7
 1401 0010 1278     		ldrb	r2, [r2]
 1402 0012 1F21     		mov	r1, #31
 1403 0014 0A40     		and	r2, r1
 1404 0016 0121     		mov	r1, #1
 1405 0018 9140     		lsl	r1, r1, r2
 1406 001a 0A1C     		mov	r2, r1
 1407 001c 1A60     		str	r2, [r3]
2439:.\Generated_Source\PSoC4/CyLib.c **** }
 1408              		.loc 1 2439 0
 1409 001e BD46     		mov	sp, r7
 1410 0020 02B0     		add	sp, sp, #8
 1411              		@ sp needed
 1412 0022 80BD     		pop	{r7, pc}
 1413              	.L78:
 1414              		.align	2
 1415              	.L77:
 1416 0024 80E100E0 		.word	-536813184
 1417              		.cfi_endproc
 1418              	.LFE21:
 1419              		.size	CyIntDisable, .-CyIntDisable
 1420              		.section	.text.CyIntSetPending,"ax",%progbits
 1421              		.align	2
 1422              		.global	CyIntSetPending
 1423              		.code	16
 1424              		.thumb_func
 1425              		.type	CyIntSetPending, %function
 1426              	CyIntSetPending:
 1427              	.LFB22:
2440:.\Generated_Source\PSoC4/CyLib.c **** 
2441:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 69


2443:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:.\Generated_Source\PSoC4/CyLib.c **** *
2445:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:.\Generated_Source\PSoC4/CyLib.c **** *
2448:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:.\Generated_Source\PSoC4/CyLib.c **** *
2451:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2452:.\Generated_Source\PSoC4/CyLib.c **** *  None
2453:.\Generated_Source\PSoC4/CyLib.c **** *
2454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:.\Generated_Source\PSoC4/CyLib.c **** {
 1428              		.loc 1 2456 0
 1429              		.cfi_startproc
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 82B0     		sub	sp, sp, #8
 1435              		.cfi_def_cfa_offset 16
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
 1438 0006 021C     		mov	r2, r0
 1439 0008 FB1D     		add	r3, r7, #7
 1440 000a 1A70     		strb	r2, [r3]
2457:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1441              		.loc 1 2457 0
 1442 000c 054B     		ldr	r3, .L80
 1443 000e FA1D     		add	r2, r7, #7
 1444 0010 1278     		ldrb	r2, [r2]
 1445 0012 1F21     		mov	r1, #31
 1446 0014 0A40     		and	r2, r1
 1447 0016 0121     		mov	r1, #1
 1448 0018 9140     		lsl	r1, r1, r2
 1449 001a 0A1C     		mov	r2, r1
 1450 001c 1A60     		str	r2, [r3]
2458:.\Generated_Source\PSoC4/CyLib.c **** }
 1451              		.loc 1 2458 0
 1452 001e BD46     		mov	sp, r7
 1453 0020 02B0     		add	sp, sp, #8
 1454              		@ sp needed
 1455 0022 80BD     		pop	{r7, pc}
 1456              	.L81:
 1457              		.align	2
 1458              	.L80:
 1459 0024 00E200E0 		.word	-536813056
 1460              		.cfi_endproc
 1461              	.LFE22:
 1462              		.size	CyIntSetPending, .-CyIntSetPending
 1463              		.section	.text.CyIntClearPending,"ax",%progbits
 1464              		.align	2
 1465              		.global	CyIntClearPending
 1466              		.code	16
 1467              		.thumb_func
 1468              		.type	CyIntClearPending, %function
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 70


 1469              	CyIntClearPending:
 1470              	.LFB23:
2459:.\Generated_Source\PSoC4/CyLib.c **** 
2460:.\Generated_Source\PSoC4/CyLib.c **** 
2461:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:.\Generated_Source\PSoC4/CyLib.c **** *
2465:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2466:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2472:.\Generated_Source\PSoC4/CyLib.c **** *  None
2473:.\Generated_Source\PSoC4/CyLib.c **** *
2474:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:.\Generated_Source\PSoC4/CyLib.c **** {
 1471              		.loc 1 2476 0
 1472              		.cfi_startproc
 1473 0000 80B5     		push	{r7, lr}
 1474              		.cfi_def_cfa_offset 8
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 82B0     		sub	sp, sp, #8
 1478              		.cfi_def_cfa_offset 16
 1479 0004 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 1481 0006 021C     		mov	r2, r0
 1482 0008 FB1D     		add	r3, r7, #7
 1483 000a 1A70     		strb	r2, [r3]
2477:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1484              		.loc 1 2477 0
 1485 000c 054B     		ldr	r3, .L83
 1486 000e FA1D     		add	r2, r7, #7
 1487 0010 1278     		ldrb	r2, [r2]
 1488 0012 1F21     		mov	r1, #31
 1489 0014 0A40     		and	r2, r1
 1490 0016 0121     		mov	r1, #1
 1491 0018 9140     		lsl	r1, r1, r2
 1492 001a 0A1C     		mov	r2, r1
 1493 001c 1A60     		str	r2, [r3]
2478:.\Generated_Source\PSoC4/CyLib.c **** }
 1494              		.loc 1 2478 0
 1495 001e BD46     		mov	sp, r7
 1496 0020 02B0     		add	sp, sp, #8
 1497              		@ sp needed
 1498 0022 80BD     		pop	{r7, pc}
 1499              	.L84:
 1500              		.align	2
 1501              	.L83:
 1502 0024 80E200E0 		.word	-536812928
 1503              		.cfi_endproc
 1504              	.LFE23:
 1505              		.size	CyIntClearPending, .-CyIntClearPending
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 71


 1506              		.section	.text.CyHalt,"ax",%progbits
 1507              		.align	2
 1508              		.global	CyHalt
 1509              		.code	16
 1510              		.thumb_func
 1511              		.type	CyHalt, %function
 1512              	CyHalt:
 1513              	.LFB24:
2479:.\Generated_Source\PSoC4/CyLib.c **** 
2480:.\Generated_Source\PSoC4/CyLib.c **** 
2481:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2482:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:.\Generated_Source\PSoC4/CyLib.c **** *
2485:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:.\Generated_Source\PSoC4/CyLib.c **** *
2488:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2489:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:.\Generated_Source\PSoC4/CyLib.c **** *
2491:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2492:.\Generated_Source\PSoC4/CyLib.c **** *  None
2493:.\Generated_Source\PSoC4/CyLib.c **** *
2494:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:.\Generated_Source\PSoC4/CyLib.c **** {
 1514              		.loc 1 2496 0
 1515              		.cfi_startproc
 1516 0000 80B5     		push	{r7, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 82B0     		sub	sp, sp, #8
 1521              		.cfi_def_cfa_offset 16
 1522 0004 00AF     		add	r7, sp, #0
 1523              		.cfi_def_cfa_register 7
 1524 0006 021C     		mov	r2, r0
 1525 0008 FB1D     		add	r3, r7, #7
 1526 000a 1A70     		strb	r2, [r3]
2497:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:.\Generated_Source\PSoC4/CyLib.c ****     {
2499:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2500:.\Generated_Source\PSoC4/CyLib.c ****     }
2501:.\Generated_Source\PSoC4/CyLib.c **** 
2502:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1527              		.loc 1 2505 0
 1528              	@ 2505 ".\Generated_Source\PSoC4\CyLib.c" 1
 1529 000c 01BE     		    bkpt    1
 1530              	@ 0 "" 2
2506:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:.\Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 2509 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 72


 1532              		.code	16
 1533 000e BD46     		mov	sp, r7
 1534 0010 02B0     		add	sp, sp, #8
 1535              		@ sp needed
 1536 0012 80BD     		pop	{r7, pc}
 1537              		.cfi_endproc
 1538              	.LFE24:
 1539              		.size	CyHalt, .-CyHalt
 1540              		.section	.text.CySoftwareReset,"ax",%progbits
 1541              		.align	2
 1542              		.global	CySoftwareReset
 1543              		.code	16
 1544              		.thumb_func
 1545              		.type	CySoftwareReset, %function
 1546              	CySoftwareReset:
 1547              	.LFB25:
2510:.\Generated_Source\PSoC4/CyLib.c **** 
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:.\Generated_Source\PSoC4/CyLib.c **** *
2516:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:.\Generated_Source\PSoC4/CyLib.c **** *
2519:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:.\Generated_Source\PSoC4/CyLib.c **** *  None
2521:.\Generated_Source\PSoC4/CyLib.c **** *
2522:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2523:.\Generated_Source\PSoC4/CyLib.c **** *  None
2524:.\Generated_Source\PSoC4/CyLib.c **** *
2525:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2526:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:.\Generated_Source\PSoC4/CyLib.c **** {
 1548              		.loc 1 2527 0
 1549              		.cfi_startproc
 1550 0000 80B5     		push	{r7, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 7, -8
 1553              		.cfi_offset 14, -4
 1554 0002 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
2528:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1556              		.loc 1 2532 0
 1557 0004 044B     		ldr	r3, .L87
 1558 0006 044A     		ldr	r2, .L87
 1559 0008 1268     		ldr	r2, [r2]
 1560 000a 1204     		lsl	r2, r2, #16
 1561 000c 120C     		lsr	r2, r2, #16
2533:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1562              		.loc 1 2533 0
 1563 000e 0349     		ldr	r1, .L87+4
 1564 0010 0A43     		orr	r2, r1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 73


2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1565              		.loc 1 2532 0
 1566 0012 1A60     		str	r2, [r3]
2534:.\Generated_Source\PSoC4/CyLib.c **** }
 1567              		.loc 1 2534 0
 1568 0014 BD46     		mov	sp, r7
 1569              		@ sp needed
 1570 0016 80BD     		pop	{r7, pc}
 1571              	.L88:
 1572              		.align	2
 1573              	.L87:
 1574 0018 0CED00E0 		.word	-536810228
 1575 001c 0400FA05 		.word	100270084
 1576              		.cfi_endproc
 1577              	.LFE25:
 1578              		.size	CySoftwareReset, .-CySoftwareReset
 1579              		.section	.text.CyDelay,"ax",%progbits
 1580              		.align	2
 1581              		.global	CyDelay
 1582              		.code	16
 1583              		.thumb_func
 1584              		.type	CyDelay, %function
 1585              	CyDelay:
 1586              	.LFB26:
2535:.\Generated_Source\PSoC4/CyLib.c **** 
2536:.\Generated_Source\PSoC4/CyLib.c **** 
2537:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2540:.\Generated_Source\PSoC4/CyLib.c **** *
2541:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2543:.\Generated_Source\PSoC4/CyLib.c **** *
2544:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:.\Generated_Source\PSoC4/CyLib.c **** *
2547:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2548:.\Generated_Source\PSoC4/CyLib.c **** *  None
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:.\Generated_Source\PSoC4/CyLib.c **** {
 1587              		.loc 1 2552 0
 1588              		.cfi_startproc
 1589 0000 80B5     		push	{r7, lr}
 1590              		.cfi_def_cfa_offset 8
 1591              		.cfi_offset 7, -8
 1592              		.cfi_offset 14, -4
 1593 0002 82B0     		sub	sp, sp, #8
 1594              		.cfi_def_cfa_offset 16
 1595 0004 00AF     		add	r7, sp, #0
 1596              		.cfi_def_cfa_register 7
 1597 0006 7860     		str	r0, [r7, #4]
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1598              		.loc 1 2553 0
 1599 0008 09E0     		b	.L90
 1600              	.L91:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 74


2554:.\Generated_Source\PSoC4/CyLib.c ****     {
2555:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:.\Generated_Source\PSoC4/CyLib.c ****          */
2558:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1601              		.loc 1 2558 0
 1602 000a 0C4B     		ldr	r3, .L92
 1603 000c 1B68     		ldr	r3, [r3]
 1604 000e 181C     		mov	r0, r3
 1605 0010 FFF7FEFF 		bl	CyDelayCycles
2559:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1606              		.loc 1 2559 0
 1607 0014 7B68     		ldr	r3, [r7, #4]
 1608 0016 0A4A     		ldr	r2, .L92+4
 1609 0018 9446     		mov	ip, r2
 1610 001a 6344     		add	r3, r3, ip
 1611 001c 7B60     		str	r3, [r7, #4]
 1612              	.L90:
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1613              		.loc 1 2553 0
 1614 001e 7A68     		ldr	r2, [r7, #4]
 1615 0020 8023     		mov	r3, #128
 1616 0022 1B02     		lsl	r3, r3, #8
 1617 0024 9A42     		cmp	r2, r3
 1618 0026 F0D8     		bhi	.L91
2560:.\Generated_Source\PSoC4/CyLib.c ****     }
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1619              		.loc 1 2562 0
 1620 0028 064B     		ldr	r3, .L92+8
 1621 002a 1B68     		ldr	r3, [r3]
 1622 002c 7A68     		ldr	r2, [r7, #4]
 1623 002e 5343     		mul	r3, r2
 1624 0030 181C     		mov	r0, r3
 1625 0032 FFF7FEFF 		bl	CyDelayCycles
2563:.\Generated_Source\PSoC4/CyLib.c **** }
 1626              		.loc 1 2563 0
 1627 0036 BD46     		mov	sp, r7
 1628 0038 02B0     		add	sp, sp, #8
 1629              		@ sp needed
 1630 003a 80BD     		pop	{r7, pc}
 1631              	.L93:
 1632              		.align	2
 1633              	.L92:
 1634 003c 00000000 		.word	cydelay32kMs
 1635 0040 0080FFFF 		.word	-32768
 1636 0044 00000000 		.word	cydelayFreqKhz
 1637              		.cfi_endproc
 1638              	.LFE26:
 1639              		.size	CyDelay, .-CyDelay
 1640              		.section	.text.CyDelayUs,"ax",%progbits
 1641              		.align	2
 1642              		.global	CyDelayUs
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CyDelayUs, %function
 1646              	CyDelayUs:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 75


 1647              	.LFB27:
2564:.\Generated_Source\PSoC4/CyLib.c **** 
2565:.\Generated_Source\PSoC4/CyLib.c **** 
2566:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:.\Generated_Source\PSoC4/CyLib.c **** *
2572:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:.\Generated_Source\PSoC4/CyLib.c **** *
2575:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2576:.\Generated_Source\PSoC4/CyLib.c **** *  None
2577:.\Generated_Source\PSoC4/CyLib.c **** *
2578:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:.\Generated_Source\PSoC4/CyLib.c **** {
 1648              		.loc 1 2580 0
 1649              		.cfi_startproc
 1650 0000 80B5     		push	{r7, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 82B0     		sub	sp, sp, #8
 1655              		.cfi_def_cfa_offset 16
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
 1658 0006 021C     		mov	r2, r0
 1659 0008 BB1D     		add	r3, r7, #6
 1660 000a 1A80     		strh	r2, [r3]
2581:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1661              		.loc 1 2581 0
 1662 000c BB1D     		add	r3, r7, #6
 1663 000e 1B88     		ldrh	r3, [r3]
 1664 0010 044A     		ldr	r2, .L95
 1665 0012 1278     		ldrb	r2, [r2]
 1666 0014 5343     		mul	r3, r2
 1667 0016 181C     		mov	r0, r3
 1668 0018 FFF7FEFF 		bl	CyDelayCycles
2582:.\Generated_Source\PSoC4/CyLib.c **** }
 1669              		.loc 1 2582 0
 1670 001c BD46     		mov	sp, r7
 1671 001e 02B0     		add	sp, sp, #8
 1672              		@ sp needed
 1673 0020 80BD     		pop	{r7, pc}
 1674              	.L96:
 1675 0022 C046     		.align	2
 1676              	.L95:
 1677 0024 00000000 		.word	cydelayFreqMhz
 1678              		.cfi_endproc
 1679              	.LFE27:
 1680              		.size	CyDelayUs, .-CyDelayUs
 1681              		.global	__aeabi_uidiv
 1682              		.section	.text.CyDelayFreq,"ax",%progbits
 1683              		.align	2
 1684              		.global	CyDelayFreq
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 76


 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CyDelayFreq, %function
 1688              	CyDelayFreq:
 1689              	.LFB28:
2583:.\Generated_Source\PSoC4/CyLib.c **** 
2584:.\Generated_Source\PSoC4/CyLib.c **** 
2585:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:.\Generated_Source\PSoC4/CyLib.c **** *
2591:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:.\Generated_Source\PSoC4/CyLib.c **** *
2594:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2595:.\Generated_Source\PSoC4/CyLib.c **** *  None
2596:.\Generated_Source\PSoC4/CyLib.c **** *
2597:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2599:.\Generated_Source\PSoC4/CyLib.c **** {
 1690              		.loc 1 2599 0
 1691              		.cfi_startproc
 1692 0000 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 82B0     		sub	sp, sp, #8
 1697              		.cfi_def_cfa_offset 16
 1698 0004 00AF     		add	r7, sp, #0
 1699              		.cfi_def_cfa_register 7
 1700 0006 7860     		str	r0, [r7, #4]
2600:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1701              		.loc 1 2600 0
 1702 0008 7B68     		ldr	r3, [r7, #4]
 1703 000a 002B     		cmp	r3, #0
 1704 000c 03D0     		beq	.L98
2601:.\Generated_Source\PSoC4/CyLib.c ****     {
2602:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1705              		.loc 1 2602 0
 1706 000e 154B     		ldr	r3, .L100
 1707 0010 7A68     		ldr	r2, [r7, #4]
 1708 0012 1A60     		str	r2, [r3]
 1709 0014 02E0     		b	.L99
 1710              	.L98:
2603:.\Generated_Source\PSoC4/CyLib.c ****     }
2604:.\Generated_Source\PSoC4/CyLib.c ****     else
2605:.\Generated_Source\PSoC4/CyLib.c ****     {
2606:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1711              		.loc 1 2606 0
 1712 0016 134B     		ldr	r3, .L100
 1713 0018 134A     		ldr	r2, .L100+4
 1714 001a 1A60     		str	r2, [r3]
 1715              	.L99:
2607:.\Generated_Source\PSoC4/CyLib.c ****     }
2608:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 77


2609:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1716              		.loc 1 2609 0
 1717 001c 114B     		ldr	r3, .L100
 1718 001e 1B68     		ldr	r3, [r3]
 1719 0020 124A     		ldr	r2, .L100+8
 1720 0022 9446     		mov	ip, r2
 1721 0024 6344     		add	r3, r3, ip
 1722 0026 181C     		mov	r0, r3
 1723 0028 1149     		ldr	r1, .L100+12
 1724 002a FFF7FEFF 		bl	__aeabi_uidiv
 1725 002e 031C     		mov	r3, r0
 1726 0030 DAB2     		uxtb	r2, r3
 1727 0032 104B     		ldr	r3, .L100+16
 1728 0034 1A70     		strb	r2, [r3]
2610:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1729              		.loc 1 2610 0
 1730 0036 0B4B     		ldr	r3, .L100
 1731 0038 1B68     		ldr	r3, [r3]
 1732 003a 0F4A     		ldr	r2, .L100+20
 1733 003c 9446     		mov	ip, r2
 1734 003e 6344     		add	r3, r3, ip
 1735 0040 181C     		mov	r0, r3
 1736 0042 FA23     		mov	r3, #250
 1737 0044 9900     		lsl	r1, r3, #2
 1738 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1739 004a 031C     		mov	r3, r0
 1740 004c 1A1C     		mov	r2, r3
 1741 004e 0B4B     		ldr	r3, .L100+24
 1742 0050 1A60     		str	r2, [r3]
2611:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1743              		.loc 1 2611 0
 1744 0052 0A4B     		ldr	r3, .L100+24
 1745 0054 1B68     		ldr	r3, [r3]
 1746 0056 DA03     		lsl	r2, r3, #15
 1747 0058 094B     		ldr	r3, .L100+28
 1748 005a 1A60     		str	r2, [r3]
2612:.\Generated_Source\PSoC4/CyLib.c **** }
 1749              		.loc 1 2612 0
 1750 005c BD46     		mov	sp, r7
 1751 005e 02B0     		add	sp, sp, #8
 1752              		@ sp needed
 1753 0060 80BD     		pop	{r7, pc}
 1754              	.L101:
 1755 0062 C046     		.align	2
 1756              	.L100:
 1757 0064 00000000 		.word	cydelayFreqHz
 1758 0068 006CDC02 		.word	48000000
 1759 006c 3F420F00 		.word	999999
 1760 0070 40420F00 		.word	1000000
 1761 0074 00000000 		.word	cydelayFreqMhz
 1762 0078 E7030000 		.word	999
 1763 007c 00000000 		.word	cydelayFreqKhz
 1764 0080 00000000 		.word	cydelay32kMs
 1765              		.cfi_endproc
 1766              	.LFE28:
 1767              		.size	CyDelayFreq, .-CyDelayFreq
 1768              		.section	.text.CySysTickStart,"ax",%progbits
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 78


 1769              		.align	2
 1770              		.global	CySysTickStart
 1771              		.code	16
 1772              		.thumb_func
 1773              		.type	CySysTickStart, %function
 1774              	CySysTickStart:
 1775              	.LFB29:
2613:.\Generated_Source\PSoC4/CyLib.c **** 
2614:.\Generated_Source\PSoC4/CyLib.c **** 
2615:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:.\Generated_Source\PSoC4/CyLib.c **** *
2619:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:.\Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:.\Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:.\Generated_Source\PSoC4/CyLib.c **** *
2623:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:.\Generated_Source\PSoC4/CyLib.c **** *  None
2625:.\Generated_Source\PSoC4/CyLib.c **** *
2626:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2627:.\Generated_Source\PSoC4/CyLib.c **** *  None
2628:.\Generated_Source\PSoC4/CyLib.c **** *
2629:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2630:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:.\Generated_Source\PSoC4/CyLib.c **** *
2632:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:.\Generated_Source\PSoC4/CyLib.c **** {
 1776              		.loc 1 2634 0
 1777              		.cfi_startproc
 1778 0000 80B5     		push	{r7, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
2635:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1784              		.loc 1 2635 0
 1785 0004 064B     		ldr	r3, .L104
 1786 0006 1B68     		ldr	r3, [r3]
 1787 0008 002B     		cmp	r3, #0
 1788 000a 04D1     		bne	.L103
2636:.\Generated_Source\PSoC4/CyLib.c ****     {
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1789              		.loc 1 2637 0
 1790 000c FFF7FEFF 		bl	CySysTickInit
2638:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1791              		.loc 1 2638 0
 1792 0010 034B     		ldr	r3, .L104
 1793 0012 0122     		mov	r2, #1
 1794 0014 1A60     		str	r2, [r3]
 1795              	.L103:
2639:.\Generated_Source\PSoC4/CyLib.c ****     }
2640:.\Generated_Source\PSoC4/CyLib.c **** 
2641:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1796              		.loc 1 2641 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 79


 1797 0016 FFF7FEFF 		bl	CySysTickEnable
2642:.\Generated_Source\PSoC4/CyLib.c **** }
 1798              		.loc 1 2642 0
 1799 001a BD46     		mov	sp, r7
 1800              		@ sp needed
 1801 001c 80BD     		pop	{r7, pc}
 1802              	.L105:
 1803 001e C046     		.align	2
 1804              	.L104:
 1805 0020 00000000 		.word	CySysTickInitVar
 1806              		.cfi_endproc
 1807              	.LFE29:
 1808              		.size	CySysTickStart, .-CySysTickStart
 1809              		.section	.text.CySysTickInit,"ax",%progbits
 1810              		.align	2
 1811              		.global	CySysTickInit
 1812              		.code	16
 1813              		.thumb_func
 1814              		.type	CySysTickInit, %function
 1815              	CySysTickInit:
 1816              	.LFB30:
2643:.\Generated_Source\PSoC4/CyLib.c **** 
2644:.\Generated_Source\PSoC4/CyLib.c **** 
2645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2648:.\Generated_Source\PSoC4/CyLib.c **** *
2649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2657:.\Generated_Source\PSoC4/CyLib.c ****     *
2658:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2660:.\Generated_Source\PSoC4/CyLib.c ****     *
2661:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:.\Generated_Source\PSoC4/CyLib.c ****     *
2664:.\Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:.\Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:.\Generated_Source\PSoC4/CyLib.c ****     *
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 1817              		.loc 1 2670 0
 1818              		.cfi_startproc
 1819 0000 80B5     		push	{r7, lr}
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 82B0     		sub	sp, sp, #8
 1824              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 80


 1825 0004 00AF     		add	r7, sp, #0
 1826              		.cfi_def_cfa_register 7
2671:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:.\Generated_Source\PSoC4/CyLib.c **** 
2673:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1827              		.loc 1 2673 0
 1828 0006 0023     		mov	r3, #0
 1829 0008 7B60     		str	r3, [r7, #4]
 1830 000a 07E0     		b	.L107
 1831              	.L108:
2674:.\Generated_Source\PSoC4/CyLib.c ****     {
2675:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1832              		.loc 1 2675 0 discriminator 3
 1833 000c 114B     		ldr	r3, .L109
 1834 000e 7A68     		ldr	r2, [r7, #4]
 1835 0010 9200     		lsl	r2, r2, #2
 1836 0012 0021     		mov	r1, #0
 1837 0014 D150     		str	r1, [r2, r3]
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1838              		.loc 1 2673 0 discriminator 3
 1839 0016 7B68     		ldr	r3, [r7, #4]
 1840 0018 0133     		add	r3, r3, #1
 1841 001a 7B60     		str	r3, [r7, #4]
 1842              	.L107:
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1843              		.loc 1 2673 0 is_stmt 0 discriminator 1
 1844 001c 7B68     		ldr	r3, [r7, #4]
 1845 001e 042B     		cmp	r3, #4
 1846 0020 F4D9     		bls	.L108
2676:.\Generated_Source\PSoC4/CyLib.c ****     }
2677:.\Generated_Source\PSoC4/CyLib.c **** 
2678:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1847              		.loc 1 2678 0 is_stmt 1
 1848 0022 0D4B     		ldr	r3, .L109+4
 1849 0024 0F20     		mov	r0, #15
 1850 0026 191C     		mov	r1, r3
 1851 0028 FFF7FEFF 		bl	CyIntSetSysVector
2679:.\Generated_Source\PSoC4/CyLib.c **** 
2680:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2682:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:.\Generated_Source\PSoC4/CyLib.c **** 
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1852              		.loc 1 2684 0
 1853 002c 0B4B     		ldr	r3, .L109+8
 1854 002e 1B68     		ldr	r3, [r3]
 1855 0030 181C     		mov	r0, r3
 1856 0032 FA23     		mov	r3, #250
 1857 0034 9900     		lsl	r1, r3, #2
 1858 0036 FFF7FEFF 		bl	__aeabi_uidiv
 1859 003a 031C     		mov	r3, r0
 1860 003c 181C     		mov	r0, r3
 1861 003e FFF7FEFF 		bl	CySysTickSetReload
2685:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1862              		.loc 1 2685 0
 1863 0042 FFF7FEFF 		bl	CySysTickClear
2686:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 81


 1864              		.loc 1 2686 0
 1865 0046 0F20     		mov	r0, #15
 1866 0048 FFF7FEFF 		bl	CyIntEnable
2687:.\Generated_Source\PSoC4/CyLib.c **** }
 1867              		.loc 1 2687 0
 1868 004c BD46     		mov	sp, r7
 1869 004e 02B0     		add	sp, sp, #8
 1870              		@ sp needed
 1871 0050 80BD     		pop	{r7, pc}
 1872              	.L110:
 1873 0052 C046     		.align	2
 1874              	.L109:
 1875 0054 00000000 		.word	CySysTickCallbacks
 1876 0058 00000000 		.word	CySysTickServiceCallbacks
 1877 005c 00000000 		.word	cydelayFreqHz
 1878              		.cfi_endproc
 1879              	.LFE30:
 1880              		.size	CySysTickInit, .-CySysTickInit
 1881              		.section	.text.CySysTickEnable,"ax",%progbits
 1882              		.align	2
 1883              		.global	CySysTickEnable
 1884              		.code	16
 1885              		.thumb_func
 1886              		.type	CySysTickEnable, %function
 1887              	CySysTickEnable:
 1888              	.LFB31:
2688:.\Generated_Source\PSoC4/CyLib.c **** 
2689:.\Generated_Source\PSoC4/CyLib.c **** 
2690:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:.\Generated_Source\PSoC4/CyLib.c **** *  None
2699:.\Generated_Source\PSoC4/CyLib.c **** *
2700:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2701:.\Generated_Source\PSoC4/CyLib.c **** *  None
2702:.\Generated_Source\PSoC4/CyLib.c **** *
2703:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2704:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2705:.\Generated_Source\PSoC4/CyLib.c **** *
2706:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:.\Generated_Source\PSoC4/CyLib.c **** {
 1889              		.loc 1 2708 0
 1890              		.cfi_startproc
 1891 0000 80B5     		push	{r7, lr}
 1892              		.cfi_def_cfa_offset 8
 1893              		.cfi_offset 7, -8
 1894              		.cfi_offset 14, -4
 1895 0002 00AF     		add	r7, sp, #0
 1896              		.cfi_def_cfa_register 7
2709:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1897              		.loc 1 2709 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 82


 1898 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2710:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1899              		.loc 1 2710 0
 1900 0008 034B     		ldr	r3, .L112
 1901 000a 034A     		ldr	r2, .L112
 1902 000c 1268     		ldr	r2, [r2]
 1903 000e 0121     		mov	r1, #1
 1904 0010 0A43     		orr	r2, r1
 1905 0012 1A60     		str	r2, [r3]
2711:.\Generated_Source\PSoC4/CyLib.c **** }
 1906              		.loc 1 2711 0
 1907 0014 BD46     		mov	sp, r7
 1908              		@ sp needed
 1909 0016 80BD     		pop	{r7, pc}
 1910              	.L113:
 1911              		.align	2
 1912              	.L112:
 1913 0018 10E000E0 		.word	-536813552
 1914              		.cfi_endproc
 1915              	.LFE31:
 1916              		.size	CySysTickEnable, .-CySysTickEnable
 1917              		.section	.text.CySysTickStop,"ax",%progbits
 1918              		.align	2
 1919              		.global	CySysTickStop
 1920              		.code	16
 1921              		.thumb_func
 1922              		.type	CySysTickStop, %function
 1923              	CySysTickStop:
 1924              	.LFB32:
2712:.\Generated_Source\PSoC4/CyLib.c **** 
2713:.\Generated_Source\PSoC4/CyLib.c **** 
2714:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:.\Generated_Source\PSoC4/CyLib.c **** *
2718:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:.\Generated_Source\PSoC4/CyLib.c **** *  None
2723:.\Generated_Source\PSoC4/CyLib.c **** *
2724:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2725:.\Generated_Source\PSoC4/CyLib.c **** *  None
2726:.\Generated_Source\PSoC4/CyLib.c **** *
2727:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:.\Generated_Source\PSoC4/CyLib.c **** *
2730:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:.\Generated_Source\PSoC4/CyLib.c **** {
 1925              		.loc 1 2732 0
 1926              		.cfi_startproc
 1927 0000 80B5     		push	{r7, lr}
 1928              		.cfi_def_cfa_offset 8
 1929              		.cfi_offset 7, -8
 1930              		.cfi_offset 14, -4
 1931 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 83


 1932              		.cfi_def_cfa_register 7
2733:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1933              		.loc 1 2733 0
 1934 0004 034B     		ldr	r3, .L115
 1935 0006 034A     		ldr	r2, .L115
 1936 0008 1268     		ldr	r2, [r2]
 1937 000a 0121     		mov	r1, #1
 1938 000c 8A43     		bic	r2, r1
 1939 000e 1A60     		str	r2, [r3]
2734:.\Generated_Source\PSoC4/CyLib.c **** }
 1940              		.loc 1 2734 0
 1941 0010 BD46     		mov	sp, r7
 1942              		@ sp needed
 1943 0012 80BD     		pop	{r7, pc}
 1944              	.L116:
 1945              		.align	2
 1946              	.L115:
 1947 0014 10E000E0 		.word	-536813552
 1948              		.cfi_endproc
 1949              	.LFE32:
 1950              		.size	CySysTickStop, .-CySysTickStop
 1951              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1952              		.align	2
 1953              		.global	CySysTickEnableInterrupt
 1954              		.code	16
 1955              		.thumb_func
 1956              		.type	CySysTickEnableInterrupt, %function
 1957              	CySysTickEnableInterrupt:
 1958              	.LFB33:
2735:.\Generated_Source\PSoC4/CyLib.c **** 
2736:.\Generated_Source\PSoC4/CyLib.c **** 
2737:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CyLib.c **** *
2741:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:.\Generated_Source\PSoC4/CyLib.c **** *
2744:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CyLib.c **** *  None
2746:.\Generated_Source\PSoC4/CyLib.c **** *
2747:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2748:.\Generated_Source\PSoC4/CyLib.c **** *  None
2749:.\Generated_Source\PSoC4/CyLib.c **** *
2750:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:.\Generated_Source\PSoC4/CyLib.c **** *
2753:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:.\Generated_Source\PSoC4/CyLib.c **** {
 1959              		.loc 1 2755 0
 1960              		.cfi_startproc
 1961 0000 80B5     		push	{r7, lr}
 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 7, -8
 1964              		.cfi_offset 14, -4
 1965 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 84


 1966              		.cfi_def_cfa_register 7
2756:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1967              		.loc 1 2756 0
 1968 0004 034B     		ldr	r3, .L118
 1969 0006 034A     		ldr	r2, .L118
 1970 0008 1268     		ldr	r2, [r2]
 1971 000a 0221     		mov	r1, #2
 1972 000c 0A43     		orr	r2, r1
 1973 000e 1A60     		str	r2, [r3]
2757:.\Generated_Source\PSoC4/CyLib.c **** }
 1974              		.loc 1 2757 0
 1975 0010 BD46     		mov	sp, r7
 1976              		@ sp needed
 1977 0012 80BD     		pop	{r7, pc}
 1978              	.L119:
 1979              		.align	2
 1980              	.L118:
 1981 0014 10E000E0 		.word	-536813552
 1982              		.cfi_endproc
 1983              	.LFE33:
 1984              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1985              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1986              		.align	2
 1987              		.global	CySysTickDisableInterrupt
 1988              		.code	16
 1989              		.thumb_func
 1990              		.type	CySysTickDisableInterrupt, %function
 1991              	CySysTickDisableInterrupt:
 1992              	.LFB34:
2758:.\Generated_Source\PSoC4/CyLib.c **** 
2759:.\Generated_Source\PSoC4/CyLib.c **** 
2760:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CyLib.c **** *
2764:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:.\Generated_Source\PSoC4/CyLib.c **** *
2767:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CyLib.c **** *  None
2769:.\Generated_Source\PSoC4/CyLib.c **** *
2770:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2771:.\Generated_Source\PSoC4/CyLib.c **** *  None
2772:.\Generated_Source\PSoC4/CyLib.c **** *
2773:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:.\Generated_Source\PSoC4/CyLib.c **** *
2776:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:.\Generated_Source\PSoC4/CyLib.c **** {
 1993              		.loc 1 2778 0
 1994              		.cfi_startproc
 1995 0000 80B5     		push	{r7, lr}
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 7, -8
 1998              		.cfi_offset 14, -4
 1999 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 85


 2000              		.cfi_def_cfa_register 7
2779:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2001              		.loc 1 2779 0
 2002 0004 034B     		ldr	r3, .L121
 2003 0006 034A     		ldr	r2, .L121
 2004 0008 1268     		ldr	r2, [r2]
 2005 000a 0221     		mov	r1, #2
 2006 000c 8A43     		bic	r2, r1
 2007 000e 1A60     		str	r2, [r3]
2780:.\Generated_Source\PSoC4/CyLib.c **** }
 2008              		.loc 1 2780 0
 2009 0010 BD46     		mov	sp, r7
 2010              		@ sp needed
 2011 0012 80BD     		pop	{r7, pc}
 2012              	.L122:
 2013              		.align	2
 2014              	.L121:
 2015 0014 10E000E0 		.word	-536813552
 2016              		.cfi_endproc
 2017              	.LFE34:
 2018              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2019              		.section	.text.CySysTickSetReload,"ax",%progbits
 2020              		.align	2
 2021              		.global	CySysTickSetReload
 2022              		.code	16
 2023              		.thumb_func
 2024              		.type	CySysTickSetReload, %function
 2025              	CySysTickSetReload:
 2026              	.LFB35:
2781:.\Generated_Source\PSoC4/CyLib.c **** 
2782:.\Generated_Source\PSoC4/CyLib.c **** 
2783:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:.\Generated_Source\PSoC4/CyLib.c **** *
2787:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2790:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:.\Generated_Source\PSoC4/CyLib.c **** *
2792:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2794:.\Generated_Source\PSoC4/CyLib.c **** *
2795:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2796:.\Generated_Source\PSoC4/CyLib.c **** *  None
2797:.\Generated_Source\PSoC4/CyLib.c **** *
2798:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:.\Generated_Source\PSoC4/CyLib.c **** {
 2027              		.loc 1 2800 0
 2028              		.cfi_startproc
 2029 0000 80B5     		push	{r7, lr}
 2030              		.cfi_def_cfa_offset 8
 2031              		.cfi_offset 7, -8
 2032              		.cfi_offset 14, -4
 2033 0002 82B0     		sub	sp, sp, #8
 2034              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 86


 2035 0004 00AF     		add	r7, sp, #0
 2036              		.cfi_def_cfa_register 7
 2037 0006 7860     		str	r0, [r7, #4]
2801:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2038              		.loc 1 2801 0
 2039 0008 034B     		ldr	r3, .L124
 2040 000a 7A68     		ldr	r2, [r7, #4]
 2041 000c 1202     		lsl	r2, r2, #8
 2042 000e 120A     		lsr	r2, r2, #8
 2043 0010 1A60     		str	r2, [r3]
2802:.\Generated_Source\PSoC4/CyLib.c **** }
 2044              		.loc 1 2802 0
 2045 0012 BD46     		mov	sp, r7
 2046 0014 02B0     		add	sp, sp, #8
 2047              		@ sp needed
 2048 0016 80BD     		pop	{r7, pc}
 2049              	.L125:
 2050              		.align	2
 2051              	.L124:
 2052 0018 14E000E0 		.word	-536813548
 2053              		.cfi_endproc
 2054              	.LFE35:
 2055              		.size	CySysTickSetReload, .-CySysTickSetReload
 2056              		.section	.text.CySysTickGetReload,"ax",%progbits
 2057              		.align	2
 2058              		.global	CySysTickGetReload
 2059              		.code	16
 2060              		.thumb_func
 2061              		.type	CySysTickGetReload, %function
 2062              	CySysTickGetReload:
 2063              	.LFB36:
2803:.\Generated_Source\PSoC4/CyLib.c **** 
2804:.\Generated_Source\PSoC4/CyLib.c **** 
2805:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:.\Generated_Source\PSoC4/CyLib.c **** *
2809:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:.\Generated_Source\PSoC4/CyLib.c **** *
2812:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:.\Generated_Source\PSoC4/CyLib.c **** *  None
2814:.\Generated_Source\PSoC4/CyLib.c **** *
2815:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2816:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:.\Generated_Source\PSoC4/CyLib.c **** *
2818:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:.\Generated_Source\PSoC4/CyLib.c **** {
 2064              		.loc 1 2820 0
 2065              		.cfi_startproc
 2066 0000 80B5     		push	{r7, lr}
 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 7, -8
 2069              		.cfi_offset 14, -4
 2070 0002 00AF     		add	r7, sp, #0
 2071              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 87


2821:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2072              		.loc 1 2821 0
 2073 0004 034B     		ldr	r3, .L128
 2074 0006 1B68     		ldr	r3, [r3]
 2075 0008 1B02     		lsl	r3, r3, #8
 2076 000a 1B0A     		lsr	r3, r3, #8
2822:.\Generated_Source\PSoC4/CyLib.c **** }
 2077              		.loc 1 2822 0
 2078 000c 181C     		mov	r0, r3
 2079 000e BD46     		mov	sp, r7
 2080              		@ sp needed
 2081 0010 80BD     		pop	{r7, pc}
 2082              	.L129:
 2083 0012 C046     		.align	2
 2084              	.L128:
 2085 0014 14E000E0 		.word	-536813548
 2086              		.cfi_endproc
 2087              	.LFE36:
 2088              		.size	CySysTickGetReload, .-CySysTickGetReload
 2089              		.section	.text.CySysTickGetValue,"ax",%progbits
 2090              		.align	2
 2091              		.global	CySysTickGetValue
 2092              		.code	16
 2093              		.thumb_func
 2094              		.type	CySysTickGetValue, %function
 2095              	CySysTickGetValue:
 2096              	.LFB37:
2823:.\Generated_Source\PSoC4/CyLib.c **** 
2824:.\Generated_Source\PSoC4/CyLib.c **** 
2825:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2828:.\Generated_Source\PSoC4/CyLib.c **** *
2829:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:.\Generated_Source\PSoC4/CyLib.c **** *
2832:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:.\Generated_Source\PSoC4/CyLib.c **** *  None
2834:.\Generated_Source\PSoC4/CyLib.c **** *
2835:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2836:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:.\Generated_Source\PSoC4/CyLib.c **** *
2838:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:.\Generated_Source\PSoC4/CyLib.c **** {
 2097              		.loc 1 2840 0
 2098              		.cfi_startproc
 2099 0000 80B5     		push	{r7, lr}
 2100              		.cfi_def_cfa_offset 8
 2101              		.cfi_offset 7, -8
 2102              		.cfi_offset 14, -4
 2103 0002 00AF     		add	r7, sp, #0
 2104              		.cfi_def_cfa_register 7
2841:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2105              		.loc 1 2841 0
 2106 0004 034B     		ldr	r3, .L132
 2107 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 88


 2108 0008 1B02     		lsl	r3, r3, #8
 2109 000a 1B0A     		lsr	r3, r3, #8
2842:.\Generated_Source\PSoC4/CyLib.c **** }
 2110              		.loc 1 2842 0
 2111 000c 181C     		mov	r0, r3
 2112 000e BD46     		mov	sp, r7
 2113              		@ sp needed
 2114 0010 80BD     		pop	{r7, pc}
 2115              	.L133:
 2116 0012 C046     		.align	2
 2117              	.L132:
 2118 0014 18E000E0 		.word	-536813544
 2119              		.cfi_endproc
 2120              	.LFE37:
 2121              		.size	CySysTickGetValue, .-CySysTickGetValue
 2122              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2123              		.align	2
 2124              		.global	CySysTickGetCountFlag
 2125              		.code	16
 2126              		.thumb_func
 2127              		.type	CySysTickGetCountFlag, %function
 2128              	CySysTickGetCountFlag:
 2129              	.LFB38:
2843:.\Generated_Source\PSoC4/CyLib.c **** 
2844:.\Generated_Source\PSoC4/CyLib.c **** 
2845:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:.\Generated_Source\PSoC4/CyLib.c ****     *
2853:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2855:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2860:.\Generated_Source\PSoC4/CyLib.c ****     *
2861:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2862:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:.\Generated_Source\PSoC4/CyLib.c ****     *
2869:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2871:.\Generated_Source\PSoC4/CyLib.c ****     *
2872:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2873:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:.\Generated_Source\PSoC4/CyLib.c ****     {
2875:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2876:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 89


2877:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2878:.\Generated_Source\PSoC4/CyLib.c ****         }
2879:.\Generated_Source\PSoC4/CyLib.c ****         else
2880:.\Generated_Source\PSoC4/CyLib.c ****         {
2881:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2882:.\Generated_Source\PSoC4/CyLib.c ****         }
2883:.\Generated_Source\PSoC4/CyLib.c ****     }
2884:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2885:.\Generated_Source\PSoC4/CyLib.c **** 
2886:.\Generated_Source\PSoC4/CyLib.c **** 
2887:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:.\Generated_Source\PSoC4/CyLib.c **** *
2891:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:.\Generated_Source\PSoC4/CyLib.c **** *
2895:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:.\Generated_Source\PSoC4/CyLib.c **** *  None
2897:.\Generated_Source\PSoC4/CyLib.c **** *
2898:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2899:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:.\Generated_Source\PSoC4/CyLib.c **** *
2901:.\Generated_Source\PSoC4/CyLib.c **** *
2902:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:.\Generated_Source\PSoC4/CyLib.c **** *
2905:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:.\Generated_Source\PSoC4/CyLib.c **** {
 2130              		.loc 1 2907 0
 2131              		.cfi_startproc
 2132 0000 80B5     		push	{r7, lr}
 2133              		.cfi_def_cfa_offset 8
 2134              		.cfi_offset 7, -8
 2135              		.cfi_offset 14, -4
 2136 0002 00AF     		add	r7, sp, #0
 2137              		.cfi_def_cfa_register 7
2908:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2138              		.loc 1 2908 0
 2139 0004 034B     		ldr	r3, .L136
 2140 0006 1B68     		ldr	r3, [r3]
 2141 0008 1B0C     		lsr	r3, r3, #16
 2142 000a 0122     		mov	r2, #1
 2143 000c 1340     		and	r3, r2
2909:.\Generated_Source\PSoC4/CyLib.c **** }
 2144              		.loc 1 2909 0
 2145 000e 181C     		mov	r0, r3
 2146 0010 BD46     		mov	sp, r7
 2147              		@ sp needed
 2148 0012 80BD     		pop	{r7, pc}
 2149              	.L137:
 2150              		.align	2
 2151              	.L136:
 2152 0014 10E000E0 		.word	-536813552
 2153              		.cfi_endproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 90


 2154              	.LFE38:
 2155              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2156              		.section	.text.CySysTickClear,"ax",%progbits
 2157              		.align	2
 2158              		.global	CySysTickClear
 2159              		.code	16
 2160              		.thumb_func
 2161              		.type	CySysTickClear, %function
 2162              	CySysTickClear:
 2163              	.LFB39:
2910:.\Generated_Source\PSoC4/CyLib.c **** 
2911:.\Generated_Source\PSoC4/CyLib.c **** 
2912:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:.\Generated_Source\PSoC4/CyLib.c **** *
2916:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:.\Generated_Source\PSoC4/CyLib.c **** *
2919:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:.\Generated_Source\PSoC4/CyLib.c **** *  None
2921:.\Generated_Source\PSoC4/CyLib.c **** *
2922:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2923:.\Generated_Source\PSoC4/CyLib.c **** *  None
2924:.\Generated_Source\PSoC4/CyLib.c **** *
2925:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:.\Generated_Source\PSoC4/CyLib.c **** {
 2164              		.loc 1 2927 0
 2165              		.cfi_startproc
 2166 0000 80B5     		push	{r7, lr}
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 7, -8
 2169              		.cfi_offset 14, -4
 2170 0002 00AF     		add	r7, sp, #0
 2171              		.cfi_def_cfa_register 7
2928:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2172              		.loc 1 2928 0
 2173 0004 024B     		ldr	r3, .L139
 2174 0006 0022     		mov	r2, #0
 2175 0008 1A60     		str	r2, [r3]
2929:.\Generated_Source\PSoC4/CyLib.c **** }
 2176              		.loc 1 2929 0
 2177 000a BD46     		mov	sp, r7
 2178              		@ sp needed
 2179 000c 80BD     		pop	{r7, pc}
 2180              	.L140:
 2181 000e C046     		.align	2
 2182              	.L139:
 2183 0010 18E000E0 		.word	-536813544
 2184              		.cfi_endproc
 2185              	.LFE39:
 2186              		.size	CySysTickClear, .-CySysTickClear
 2187              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2188              		.align	2
 2189              		.global	CySysTickSetCallback
 2190              		.code	16
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 91


 2191              		.thumb_func
 2192              		.type	CySysTickSetCallback, %function
 2193              	CySysTickSetCallback:
 2194              	.LFB40:
2930:.\Generated_Source\PSoC4/CyLib.c **** 
2931:.\Generated_Source\PSoC4/CyLib.c **** 
2932:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:.\Generated_Source\PSoC4/CyLib.c **** *
2936:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:.\Generated_Source\PSoC4/CyLib.c **** *
2941:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2945:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:.\Generated_Source\PSoC4/CyLib.c **** *
2947:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2950:.\Generated_Source\PSoC4/CyLib.c **** *
2951:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:.\Generated_Source\PSoC4/CyLib.c **** *
2955:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2956:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:.\Generated_Source\PSoC4/CyLib.c **** *
2959:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:.\Generated_Source\PSoC4/CyLib.c **** *
2962:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:.\Generated_Source\PSoC4/CyLib.c **** {
 2195              		.loc 1 2964 0
 2196              		.cfi_startproc
 2197 0000 80B5     		push	{r7, lr}
 2198              		.cfi_def_cfa_offset 8
 2199              		.cfi_offset 7, -8
 2200              		.cfi_offset 14, -4
 2201 0002 84B0     		sub	sp, sp, #16
 2202              		.cfi_def_cfa_offset 24
 2203 0004 00AF     		add	r7, sp, #0
 2204              		.cfi_def_cfa_register 7
 2205 0006 7860     		str	r0, [r7, #4]
 2206 0008 3960     		str	r1, [r7]
2965:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:.\Generated_Source\PSoC4/CyLib.c **** 
2967:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2207              		.loc 1 2967 0
 2208 000a 074B     		ldr	r3, .L143
 2209 000c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 92


 2210 000e 9200     		lsl	r2, r2, #2
 2211 0010 D358     		ldr	r3, [r2, r3]
 2212 0012 FB60     		str	r3, [r7, #12]
2968:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2213              		.loc 1 2968 0
 2214 0014 044B     		ldr	r3, .L143
 2215 0016 7A68     		ldr	r2, [r7, #4]
 2216 0018 9200     		lsl	r2, r2, #2
 2217 001a 3968     		ldr	r1, [r7]
 2218 001c D150     		str	r1, [r2, r3]
2969:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2219              		.loc 1 2969 0
 2220 001e FB68     		ldr	r3, [r7, #12]
2970:.\Generated_Source\PSoC4/CyLib.c **** }
 2221              		.loc 1 2970 0
 2222 0020 181C     		mov	r0, r3
 2223 0022 BD46     		mov	sp, r7
 2224 0024 04B0     		add	sp, sp, #16
 2225              		@ sp needed
 2226 0026 80BD     		pop	{r7, pc}
 2227              	.L144:
 2228              		.align	2
 2229              	.L143:
 2230 0028 00000000 		.word	CySysTickCallbacks
 2231              		.cfi_endproc
 2232              	.LFE40:
 2233              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2234              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2235              		.align	2
 2236              		.global	CySysTickGetCallback
 2237              		.code	16
 2238              		.thumb_func
 2239              		.type	CySysTickGetCallback, %function
 2240              	CySysTickGetCallback:
 2241              	.LFB41:
2971:.\Generated_Source\PSoC4/CyLib.c **** 
2972:.\Generated_Source\PSoC4/CyLib.c **** 
2973:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:.\Generated_Source\PSoC4/CyLib.c **** *
2977:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2978:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:.\Generated_Source\PSoC4/CyLib.c **** *
2980:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
2982:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:.\Generated_Source\PSoC4/CyLib.c **** *
2984:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2985:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:.\Generated_Source\PSoC4/CyLib.c **** *
2988:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:.\Generated_Source\PSoC4/CyLib.c **** {
 2242              		.loc 1 2990 0
 2243              		.cfi_startproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 93


 2244 0000 80B5     		push	{r7, lr}
 2245              		.cfi_def_cfa_offset 8
 2246              		.cfi_offset 7, -8
 2247              		.cfi_offset 14, -4
 2248 0002 82B0     		sub	sp, sp, #8
 2249              		.cfi_def_cfa_offset 16
 2250 0004 00AF     		add	r7, sp, #0
 2251              		.cfi_def_cfa_register 7
 2252 0006 7860     		str	r0, [r7, #4]
2991:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2253              		.loc 1 2991 0
 2254 0008 034B     		ldr	r3, .L147
 2255 000a 7A68     		ldr	r2, [r7, #4]
 2256 000c 9200     		lsl	r2, r2, #2
 2257 000e D358     		ldr	r3, [r2, r3]
2992:.\Generated_Source\PSoC4/CyLib.c **** }
 2258              		.loc 1 2992 0
 2259 0010 181C     		mov	r0, r3
 2260 0012 BD46     		mov	sp, r7
 2261 0014 02B0     		add	sp, sp, #8
 2262              		@ sp needed
 2263 0016 80BD     		pop	{r7, pc}
 2264              	.L148:
 2265              		.align	2
 2266              	.L147:
 2267 0018 00000000 		.word	CySysTickCallbacks
 2268              		.cfi_endproc
 2269              	.LFE41:
 2270              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2271              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2272              		.align	2
 2273              		.code	16
 2274              		.thumb_func
 2275              		.type	CySysTickServiceCallbacks, %function
 2276              	CySysTickServiceCallbacks:
 2277              	.LFB42:
2993:.\Generated_Source\PSoC4/CyLib.c **** 
2994:.\Generated_Source\PSoC4/CyLib.c **** 
2995:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:.\Generated_Source\PSoC4/CyLib.c **** *
2999:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3001:.\Generated_Source\PSoC4/CyLib.c **** *
3002:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:.\Generated_Source\PSoC4/CyLib.c **** *  None
3004:.\Generated_Source\PSoC4/CyLib.c **** *
3005:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3006:.\Generated_Source\PSoC4/CyLib.c **** *  None
3007:.\Generated_Source\PSoC4/CyLib.c **** *
3008:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:.\Generated_Source\PSoC4/CyLib.c **** {
 2278              		.loc 1 3010 0
 2279              		.cfi_startproc
 2280 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 94


 2281              		.cfi_def_cfa_offset 8
 2282              		.cfi_offset 7, -8
 2283              		.cfi_offset 14, -4
 2284 0002 82B0     		sub	sp, sp, #8
 2285              		.cfi_def_cfa_offset 16
 2286 0004 00AF     		add	r7, sp, #0
 2287              		.cfi_def_cfa_register 7
3011:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:.\Generated_Source\PSoC4/CyLib.c **** 
3013:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2288              		.loc 1 3014 0
 2289 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2290 000a 031E     		sub	r3, r0, #0
 2291 000c 012B     		cmp	r3, #1
 2292 000e 13D1     		bne	.L149
3015:.\Generated_Source\PSoC4/CyLib.c ****     {
3016:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2293              		.loc 1 3016 0
 2294 0010 0023     		mov	r3, #0
 2295 0012 7B60     		str	r3, [r7, #4]
 2296 0014 0DE0     		b	.L151
 2297              	.L153:
3017:.\Generated_Source\PSoC4/CyLib.c ****         {
3018:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2298              		.loc 1 3018 0
 2299 0016 0A4B     		ldr	r3, .L154
 2300 0018 7A68     		ldr	r2, [r7, #4]
 2301 001a 9200     		lsl	r2, r2, #2
 2302 001c D358     		ldr	r3, [r2, r3]
 2303 001e 002B     		cmp	r3, #0
 2304 0020 04D0     		beq	.L152
3019:.\Generated_Source\PSoC4/CyLib.c ****             {
3020:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2305              		.loc 1 3020 0
 2306 0022 074B     		ldr	r3, .L154
 2307 0024 7A68     		ldr	r2, [r7, #4]
 2308 0026 9200     		lsl	r2, r2, #2
 2309 0028 D358     		ldr	r3, [r2, r3]
 2310 002a 9847     		blx	r3
 2311              	.L152:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 2312              		.loc 1 3016 0 discriminator 2
 2313 002c 7B68     		ldr	r3, [r7, #4]
 2314 002e 0133     		add	r3, r3, #1
 2315 0030 7B60     		str	r3, [r7, #4]
 2316              	.L151:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 2317              		.loc 1 3016 0 is_stmt 0 discriminator 1
 2318 0032 7B68     		ldr	r3, [r7, #4]
 2319 0034 042B     		cmp	r3, #4
 2320 0036 EED9     		bls	.L153
 2321              	.L149:
3021:.\Generated_Source\PSoC4/CyLib.c ****             }
3022:.\Generated_Source\PSoC4/CyLib.c ****         }
3023:.\Generated_Source\PSoC4/CyLib.c ****     }
3024:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 95


 2322              		.loc 1 3024 0 is_stmt 1
 2323 0038 BD46     		mov	sp, r7
 2324 003a 02B0     		add	sp, sp, #8
 2325              		@ sp needed
 2326 003c 80BD     		pop	{r7, pc}
 2327              	.L155:
 2328 003e C046     		.align	2
 2329              	.L154:
 2330 0040 00000000 		.word	CySysTickCallbacks
 2331              		.cfi_endproc
 2332              	.LFE42:
 2333              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2334              		.section	.text.CyGetUniqueId,"ax",%progbits
 2335              		.align	2
 2336              		.global	CyGetUniqueId
 2337              		.code	16
 2338              		.thumb_func
 2339              		.type	CyGetUniqueId, %function
 2340              	CyGetUniqueId:
 2341              	.LFB43:
3025:.\Generated_Source\PSoC4/CyLib.c **** 
3026:.\Generated_Source\PSoC4/CyLib.c **** 
3027:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3029:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:.\Generated_Source\PSoC4/CyLib.c **** *
3031:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:.\Generated_Source\PSoC4/CyLib.c **** *
3037:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3038:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:.\Generated_Source\PSoC4/CyLib.c **** *
3042:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3043:.\Generated_Source\PSoC4/CyLib.c **** *  None
3044:.\Generated_Source\PSoC4/CyLib.c **** *
3045:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3046:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3047:.\Generated_Source\PSoC4/CyLib.c **** {
 2342              		.loc 1 3047 0
 2343              		.cfi_startproc
 2344 0000 80B5     		push	{r7, lr}
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 7, -8
 2347              		.cfi_offset 14, -4
 2348 0002 82B0     		sub	sp, sp, #8
 2349              		.cfi_def_cfa_offset 16
 2350 0004 00AF     		add	r7, sp, #0
 2351              		.cfi_def_cfa_register 7
 2352 0006 7860     		str	r0, [r7, #4]
3048:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2353              		.loc 1 3049 0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 96


 2354 0008 254B     		ldr	r3, .L157
 2355 000a 1B78     		ldrb	r3, [r3]
 2356 000c DBB2     		uxtb	r3, r3
 2357 000e 1A1C     		mov	r2, r3
 2358 0010 7B68     		ldr	r3, [r7, #4]
 2359 0012 1A60     		str	r2, [r3]
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2360              		.loc 1 3050 0
 2361 0014 234B     		ldr	r3, .L157+4
 2362 0016 1B78     		ldrb	r3, [r3]
 2363 0018 DBB2     		uxtb	r3, r3
 2364 001a 1A02     		lsl	r2, r3, #8
 2365 001c 7B68     		ldr	r3, [r7, #4]
 2366 001e 1B68     		ldr	r3, [r3]
 2367 0020 1A43     		orr	r2, r3
 2368 0022 7B68     		ldr	r3, [r7, #4]
 2369 0024 1A60     		str	r2, [r3]
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2370              		.loc 1 3051 0
 2371 0026 204B     		ldr	r3, .L157+8
 2372 0028 1B78     		ldrb	r3, [r3]
 2373 002a DBB2     		uxtb	r3, r3
 2374 002c 1A04     		lsl	r2, r3, #16
 2375 002e 7B68     		ldr	r3, [r7, #4]
 2376 0030 1B68     		ldr	r3, [r3]
 2377 0032 1A43     		orr	r2, r3
 2378 0034 7B68     		ldr	r3, [r7, #4]
 2379 0036 1A60     		str	r2, [r3]
3052:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2380              		.loc 1 3052 0
 2381 0038 1C4B     		ldr	r3, .L157+12
 2382 003a 1B78     		ldrb	r3, [r3]
 2383 003c DBB2     		uxtb	r3, r3
 2384 003e 1A06     		lsl	r2, r3, #24
 2385 0040 7B68     		ldr	r3, [r7, #4]
 2386 0042 1B68     		ldr	r3, [r3]
 2387 0044 1A43     		orr	r2, r3
 2388 0046 7B68     		ldr	r3, [r7, #4]
 2389 0048 1A60     		str	r2, [r3]
3053:.\Generated_Source\PSoC4/CyLib.c **** 
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2390              		.loc 1 3054 0
 2391 004a 7B68     		ldr	r3, [r7, #4]
 2392 004c 0433     		add	r3, r3, #4
 2393 004e 184A     		ldr	r2, .L157+16
 2394 0050 1278     		ldrb	r2, [r2]
 2395 0052 D2B2     		uxtb	r2, r2
 2396 0054 1A60     		str	r2, [r3]
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2397              		.loc 1 3055 0
 2398 0056 174B     		ldr	r3, .L157+20
 2399 0058 1B78     		ldrb	r3, [r3]
 2400 005a DBB2     		uxtb	r3, r3
 2401 005c 1902     		lsl	r1, r3, #8
 2402 005e 7B68     		ldr	r3, [r7, #4]
 2403 0060 0433     		add	r3, r3, #4
 2404 0062 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 97


 2405 0064 0432     		add	r2, r2, #4
 2406 0066 1268     		ldr	r2, [r2]
 2407 0068 0A43     		orr	r2, r1
 2408 006a 1A60     		str	r2, [r3]
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2409              		.loc 1 3056 0
 2410 006c 124B     		ldr	r3, .L157+24
 2411 006e 1B78     		ldrb	r3, [r3]
 2412 0070 DBB2     		uxtb	r3, r3
 2413 0072 1904     		lsl	r1, r3, #16
 2414 0074 7B68     		ldr	r3, [r7, #4]
 2415 0076 0433     		add	r3, r3, #4
 2416 0078 7A68     		ldr	r2, [r7, #4]
 2417 007a 0432     		add	r2, r2, #4
 2418 007c 1268     		ldr	r2, [r2]
 2419 007e 0A43     		orr	r2, r1
 2420 0080 1A60     		str	r2, [r3]
3057:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2421              		.loc 1 3057 0
 2422 0082 0E4B     		ldr	r3, .L157+28
 2423 0084 1B78     		ldrb	r3, [r3]
 2424 0086 DBB2     		uxtb	r3, r3
 2425 0088 1906     		lsl	r1, r3, #24
 2426 008a 7B68     		ldr	r3, [r7, #4]
 2427 008c 0433     		add	r3, r3, #4
 2428 008e 7A68     		ldr	r2, [r7, #4]
 2429 0090 0432     		add	r2, r2, #4
 2430 0092 1268     		ldr	r2, [r2]
 2431 0094 0A43     		orr	r2, r1
 2432 0096 1A60     		str	r2, [r3]
3058:.\Generated_Source\PSoC4/CyLib.c **** #else
3059:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:.\Generated_Source\PSoC4/CyLib.c **** 
3064:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3067:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:.\Generated_Source\PSoC4/CyLib.c **** }
 2433              		.loc 1 3069 0
 2434 0098 BD46     		mov	sp, r7
 2435 009a 02B0     		add	sp, sp, #8
 2436              		@ sp needed
 2437 009c 80BD     		pop	{r7, pc}
 2438              	.L158:
 2439 009e C046     		.align	2
 2440              	.L157:
 2441 00a0 78F1FF0F 		.word	268431736
 2442 00a4 79F1FF0F 		.word	268431737
 2443 00a8 7AF1FF0F 		.word	268431738
 2444 00ac 7BF1FF0F 		.word	268431739
 2445 00b0 7CF1FF0F 		.word	268431740
 2446 00b4 7DF1FF0F 		.word	268431741
 2447 00b8 7EF1FF0F 		.word	268431742
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 98


 2448 00bc 7FF1FF0F 		.word	268431743
 2449              		.cfi_endproc
 2450              	.LFE43:
 2451              		.size	CyGetUniqueId, .-CyGetUniqueId
 2452              		.text
 2453              	.Letext0:
 2454              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2455              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2456              		.section	.debug_info,"",%progbits
 2457              	.Ldebug_info0:
 2458 0000 A8080000 		.4byte	0x8a8
 2459 0004 0400     		.2byte	0x4
 2460 0006 00000000 		.4byte	.Ldebug_abbrev0
 2461 000a 04       		.byte	0x4
 2462 000b 01       		.uleb128 0x1
 2463 000c 7A050000 		.4byte	.LASF98
 2464 0010 01       		.byte	0x1
 2465 0011 D2020000 		.4byte	.LASF99
 2466 0015 E8040000 		.4byte	.LASF100
 2467 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2468 001d 00000000 		.4byte	0
 2469 0021 00000000 		.4byte	.Ldebug_line0
 2470 0025 02       		.uleb128 0x2
 2471 0026 01       		.byte	0x1
 2472 0027 06       		.byte	0x6
 2473 0028 05010000 		.4byte	.LASF0
 2474 002c 02       		.uleb128 0x2
 2475 002d 01       		.byte	0x1
 2476 002e 08       		.byte	0x8
 2477 002f 21040000 		.4byte	.LASF1
 2478 0033 02       		.uleb128 0x2
 2479 0034 02       		.byte	0x2
 2480 0035 05       		.byte	0x5
 2481 0036 2F040000 		.4byte	.LASF2
 2482 003a 02       		.uleb128 0x2
 2483 003b 02       		.byte	0x2
 2484 003c 07       		.byte	0x7
 2485 003d B0020000 		.4byte	.LASF3
 2486 0041 02       		.uleb128 0x2
 2487 0042 04       		.byte	0x4
 2488 0043 05       		.byte	0x5
 2489 0044 44010000 		.4byte	.LASF4
 2490 0048 02       		.uleb128 0x2
 2491 0049 04       		.byte	0x4
 2492 004a 07       		.byte	0x7
 2493 004b 4F020000 		.4byte	.LASF5
 2494 004f 02       		.uleb128 0x2
 2495 0050 08       		.byte	0x8
 2496 0051 05       		.byte	0x5
 2497 0052 F7000000 		.4byte	.LASF6
 2498 0056 02       		.uleb128 0x2
 2499 0057 08       		.byte	0x8
 2500 0058 07       		.byte	0x7
 2501 0059 8B000000 		.4byte	.LASF7
 2502 005d 03       		.uleb128 0x3
 2503 005e 04       		.byte	0x4
 2504 005f 05       		.byte	0x5
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 99


 2505 0060 696E7400 		.ascii	"int\000"
 2506 0064 02       		.uleb128 0x2
 2507 0065 04       		.byte	0x4
 2508 0066 07       		.byte	0x7
 2509 0067 33020000 		.4byte	.LASF8
 2510 006b 04       		.uleb128 0x4
 2511 006c 6F010000 		.4byte	.LASF9
 2512 0070 02       		.byte	0x2
 2513 0071 3801     		.2byte	0x138
 2514 0073 2C000000 		.4byte	0x2c
 2515 0077 04       		.uleb128 0x4
 2516 0078 17000000 		.4byte	.LASF10
 2517 007c 02       		.byte	0x2
 2518 007d 3901     		.2byte	0x139
 2519 007f 3A000000 		.4byte	0x3a
 2520 0083 04       		.uleb128 0x4
 2521 0084 B2010000 		.4byte	.LASF11
 2522 0088 02       		.byte	0x2
 2523 0089 3A01     		.2byte	0x13a
 2524 008b 48000000 		.4byte	0x48
 2525 008f 02       		.uleb128 0x2
 2526 0090 04       		.byte	0x4
 2527 0091 04       		.byte	0x4
 2528 0092 C8030000 		.4byte	.LASF12
 2529 0096 02       		.uleb128 0x2
 2530 0097 08       		.byte	0x8
 2531 0098 04       		.byte	0x4
 2532 0099 8E010000 		.4byte	.LASF13
 2533 009d 02       		.uleb128 0x2
 2534 009e 01       		.byte	0x1
 2535 009f 08       		.byte	0x8
 2536 00a0 68040000 		.4byte	.LASF14
 2537 00a4 04       		.uleb128 0x4
 2538 00a5 0B040000 		.4byte	.LASF15
 2539 00a9 02       		.byte	0x2
 2540 00aa E201     		.2byte	0x1e2
 2541 00ac B0000000 		.4byte	0xb0
 2542 00b0 05       		.uleb128 0x5
 2543 00b1 6B000000 		.4byte	0x6b
 2544 00b5 04       		.uleb128 0x4
 2545 00b6 23030000 		.4byte	.LASF16
 2546 00ba 02       		.byte	0x2
 2547 00bb E401     		.2byte	0x1e4
 2548 00bd C1000000 		.4byte	0xc1
 2549 00c1 05       		.uleb128 0x5
 2550 00c2 83000000 		.4byte	0x83
 2551 00c6 04       		.uleb128 0x4
 2552 00c7 6D040000 		.4byte	.LASF17
 2553 00cb 02       		.byte	0x2
 2554 00cc F401     		.2byte	0x1f4
 2555 00ce D2000000 		.4byte	0xd2
 2556 00d2 06       		.uleb128 0x6
 2557 00d3 04       		.byte	0x4
 2558 00d4 D8000000 		.4byte	0xd8
 2559 00d8 07       		.uleb128 0x7
 2560 00d9 02       		.uleb128 0x2
 2561 00da 04       		.byte	0x4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 100


 2562 00db 07       		.byte	0x7
 2563 00dc 45030000 		.4byte	.LASF18
 2564 00e0 08       		.uleb128 0x8
 2565 00e1 DD030000 		.4byte	.LASF19
 2566 00e5 03       		.byte	0x3
 2567 00e6 6A       		.byte	0x6a
 2568 00e7 D2000000 		.4byte	0xd2
 2569 00eb 09       		.uleb128 0x9
 2570 00ec 08060000 		.4byte	.LASF20
 2571 00f0 01       		.byte	0x1
 2572 00f1 6F       		.byte	0x6f
 2573 00f2 00000000 		.4byte	.LFB0
 2574 00f6 1C000000 		.4byte	.LFE0-.LFB0
 2575 00fa 01       		.uleb128 0x1
 2576 00fb 9C       		.byte	0x9c
 2577 00fc 09       		.uleb128 0x9
 2578 00fd 7C020000 		.4byte	.LASF21
 2579 0101 01       		.byte	0x1
 2580 0102 95       		.byte	0x95
 2581 0103 00000000 		.4byte	.LFB1
 2582 0107 18000000 		.4byte	.LFE1-.LFB1
 2583 010b 01       		.uleb128 0x1
 2584 010c 9C       		.byte	0x9c
 2585 010d 0A       		.uleb128 0xa
 2586 010e 27000000 		.4byte	.LASF25
 2587 0112 01       		.byte	0x1
 2588 0113 C401     		.2byte	0x1c4
 2589 0115 00000000 		.4byte	.LFB2
 2590 0119 48000000 		.4byte	.LFE2-.LFB2
 2591 011d 01       		.uleb128 0x1
 2592 011e 9C       		.byte	0x9c
 2593 011f 51010000 		.4byte	0x151
 2594 0123 0B       		.uleb128 0xb
 2595 0124 57040000 		.4byte	.LASF27
 2596 0128 01       		.byte	0x1
 2597 0129 C401     		.2byte	0x1c4
 2598 012b 83000000 		.4byte	0x83
 2599 012f 02       		.uleb128 0x2
 2600 0130 91       		.byte	0x91
 2601 0131 64       		.sleb128 -28
 2602 0132 0C       		.uleb128 0xc
 2603 0133 22010000 		.4byte	.LASF22
 2604 0137 01       		.byte	0x1
 2605 0138 C601     		.2byte	0x1c6
 2606 013a 6B000000 		.4byte	0x6b
 2607 013e 02       		.uleb128 0x2
 2608 013f 91       		.byte	0x91
 2609 0140 6F       		.sleb128 -17
 2610 0141 0C       		.uleb128 0xc
 2611 0142 37060000 		.4byte	.LASF23
 2612 0146 01       		.byte	0x1
 2613 0147 C701     		.2byte	0x1c7
 2614 0149 83000000 		.4byte	0x83
 2615 014d 02       		.uleb128 0x2
 2616 014e 91       		.byte	0x91
 2617 014f 68       		.sleb128 -24
 2618 0150 00       		.byte	0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 101


 2619 0151 0D       		.uleb128 0xd
 2620 0152 C5010000 		.4byte	.LASF40
 2621 0156 01       		.byte	0x1
 2622 0157 EE01     		.2byte	0x1ee
 2623 0159 83000000 		.4byte	0x83
 2624 015d 00000000 		.4byte	.LFB3
 2625 0161 34000000 		.4byte	.LFE3-.LFB3
 2626 0165 01       		.uleb128 0x1
 2627 0166 9C       		.byte	0x9c
 2628 0167 8A010000 		.4byte	0x18a
 2629 016b 0C       		.uleb128 0xc
 2630 016c 22010000 		.4byte	.LASF22
 2631 0170 01       		.byte	0x1
 2632 0171 F001     		.2byte	0x1f0
 2633 0173 6B000000 		.4byte	0x6b
 2634 0177 02       		.uleb128 0x2
 2635 0178 91       		.byte	0x91
 2636 0179 6F       		.sleb128 -17
 2637 017a 0C       		.uleb128 0xc
 2638 017b 70030000 		.4byte	.LASF24
 2639 017f 01       		.byte	0x1
 2640 0180 F101     		.2byte	0x1f1
 2641 0182 83000000 		.4byte	0x83
 2642 0186 02       		.uleb128 0x2
 2643 0187 91       		.byte	0x91
 2644 0188 68       		.sleb128 -24
 2645 0189 00       		.byte	0
 2646 018a 0A       		.uleb128 0xa
 2647 018b 8A040000 		.4byte	.LASF26
 2648 018f 01       		.byte	0x1
 2649 0190 2A02     		.2byte	0x22a
 2650 0192 00000000 		.4byte	.LFB4
 2651 0196 44000000 		.4byte	.LFE4-.LFB4
 2652 019a 01       		.uleb128 0x1
 2653 019b 9C       		.byte	0x9c
 2654 019c BF010000 		.4byte	0x1bf
 2655 01a0 0B       		.uleb128 0xb
 2656 01a1 72050000 		.4byte	.LASF28
 2657 01a5 01       		.byte	0x1
 2658 01a6 2A02     		.2byte	0x22a
 2659 01a8 83000000 		.4byte	0x83
 2660 01ac 02       		.uleb128 0x2
 2661 01ad 91       		.byte	0x91
 2662 01ae 64       		.sleb128 -28
 2663 01af 0C       		.uleb128 0xc
 2664 01b0 22010000 		.4byte	.LASF22
 2665 01b4 01       		.byte	0x1
 2666 01b5 2C02     		.2byte	0x22c
 2667 01b7 6B000000 		.4byte	0x6b
 2668 01bb 02       		.uleb128 0x2
 2669 01bc 91       		.byte	0x91
 2670 01bd 6F       		.sleb128 -17
 2671 01be 00       		.byte	0
 2672 01bf 0A       		.uleb128 0xa
 2673 01c0 FC020000 		.4byte	.LASF29
 2674 01c4 01       		.byte	0x1
 2675 01c5 6E02     		.2byte	0x26e
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 102


 2676 01c7 00000000 		.4byte	.LFB5
 2677 01cb E0010000 		.4byte	.LFE5-.LFB5
 2678 01cf 01       		.uleb128 0x1
 2679 01d0 9C       		.byte	0x9c
 2680 01d1 3F020000 		.4byte	0x23f
 2681 01d5 0B       		.uleb128 0xb
 2682 01d6 11010000 		.4byte	.LASF30
 2683 01da 01       		.byte	0x1
 2684 01db 6E02     		.2byte	0x26e
 2685 01dd 83000000 		.4byte	0x83
 2686 01e1 02       		.uleb128 0x2
 2687 01e2 91       		.byte	0x91
 2688 01e3 64       		.sleb128 -28
 2689 01e4 0C       		.uleb128 0xc
 2690 01e5 0F000000 		.4byte	.LASF31
 2691 01e9 01       		.byte	0x1
 2692 01ea 7402     		.2byte	0x274
 2693 01ec 6B000000 		.4byte	0x6b
 2694 01f0 02       		.uleb128 0x2
 2695 01f1 91       		.byte	0x91
 2696 01f2 6F       		.sleb128 -17
 2697 01f3 0C       		.uleb128 0xc
 2698 01f4 68030000 		.4byte	.LASF32
 2699 01f8 01       		.byte	0x1
 2700 01f9 7502     		.2byte	0x275
 2701 01fb 6B000000 		.4byte	0x6b
 2702 01ff 02       		.uleb128 0x2
 2703 0200 91       		.byte	0x91
 2704 0201 6E       		.sleb128 -18
 2705 0202 0C       		.uleb128 0xc
 2706 0203 19060000 		.4byte	.LASF33
 2707 0207 01       		.byte	0x1
 2708 0208 7602     		.2byte	0x276
 2709 020a 6B000000 		.4byte	0x6b
 2710 020e 02       		.uleb128 0x2
 2711 020f 91       		.byte	0x91
 2712 0210 6B       		.sleb128 -21
 2713 0211 0C       		.uleb128 0xc
 2714 0212 76000000 		.4byte	.LASF34
 2715 0216 01       		.byte	0x1
 2716 0217 7702     		.2byte	0x277
 2717 0219 6B000000 		.4byte	0x6b
 2718 021d 02       		.uleb128 0x2
 2719 021e 91       		.byte	0x91
 2720 021f 6D       		.sleb128 -19
 2721 0220 0C       		.uleb128 0xc
 2722 0221 C9040000 		.4byte	.LASF35
 2723 0225 01       		.byte	0x1
 2724 0226 7802     		.2byte	0x278
 2725 0228 6B000000 		.4byte	0x6b
 2726 022c 02       		.uleb128 0x2
 2727 022d 91       		.byte	0x91
 2728 022e 6A       		.sleb128 -22
 2729 022f 0C       		.uleb128 0xc
 2730 0230 22010000 		.4byte	.LASF22
 2731 0234 01       		.byte	0x1
 2732 0235 8302     		.2byte	0x283
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 103


 2733 0237 6B000000 		.4byte	0x6b
 2734 023b 02       		.uleb128 0x2
 2735 023c 91       		.byte	0x91
 2736 023d 6C       		.sleb128 -20
 2737 023e 00       		.byte	0
 2738 023f 0A       		.uleb128 0xa
 2739 0240 CE030000 		.4byte	.LASF36
 2740 0244 01       		.byte	0x1
 2741 0245 EA07     		.2byte	0x7ea
 2742 0247 00000000 		.4byte	.LFB6
 2743 024b 60000000 		.4byte	.LFE6-.LFB6
 2744 024f 01       		.uleb128 0x1
 2745 0250 9C       		.byte	0x9c
 2746 0251 65020000 		.4byte	0x265
 2747 0255 0B       		.uleb128 0xb
 2748 0256 10040000 		.4byte	.LASF37
 2749 025a 01       		.byte	0x1
 2750 025b EA07     		.2byte	0x7ea
 2751 025d 83000000 		.4byte	0x83
 2752 0261 02       		.uleb128 0x2
 2753 0262 91       		.byte	0x91
 2754 0263 74       		.sleb128 -12
 2755 0264 00       		.byte	0
 2756 0265 0E       		.uleb128 0xe
 2757 0266 45050000 		.4byte	.LASF38
 2758 026a 01       		.byte	0x1
 2759 026b 0F08     		.2byte	0x80f
 2760 026d 00000000 		.4byte	.LFB7
 2761 0271 28000000 		.4byte	.LFE7-.LFB7
 2762 0275 01       		.uleb128 0x1
 2763 0276 9C       		.byte	0x9c
 2764 0277 0F       		.uleb128 0xf
 2765 0278 61020000 		.4byte	.LASF80
 2766 027c 01       		.byte	0x1
 2767 027d 2508     		.2byte	0x825
 2768 027f 83000000 		.4byte	0x83
 2769 0283 00000000 		.4byte	.LFB8
 2770 0287 18000000 		.4byte	.LFE8-.LFB8
 2771 028b 01       		.uleb128 0x1
 2772 028c 9C       		.byte	0x9c
 2773 028d 0E       		.uleb128 0xe
 2774 028e 9B010000 		.4byte	.LASF39
 2775 0292 01       		.byte	0x1
 2776 0293 3908     		.2byte	0x839
 2777 0295 00000000 		.4byte	.LFB9
 2778 0299 14000000 		.4byte	.LFE9-.LFB9
 2779 029d 01       		.uleb128 0x1
 2780 029e 9C       		.byte	0x9c
 2781 029f 10       		.uleb128 0x10
 2782 02a0 9C020000 		.4byte	.LASF41
 2783 02a4 01       		.byte	0x1
 2784 02a5 5508     		.2byte	0x855
 2785 02a7 83000000 		.4byte	0x83
 2786 02ab 00000000 		.4byte	.LFB10
 2787 02af 30000000 		.4byte	.LFE10-.LFB10
 2788 02b3 01       		.uleb128 0x1
 2789 02b4 9C       		.byte	0x9c
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 104


 2790 02b5 D8020000 		.4byte	0x2d8
 2791 02b9 0B       		.uleb128 0xb
 2792 02ba 61040000 		.4byte	.LASF42
 2793 02be 01       		.byte	0x1
 2794 02bf 5508     		.2byte	0x855
 2795 02c1 83000000 		.4byte	0x83
 2796 02c5 02       		.uleb128 0x2
 2797 02c6 91       		.byte	0x91
 2798 02c7 6C       		.sleb128 -20
 2799 02c8 0C       		.uleb128 0xc
 2800 02c9 38030000 		.4byte	.LASF43
 2801 02cd 01       		.byte	0x1
 2802 02ce 5708     		.2byte	0x857
 2803 02d0 83000000 		.4byte	0x83
 2804 02d4 02       		.uleb128 0x2
 2805 02d5 91       		.byte	0x91
 2806 02d6 74       		.sleb128 -12
 2807 02d7 00       		.byte	0
 2808 02d8 10       		.uleb128 0x10
 2809 02d9 68000000 		.4byte	.LASF44
 2810 02dd 01       		.byte	0x1
 2811 02de 7008     		.2byte	0x870
 2812 02e0 83000000 		.4byte	0x83
 2813 02e4 00000000 		.4byte	.LFB11
 2814 02e8 24000000 		.4byte	.LFE11-.LFB11
 2815 02ec 01       		.uleb128 0x1
 2816 02ed 9C       		.byte	0x9c
 2817 02ee 02030000 		.4byte	0x302
 2818 02f2 0C       		.uleb128 0xc
 2819 02f3 1E000000 		.4byte	.LASF45
 2820 02f7 01       		.byte	0x1
 2821 02f8 7208     		.2byte	0x872
 2822 02fa 83000000 		.4byte	0x83
 2823 02fe 02       		.uleb128 0x2
 2824 02ff 91       		.byte	0x91
 2825 0300 74       		.sleb128 -12
 2826 0301 00       		.byte	0
 2827 0302 11       		.uleb128 0x11
 2828 0303 B3000000 		.4byte	.LASF46
 2829 0307 01       		.byte	0x1
 2830 0308 8C08     		.2byte	0x88c
 2831 030a 00000000 		.4byte	.LFB12
 2832 030e 18000000 		.4byte	.LFE12-.LFB12
 2833 0312 01       		.uleb128 0x1
 2834 0313 9C       		.byte	0x9c
 2835 0314 28030000 		.4byte	0x328
 2836 0318 0B       		.uleb128 0xb
 2837 0319 C0010000 		.4byte	.LASF47
 2838 031d 01       		.byte	0x1
 2839 031e 8C08     		.2byte	0x88c
 2840 0320 83000000 		.4byte	0x83
 2841 0324 02       		.uleb128 0x2
 2842 0325 91       		.byte	0x91
 2843 0326 74       		.sleb128 -12
 2844 0327 00       		.byte	0
 2845 0328 10       		.uleb128 0x10
 2846 0329 11030000 		.4byte	.LASF48
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 105


 2847 032d 01       		.byte	0x1
 2848 032e A808     		.2byte	0x8a8
 2849 0330 C6000000 		.4byte	0xc6
 2850 0334 00000000 		.4byte	.LFB13
 2851 0338 3A000000 		.4byte	.LFE13-.LFB13
 2852 033c 01       		.uleb128 0x1
 2853 033d 9C       		.byte	0x9c
 2854 033e 7F030000 		.4byte	0x37f
 2855 0342 0B       		.uleb128 0xb
 2856 0343 B9010000 		.4byte	.LASF49
 2857 0347 01       		.byte	0x1
 2858 0348 A808     		.2byte	0x8a8
 2859 034a 6B000000 		.4byte	0x6b
 2860 034e 02       		.uleb128 0x2
 2861 034f 91       		.byte	0x91
 2862 0350 6F       		.sleb128 -17
 2863 0351 0B       		.uleb128 0xb
 2864 0352 60030000 		.4byte	.LASF50
 2865 0356 01       		.byte	0x1
 2866 0357 A808     		.2byte	0x8a8
 2867 0359 C6000000 		.4byte	0xc6
 2868 035d 02       		.uleb128 0x2
 2869 035e 91       		.byte	0x91
 2870 035f 68       		.sleb128 -24
 2871 0360 0C       		.uleb128 0xc
 2872 0361 5A000000 		.4byte	.LASF51
 2873 0365 01       		.byte	0x1
 2874 0366 AA08     		.2byte	0x8aa
 2875 0368 C6000000 		.4byte	0xc6
 2876 036c 02       		.uleb128 0x2
 2877 036d 91       		.byte	0x91
 2878 036e 70       		.sleb128 -16
 2879 036f 0C       		.uleb128 0xc
 2880 0370 00000000 		.4byte	.LASF52
 2881 0374 01       		.byte	0x1
 2882 0375 AB08     		.2byte	0x8ab
 2883 0377 7F030000 		.4byte	0x37f
 2884 037b 02       		.uleb128 0x2
 2885 037c 91       		.byte	0x91
 2886 037d 74       		.sleb128 -12
 2887 037e 00       		.byte	0
 2888 037f 06       		.uleb128 0x6
 2889 0380 04       		.byte	0x4
 2890 0381 C6000000 		.4byte	0xc6
 2891 0385 10       		.uleb128 0x10
 2892 0386 45040000 		.4byte	.LASF53
 2893 038a 01       		.byte	0x1
 2894 038b CD08     		.2byte	0x8cd
 2895 038d C6000000 		.4byte	0xc6
 2896 0391 00000000 		.4byte	.LFB14
 2897 0395 26000000 		.4byte	.LFE14-.LFB14
 2898 0399 01       		.uleb128 0x1
 2899 039a 9C       		.byte	0x9c
 2900 039b BE030000 		.4byte	0x3be
 2901 039f 0B       		.uleb128 0xb
 2902 03a0 B9010000 		.4byte	.LASF49
 2903 03a4 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 106


 2904 03a5 CD08     		.2byte	0x8cd
 2905 03a7 6B000000 		.4byte	0x6b
 2906 03ab 02       		.uleb128 0x2
 2907 03ac 91       		.byte	0x91
 2908 03ad 6F       		.sleb128 -17
 2909 03ae 0C       		.uleb128 0xc
 2910 03af 00000000 		.4byte	.LASF52
 2911 03b3 01       		.byte	0x1
 2912 03b4 CF08     		.2byte	0x8cf
 2913 03b6 7F030000 		.4byte	0x37f
 2914 03ba 02       		.uleb128 0x2
 2915 03bb 91       		.byte	0x91
 2916 03bc 74       		.sleb128 -12
 2917 03bd 00       		.byte	0
 2918 03be 10       		.uleb128 0x10
 2919 03bf C3020000 		.4byte	.LASF54
 2920 03c3 01       		.byte	0x1
 2921 03c4 E608     		.2byte	0x8e6
 2922 03c6 C6000000 		.4byte	0xc6
 2923 03ca 00000000 		.4byte	.LFB15
 2924 03ce 3E000000 		.4byte	.LFE15-.LFB15
 2925 03d2 01       		.uleb128 0x1
 2926 03d3 9C       		.byte	0x9c
 2927 03d4 15040000 		.4byte	0x415
 2928 03d8 0B       		.uleb128 0xb
 2929 03d9 B9010000 		.4byte	.LASF49
 2930 03dd 01       		.byte	0x1
 2931 03de E608     		.2byte	0x8e6
 2932 03e0 6B000000 		.4byte	0x6b
 2933 03e4 02       		.uleb128 0x2
 2934 03e5 91       		.byte	0x91
 2935 03e6 6F       		.sleb128 -17
 2936 03e7 0B       		.uleb128 0xb
 2937 03e8 60030000 		.4byte	.LASF50
 2938 03ec 01       		.byte	0x1
 2939 03ed E608     		.2byte	0x8e6
 2940 03ef C6000000 		.4byte	0xc6
 2941 03f3 02       		.uleb128 0x2
 2942 03f4 91       		.byte	0x91
 2943 03f5 68       		.sleb128 -24
 2944 03f6 0C       		.uleb128 0xc
 2945 03f7 5A000000 		.4byte	.LASF51
 2946 03fb 01       		.byte	0x1
 2947 03fc E808     		.2byte	0x8e8
 2948 03fe C6000000 		.4byte	0xc6
 2949 0402 02       		.uleb128 0x2
 2950 0403 91       		.byte	0x91
 2951 0404 70       		.sleb128 -16
 2952 0405 0C       		.uleb128 0xc
 2953 0406 00000000 		.4byte	.LASF52
 2954 040a 01       		.byte	0x1
 2955 040b E908     		.2byte	0x8e9
 2956 040d 7F030000 		.4byte	0x37f
 2957 0411 02       		.uleb128 0x2
 2958 0412 91       		.byte	0x91
 2959 0413 74       		.sleb128 -12
 2960 0414 00       		.byte	0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 107


 2961 0415 10       		.uleb128 0x10
 2962 0416 EF030000 		.4byte	.LASF55
 2963 041a 01       		.byte	0x1
 2964 041b 0509     		.2byte	0x905
 2965 041d C6000000 		.4byte	0xc6
 2966 0421 00000000 		.4byte	.LFB16
 2967 0425 28000000 		.4byte	.LFE16-.LFB16
 2968 0429 01       		.uleb128 0x1
 2969 042a 9C       		.byte	0x9c
 2970 042b 4E040000 		.4byte	0x44e
 2971 042f 0B       		.uleb128 0xb
 2972 0430 B9010000 		.4byte	.LASF49
 2973 0434 01       		.byte	0x1
 2974 0435 0509     		.2byte	0x905
 2975 0437 6B000000 		.4byte	0x6b
 2976 043b 02       		.uleb128 0x2
 2977 043c 91       		.byte	0x91
 2978 043d 6F       		.sleb128 -17
 2979 043e 0C       		.uleb128 0xc
 2980 043f 00000000 		.4byte	.LASF52
 2981 0443 01       		.byte	0x1
 2982 0444 0709     		.2byte	0x907
 2983 0446 7F030000 		.4byte	0x37f
 2984 044a 02       		.uleb128 0x2
 2985 044b 91       		.byte	0x91
 2986 044c 74       		.sleb128 -12
 2987 044d 00       		.byte	0
 2988 044e 0A       		.uleb128 0xa
 2989 044f B7030000 		.4byte	.LASF56
 2990 0453 01       		.byte	0x1
 2991 0454 1D09     		.2byte	0x91d
 2992 0456 00000000 		.4byte	.LFB17
 2993 045a 8C000000 		.4byte	.LFE17-.LFB17
 2994 045e 01       		.uleb128 0x1
 2995 045f 9C       		.byte	0x9c
 2996 0460 B0040000 		.4byte	0x4b0
 2997 0464 0B       		.uleb128 0xb
 2998 0465 B9010000 		.4byte	.LASF49
 2999 0469 01       		.byte	0x1
 3000 046a 1D09     		.2byte	0x91d
 3001 046c 6B000000 		.4byte	0x6b
 3002 0470 02       		.uleb128 0x2
 3003 0471 91       		.byte	0x91
 3004 0472 5F       		.sleb128 -33
 3005 0473 0B       		.uleb128 0xb
 3006 0474 F3020000 		.4byte	.LASF57
 3007 0478 01       		.byte	0x1
 3008 0479 1D09     		.2byte	0x91d
 3009 047b 6B000000 		.4byte	0x6b
 3010 047f 02       		.uleb128 0x2
 3011 0480 91       		.byte	0x91
 3012 0481 5E       		.sleb128 -34
 3013 0482 0C       		.uleb128 0xc
 3014 0483 22010000 		.4byte	.LASF22
 3015 0487 01       		.byte	0x1
 3016 0488 1F09     		.2byte	0x91f
 3017 048a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 108


 3018 048e 02       		.uleb128 0x2
 3019 048f 91       		.byte	0x91
 3020 0490 6B       		.sleb128 -21
 3021 0491 0C       		.uleb128 0xc
 3022 0492 95010000 		.4byte	.LASF58
 3023 0496 01       		.byte	0x1
 3024 0497 2009     		.2byte	0x920
 3025 0499 83000000 		.4byte	0x83
 3026 049d 02       		.uleb128 0x2
 3027 049e 91       		.byte	0x91
 3028 049f 6C       		.sleb128 -20
 3029 04a0 0C       		.uleb128 0xc
 3030 04a1 09020000 		.4byte	.LASF59
 3031 04a5 01       		.byte	0x1
 3032 04a6 2109     		.2byte	0x921
 3033 04a8 83000000 		.4byte	0x83
 3034 04ac 02       		.uleb128 0x2
 3035 04ad 91       		.byte	0x91
 3036 04ae 64       		.sleb128 -28
 3037 04af 00       		.byte	0
 3038 04b0 10       		.uleb128 0x10
 3039 04b1 DD010000 		.4byte	.LASF60
 3040 04b5 01       		.byte	0x1
 3041 04b6 4109     		.2byte	0x941
 3042 04b8 6B000000 		.4byte	0x6b
 3043 04bc 00000000 		.4byte	.LFB18
 3044 04c0 4C000000 		.4byte	.LFE18-.LFB18
 3045 04c4 01       		.uleb128 0x1
 3046 04c5 9C       		.byte	0x9c
 3047 04c6 E9040000 		.4byte	0x4e9
 3048 04ca 0B       		.uleb128 0xb
 3049 04cb B9010000 		.4byte	.LASF49
 3050 04cf 01       		.byte	0x1
 3051 04d0 4109     		.2byte	0x941
 3052 04d2 6B000000 		.4byte	0x6b
 3053 04d6 02       		.uleb128 0x2
 3054 04d7 91       		.byte	0x91
 3055 04d8 6F       		.sleb128 -17
 3056 04d9 0C       		.uleb128 0xc
 3057 04da F3020000 		.4byte	.LASF57
 3058 04de 01       		.byte	0x1
 3059 04df 4309     		.2byte	0x943
 3060 04e1 6B000000 		.4byte	0x6b
 3061 04e5 02       		.uleb128 0x2
 3062 04e6 91       		.byte	0x91
 3063 04e7 77       		.sleb128 -9
 3064 04e8 00       		.byte	0
 3065 04e9 11       		.uleb128 0x11
 3066 04ea 39040000 		.4byte	.LASF61
 3067 04ee 01       		.byte	0x1
 3068 04ef 5B09     		.2byte	0x95b
 3069 04f1 00000000 		.4byte	.LFB19
 3070 04f5 28000000 		.4byte	.LFE19-.LFB19
 3071 04f9 01       		.uleb128 0x1
 3072 04fa 9C       		.byte	0x9c
 3073 04fb 0F050000 		.4byte	0x50f
 3074 04ff 0B       		.uleb128 0xb
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 109


 3075 0500 B9010000 		.4byte	.LASF49
 3076 0504 01       		.byte	0x1
 3077 0505 5B09     		.2byte	0x95b
 3078 0507 6B000000 		.4byte	0x6b
 3079 050b 02       		.uleb128 0x2
 3080 050c 91       		.byte	0x91
 3081 050d 77       		.sleb128 -9
 3082 050e 00       		.byte	0
 3083 050f 10       		.uleb128 0x10
 3084 0510 E9000000 		.4byte	.LASF62
 3085 0514 01       		.byte	0x1
 3086 0515 6F09     		.2byte	0x96f
 3087 0517 6B000000 		.4byte	0x6b
 3088 051b 00000000 		.4byte	.LFB20
 3089 051f 30000000 		.4byte	.LFE20-.LFB20
 3090 0523 01       		.uleb128 0x1
 3091 0524 9C       		.byte	0x9c
 3092 0525 39050000 		.4byte	0x539
 3093 0529 0B       		.uleb128 0xb
 3094 052a B9010000 		.4byte	.LASF49
 3095 052e 01       		.byte	0x1
 3096 052f 6F09     		.2byte	0x96f
 3097 0531 6B000000 		.4byte	0x6b
 3098 0535 02       		.uleb128 0x2
 3099 0536 91       		.byte	0x91
 3100 0537 77       		.sleb128 -9
 3101 0538 00       		.byte	0
 3102 0539 11       		.uleb128 0x11
 3103 053a 4D010000 		.4byte	.LASF63
 3104 053e 01       		.byte	0x1
 3105 053f 8409     		.2byte	0x984
 3106 0541 00000000 		.4byte	.LFB21
 3107 0545 28000000 		.4byte	.LFE21-.LFB21
 3108 0549 01       		.uleb128 0x1
 3109 054a 9C       		.byte	0x9c
 3110 054b 5F050000 		.4byte	0x55f
 3111 054f 0B       		.uleb128 0xb
 3112 0550 B9010000 		.4byte	.LASF49
 3113 0554 01       		.byte	0x1
 3114 0555 8409     		.2byte	0x984
 3115 0557 6B000000 		.4byte	0x6b
 3116 055b 02       		.uleb128 0x2
 3117 055c 91       		.byte	0x91
 3118 055d 77       		.sleb128 -9
 3119 055e 00       		.byte	0
 3120 055f 11       		.uleb128 0x11
 3121 0560 8C020000 		.4byte	.LASF64
 3122 0564 01       		.byte	0x1
 3123 0565 9709     		.2byte	0x997
 3124 0567 00000000 		.4byte	.LFB22
 3125 056b 28000000 		.4byte	.LFE22-.LFB22
 3126 056f 01       		.uleb128 0x1
 3127 0570 9C       		.byte	0x9c
 3128 0571 85050000 		.4byte	0x585
 3129 0575 0B       		.uleb128 0xb
 3130 0576 B9010000 		.4byte	.LASF49
 3131 057a 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 110


 3132 057b 9709     		.2byte	0x997
 3133 057d 6B000000 		.4byte	0x6b
 3134 0581 02       		.uleb128 0x2
 3135 0582 91       		.byte	0x91
 3136 0583 77       		.sleb128 -9
 3137 0584 00       		.byte	0
 3138 0585 11       		.uleb128 0x11
 3139 0586 4E030000 		.4byte	.LASF65
 3140 058a 01       		.byte	0x1
 3141 058b AB09     		.2byte	0x9ab
 3142 058d 00000000 		.4byte	.LFB23
 3143 0591 28000000 		.4byte	.LFE23-.LFB23
 3144 0595 01       		.uleb128 0x1
 3145 0596 9C       		.byte	0x9c
 3146 0597 AB050000 		.4byte	0x5ab
 3147 059b 0B       		.uleb128 0xb
 3148 059c B9010000 		.4byte	.LASF49
 3149 05a0 01       		.byte	0x1
 3150 05a1 AB09     		.2byte	0x9ab
 3151 05a3 6B000000 		.4byte	0x6b
 3152 05a7 02       		.uleb128 0x2
 3153 05a8 91       		.byte	0x91
 3154 05a9 77       		.sleb128 -9
 3155 05aa 00       		.byte	0
 3156 05ab 11       		.uleb128 0x11
 3157 05ac 1A040000 		.4byte	.LASF66
 3158 05b0 01       		.byte	0x1
 3159 05b1 BF09     		.2byte	0x9bf
 3160 05b3 00000000 		.4byte	.LFB24
 3161 05b7 14000000 		.4byte	.LFE24-.LFB24
 3162 05bb 01       		.uleb128 0x1
 3163 05bc 9C       		.byte	0x9c
 3164 05bd D1050000 		.4byte	0x5d1
 3165 05c1 0B       		.uleb128 0xb
 3166 05c2 61040000 		.4byte	.LASF42
 3167 05c6 01       		.byte	0x1
 3168 05c7 BF09     		.2byte	0x9bf
 3169 05c9 6B000000 		.4byte	0x6b
 3170 05cd 02       		.uleb128 0x2
 3171 05ce 91       		.byte	0x91
 3172 05cf 77       		.sleb128 -9
 3173 05d0 00       		.byte	0
 3174 05d1 0E       		.uleb128 0xe
 3175 05d2 C0000000 		.4byte	.LASF67
 3176 05d6 01       		.byte	0x1
 3177 05d7 DE09     		.2byte	0x9de
 3178 05d9 00000000 		.4byte	.LFB25
 3179 05dd 20000000 		.4byte	.LFE25-.LFB25
 3180 05e1 01       		.uleb128 0x1
 3181 05e2 9C       		.byte	0x9c
 3182 05e3 0A       		.uleb128 0xa
 3183 05e4 E0040000 		.4byte	.LASF68
 3184 05e8 01       		.byte	0x1
 3185 05e9 F709     		.2byte	0x9f7
 3186 05eb 00000000 		.4byte	.LFB26
 3187 05ef 48000000 		.4byte	.LFE26-.LFB26
 3188 05f3 01       		.uleb128 0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 111


 3189 05f4 9C       		.byte	0x9c
 3190 05f5 09060000 		.4byte	0x609
 3191 05f9 0B       		.uleb128 0xb
 3192 05fa FE030000 		.4byte	.LASF69
 3193 05fe 01       		.byte	0x1
 3194 05ff F709     		.2byte	0x9f7
 3195 0601 83000000 		.4byte	0x83
 3196 0605 02       		.uleb128 0x2
 3197 0606 91       		.byte	0x91
 3198 0607 74       		.sleb128 -12
 3199 0608 00       		.byte	0
 3200 0609 0A       		.uleb128 0xa
 3201 060a 84010000 		.4byte	.LASF70
 3202 060e 01       		.byte	0x1
 3203 060f 130A     		.2byte	0xa13
 3204 0611 00000000 		.4byte	.LFB27
 3205 0615 28000000 		.4byte	.LFE27-.LFB27
 3206 0619 01       		.uleb128 0x1
 3207 061a 9C       		.byte	0x9c
 3208 061b 2F060000 		.4byte	0x62f
 3209 061f 0B       		.uleb128 0xb
 3210 0620 2A060000 		.4byte	.LASF71
 3211 0624 01       		.byte	0x1
 3212 0625 130A     		.2byte	0xa13
 3213 0627 77000000 		.4byte	0x77
 3214 062b 02       		.uleb128 0x2
 3215 062c 91       		.byte	0x91
 3216 062d 76       		.sleb128 -10
 3217 062e 00       		.byte	0
 3218 062f 0A       		.uleb128 0xa
 3219 0630 16010000 		.4byte	.LASF72
 3220 0634 01       		.byte	0x1
 3221 0635 260A     		.2byte	0xa26
 3222 0637 00000000 		.4byte	.LFB28
 3223 063b 84000000 		.4byte	.LFE28-.LFB28
 3224 063f 01       		.uleb128 0x1
 3225 0640 9C       		.byte	0x9c
 3226 0641 55060000 		.4byte	0x655
 3227 0645 0B       		.uleb128 0xb
 3228 0646 11010000 		.4byte	.LASF30
 3229 064a 01       		.byte	0x1
 3230 064b 260A     		.2byte	0xa26
 3231 064d 83000000 		.4byte	0x83
 3232 0651 02       		.uleb128 0x2
 3233 0652 91       		.byte	0x91
 3234 0653 74       		.sleb128 -12
 3235 0654 00       		.byte	0
 3236 0655 12       		.uleb128 0x12
 3237 0656 29030000 		.4byte	.LASF73
 3238 065a 01       		.byte	0x1
 3239 065b 490A     		.2byte	0xa49
 3240 065d 00000000 		.4byte	.LFB29
 3241 0661 24000000 		.4byte	.LFE29-.LFB29
 3242 0665 01       		.uleb128 0x1
 3243 0666 9C       		.byte	0x9c
 3244 0667 0A       		.uleb128 0xa
 3245 0668 FB010000 		.4byte	.LASF74
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 112


 3246 066c 01       		.byte	0x1
 3247 066d 6D0A     		.2byte	0xa6d
 3248 066f 00000000 		.4byte	.LFB30
 3249 0673 60000000 		.4byte	.LFE30-.LFB30
 3250 0677 01       		.uleb128 0x1
 3251 0678 9C       		.byte	0x9c
 3252 0679 8B060000 		.4byte	0x68b
 3253 067d 13       		.uleb128 0x13
 3254 067e 6900     		.ascii	"i\000"
 3255 0680 01       		.byte	0x1
 3256 0681 6F0A     		.2byte	0xa6f
 3257 0683 83000000 		.4byte	0x83
 3258 0687 02       		.uleb128 0x2
 3259 0688 91       		.byte	0x91
 3260 0689 74       		.sleb128 -12
 3261 068a 00       		.byte	0
 3262 068b 12       		.uleb128 0x12
 3263 068c 7A040000 		.4byte	.LASF75
 3264 0690 01       		.byte	0x1
 3265 0691 930A     		.2byte	0xa93
 3266 0693 00000000 		.4byte	.LFB31
 3267 0697 1C000000 		.4byte	.LFE31-.LFB31
 3268 069b 01       		.uleb128 0x1
 3269 069c 9C       		.byte	0x9c
 3270 069d 0E       		.uleb128 0xe
 3271 069e 64050000 		.4byte	.LASF76
 3272 06a2 01       		.byte	0x1
 3273 06a3 AB0A     		.2byte	0xaab
 3274 06a5 00000000 		.4byte	.LFB32
 3275 06a9 18000000 		.4byte	.LFE32-.LFB32
 3276 06ad 01       		.uleb128 0x1
 3277 06ae 9C       		.byte	0x9c
 3278 06af 0E       		.uleb128 0xe
 3279 06b0 D0000000 		.4byte	.LASF77
 3280 06b4 01       		.byte	0x1
 3281 06b5 C20A     		.2byte	0xac2
 3282 06b7 00000000 		.4byte	.LFB33
 3283 06bb 18000000 		.4byte	.LFE33-.LFB33
 3284 06bf 01       		.uleb128 0x1
 3285 06c0 9C       		.byte	0x9c
 3286 06c1 0E       		.uleb128 0xe
 3287 06c2 40000000 		.4byte	.LASF78
 3288 06c6 01       		.byte	0x1
 3289 06c7 D90A     		.2byte	0xad9
 3290 06c9 00000000 		.4byte	.LFB34
 3291 06cd 18000000 		.4byte	.LFE34-.LFB34
 3292 06d1 01       		.uleb128 0x1
 3293 06d2 9C       		.byte	0x9c
 3294 06d3 11       		.uleb128 0x11
 3295 06d4 3E060000 		.4byte	.LASF79
 3296 06d8 01       		.byte	0x1
 3297 06d9 EF0A     		.2byte	0xaef
 3298 06db 00000000 		.4byte	.LFB35
 3299 06df 1C000000 		.4byte	.LFE35-.LFB35
 3300 06e3 01       		.uleb128 0x1
 3301 06e4 9C       		.byte	0x9c
 3302 06e5 F9060000 		.4byte	0x6f9
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 113


 3303 06e9 0B       		.uleb128 0xb
 3304 06ea 09020000 		.4byte	.LASF59
 3305 06ee 01       		.byte	0x1
 3306 06ef EF0A     		.2byte	0xaef
 3307 06f1 83000000 		.4byte	0x83
 3308 06f5 02       		.uleb128 0x2
 3309 06f6 91       		.byte	0x91
 3310 06f7 74       		.sleb128 -12
 3311 06f8 00       		.byte	0
 3312 06f9 0F       		.uleb128 0xf
 3313 06fa 31010000 		.4byte	.LASF81
 3314 06fe 01       		.byte	0x1
 3315 06ff 030B     		.2byte	0xb03
 3316 0701 83000000 		.4byte	0x83
 3317 0705 00000000 		.4byte	.LFB36
 3318 0709 18000000 		.4byte	.LFE36-.LFB36
 3319 070d 01       		.uleb128 0x1
 3320 070e 9C       		.byte	0x9c
 3321 070f 0F       		.uleb128 0xf
 3322 0710 97030000 		.4byte	.LASF82
 3323 0714 01       		.byte	0x1
 3324 0715 170B     		.2byte	0xb17
 3325 0717 83000000 		.4byte	0x83
 3326 071b 00000000 		.4byte	.LFB37
 3327 071f 18000000 		.4byte	.LFE37-.LFB37
 3328 0723 01       		.uleb128 0x1
 3329 0724 9C       		.byte	0x9c
 3330 0725 0F       		.uleb128 0xf
 3331 0726 1D020000 		.4byte	.LASF83
 3332 072a 01       		.byte	0x1
 3333 072b 5A0B     		.2byte	0xb5a
 3334 072d 83000000 		.4byte	0x83
 3335 0731 00000000 		.4byte	.LFB38
 3336 0735 18000000 		.4byte	.LFE38-.LFB38
 3337 0739 01       		.uleb128 0x1
 3338 073a 9C       		.byte	0x9c
 3339 073b 0E       		.uleb128 0xe
 3340 073c 40020000 		.4byte	.LASF84
 3341 0740 01       		.byte	0x1
 3342 0741 6E0B     		.2byte	0xb6e
 3343 0743 00000000 		.4byte	.LFB39
 3344 0747 14000000 		.4byte	.LFE39-.LFB39
 3345 074b 01       		.uleb128 0x1
 3346 074c 9C       		.byte	0x9c
 3347 074d 10       		.uleb128 0x10
 3348 074e A1040000 		.4byte	.LASF85
 3349 0752 01       		.byte	0x1
 3350 0753 930B     		.2byte	0xb93
 3351 0755 E0000000 		.4byte	0xe0
 3352 0759 00000000 		.4byte	.LFB40
 3353 075d 2C000000 		.4byte	.LFE40-.LFB40
 3354 0761 01       		.uleb128 0x1
 3355 0762 9C       		.byte	0x9c
 3356 0763 95070000 		.4byte	0x795
 3357 0767 0B       		.uleb128 0xb
 3358 0768 B9010000 		.4byte	.LASF49
 3359 076c 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 114


 3360 076d 930B     		.2byte	0xb93
 3361 076f 83000000 		.4byte	0x83
 3362 0773 02       		.uleb128 0x2
 3363 0774 91       		.byte	0x91
 3364 0775 6C       		.sleb128 -20
 3365 0776 0B       		.uleb128 0xb
 3366 0777 7D030000 		.4byte	.LASF86
 3367 077b 01       		.byte	0x1
 3368 077c 930B     		.2byte	0xb93
 3369 077e E0000000 		.4byte	0xe0
 3370 0782 02       		.uleb128 0x2
 3371 0783 91       		.byte	0x91
 3372 0784 68       		.sleb128 -24
 3373 0785 0C       		.uleb128 0xc
 3374 0786 61000000 		.4byte	.LASF87
 3375 078a 01       		.byte	0x1
 3376 078b 950B     		.2byte	0xb95
 3377 078d E0000000 		.4byte	0xe0
 3378 0791 02       		.uleb128 0x2
 3379 0792 91       		.byte	0x91
 3380 0793 74       		.sleb128 -12
 3381 0794 00       		.byte	0
 3382 0795 10       		.uleb128 0x10
 3383 0796 5A010000 		.4byte	.LASF88
 3384 079a 01       		.byte	0x1
 3385 079b AD0B     		.2byte	0xbad
 3386 079d E0000000 		.4byte	0xe0
 3387 07a1 00000000 		.4byte	.LFB41
 3388 07a5 1C000000 		.4byte	.LFE41-.LFB41
 3389 07a9 01       		.uleb128 0x1
 3390 07aa 9C       		.byte	0x9c
 3391 07ab BF070000 		.4byte	0x7bf
 3392 07af 0B       		.uleb128 0xb
 3393 07b0 B9010000 		.4byte	.LASF49
 3394 07b4 01       		.byte	0x1
 3395 07b5 AD0B     		.2byte	0xbad
 3396 07b7 83000000 		.4byte	0x83
 3397 07bb 02       		.uleb128 0x2
 3398 07bc 91       		.byte	0x91
 3399 07bd 74       		.sleb128 -12
 3400 07be 00       		.byte	0
 3401 07bf 14       		.uleb128 0x14
 3402 07c0 51060000 		.4byte	.LASF101
 3403 07c4 01       		.byte	0x1
 3404 07c5 C10B     		.2byte	0xbc1
 3405 07c7 00000000 		.4byte	.LFB42
 3406 07cb 44000000 		.4byte	.LFE42-.LFB42
 3407 07cf 01       		.uleb128 0x1
 3408 07d0 9C       		.byte	0x9c
 3409 07d1 E3070000 		.4byte	0x7e3
 3410 07d5 13       		.uleb128 0x13
 3411 07d6 6900     		.ascii	"i\000"
 3412 07d8 01       		.byte	0x1
 3413 07d9 C30B     		.2byte	0xbc3
 3414 07db 83000000 		.4byte	0x83
 3415 07df 02       		.uleb128 0x2
 3416 07e0 91       		.byte	0x91
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 115


 3417 07e1 74       		.sleb128 -12
 3418 07e2 00       		.byte	0
 3419 07e3 11       		.uleb128 0x11
 3420 07e4 0F020000 		.4byte	.LASF89
 3421 07e8 01       		.byte	0x1
 3422 07e9 E60B     		.2byte	0xbe6
 3423 07eb 00000000 		.4byte	.LFB43
 3424 07ef C0000000 		.4byte	.LFE43-.LFB43
 3425 07f3 01       		.uleb128 0x1
 3426 07f4 9C       		.byte	0x9c
 3427 07f5 09080000 		.4byte	0x809
 3428 07f9 0B       		.uleb128 0xb
 3429 07fa D7040000 		.4byte	.LASF90
 3430 07fe 01       		.byte	0x1
 3431 07ff E60B     		.2byte	0xbe6
 3432 0801 09080000 		.4byte	0x809
 3433 0805 02       		.uleb128 0x2
 3434 0806 91       		.byte	0x91
 3435 0807 74       		.sleb128 -12
 3436 0808 00       		.byte	0
 3437 0809 06       		.uleb128 0x6
 3438 080a 04       		.byte	0x4
 3439 080b 83000000 		.4byte	0x83
 3440 080f 15       		.uleb128 0x15
 3441 0810 E0000000 		.4byte	0xe0
 3442 0814 1F080000 		.4byte	0x81f
 3443 0818 16       		.uleb128 0x16
 3444 0819 D9000000 		.4byte	0xd9
 3445 081d 04       		.byte	0x4
 3446 081e 00       		.byte	0
 3447 081f 17       		.uleb128 0x17
 3448 0820 B6040000 		.4byte	.LASF91
 3449 0824 01       		.byte	0x1
 3450 0825 23       		.byte	0x23
 3451 0826 0F080000 		.4byte	0x80f
 3452 082a 05       		.uleb128 0x5
 3453 082b 03       		.byte	0x3
 3454 082c 00000000 		.4byte	CySysTickCallbacks
 3455 0830 18       		.uleb128 0x18
 3456 0831 A2000000 		.4byte	.LASF92
 3457 0835 01       		.byte	0x1
 3458 0836 36       		.byte	0x36
 3459 0837 83000000 		.4byte	0x83
 3460 083b 05       		.uleb128 0x5
 3461 083c 03       		.byte	0x3
 3462 083d 00000000 		.4byte	CySysTickInitVar
 3463 0841 18       		.uleb128 0x18
 3464 0842 A9030000 		.4byte	.LASF93
 3465 0846 01       		.byte	0x1
 3466 0847 1C       		.byte	0x1c
 3467 0848 83000000 		.4byte	0x83
 3468 084c 05       		.uleb128 0x5
 3469 084d 03       		.byte	0x3
 3470 084e 00000000 		.4byte	cydelayFreqHz
 3471 0852 18       		.uleb128 0x18
 3472 0853 75010000 		.4byte	.LASF94
 3473 0857 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 116


 3474 0858 1D       		.byte	0x1d
 3475 0859 83000000 		.4byte	0x83
 3476 085d 05       		.uleb128 0x5
 3477 085e 03       		.byte	0x3
 3478 085f 00000000 		.4byte	cydelayFreqKhz
 3479 0863 18       		.uleb128 0x18
 3480 0864 55050000 		.4byte	.LASF95
 3481 0868 01       		.byte	0x1
 3482 0869 1E       		.byte	0x1e
 3483 086a 6B000000 		.4byte	0x6b
 3484 086e 05       		.uleb128 0x5
 3485 086f 03       		.byte	0x3
 3486 0870 00000000 		.4byte	cydelayFreqMhz
 3487 0874 18       		.uleb128 0x18
 3488 0875 EE010000 		.4byte	.LASF96
 3489 0879 01       		.byte	0x1
 3490 087a 1F       		.byte	0x1f
 3491 087b 83000000 		.4byte	0x83
 3492 087f 05       		.uleb128 0x5
 3493 0880 03       		.byte	0x3
 3494 0881 00000000 		.4byte	cydelay32kMs
 3495 0885 15       		.uleb128 0x15
 3496 0886 6B000000 		.4byte	0x6b
 3497 088a 95080000 		.4byte	0x895
 3498 088e 16       		.uleb128 0x16
 3499 088f D9000000 		.4byte	0xd9
 3500 0893 2D       		.byte	0x2d
 3501 0894 00       		.byte	0
 3502 0895 18       		.uleb128 0x18
 3503 0896 86030000 		.4byte	.LASF97
 3504 089a 01       		.byte	0x1
 3505 089b 3B       		.byte	0x3b
 3506 089c A6080000 		.4byte	0x8a6
 3507 08a0 05       		.uleb128 0x5
 3508 08a1 03       		.byte	0x3
 3509 08a2 00000000 		.4byte	cyImoFreqMhz2Reg
 3510 08a6 19       		.uleb128 0x19
 3511 08a7 85080000 		.4byte	0x885
 3512 08ab 00       		.byte	0
 3513              		.section	.debug_abbrev,"",%progbits
 3514              	.Ldebug_abbrev0:
 3515 0000 01       		.uleb128 0x1
 3516 0001 11       		.uleb128 0x11
 3517 0002 01       		.byte	0x1
 3518 0003 25       		.uleb128 0x25
 3519 0004 0E       		.uleb128 0xe
 3520 0005 13       		.uleb128 0x13
 3521 0006 0B       		.uleb128 0xb
 3522 0007 03       		.uleb128 0x3
 3523 0008 0E       		.uleb128 0xe
 3524 0009 1B       		.uleb128 0x1b
 3525 000a 0E       		.uleb128 0xe
 3526 000b 55       		.uleb128 0x55
 3527 000c 17       		.uleb128 0x17
 3528 000d 11       		.uleb128 0x11
 3529 000e 01       		.uleb128 0x1
 3530 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 117


 3531 0010 17       		.uleb128 0x17
 3532 0011 00       		.byte	0
 3533 0012 00       		.byte	0
 3534 0013 02       		.uleb128 0x2
 3535 0014 24       		.uleb128 0x24
 3536 0015 00       		.byte	0
 3537 0016 0B       		.uleb128 0xb
 3538 0017 0B       		.uleb128 0xb
 3539 0018 3E       		.uleb128 0x3e
 3540 0019 0B       		.uleb128 0xb
 3541 001a 03       		.uleb128 0x3
 3542 001b 0E       		.uleb128 0xe
 3543 001c 00       		.byte	0
 3544 001d 00       		.byte	0
 3545 001e 03       		.uleb128 0x3
 3546 001f 24       		.uleb128 0x24
 3547 0020 00       		.byte	0
 3548 0021 0B       		.uleb128 0xb
 3549 0022 0B       		.uleb128 0xb
 3550 0023 3E       		.uleb128 0x3e
 3551 0024 0B       		.uleb128 0xb
 3552 0025 03       		.uleb128 0x3
 3553 0026 08       		.uleb128 0x8
 3554 0027 00       		.byte	0
 3555 0028 00       		.byte	0
 3556 0029 04       		.uleb128 0x4
 3557 002a 16       		.uleb128 0x16
 3558 002b 00       		.byte	0
 3559 002c 03       		.uleb128 0x3
 3560 002d 0E       		.uleb128 0xe
 3561 002e 3A       		.uleb128 0x3a
 3562 002f 0B       		.uleb128 0xb
 3563 0030 3B       		.uleb128 0x3b
 3564 0031 05       		.uleb128 0x5
 3565 0032 49       		.uleb128 0x49
 3566 0033 13       		.uleb128 0x13
 3567 0034 00       		.byte	0
 3568 0035 00       		.byte	0
 3569 0036 05       		.uleb128 0x5
 3570 0037 35       		.uleb128 0x35
 3571 0038 00       		.byte	0
 3572 0039 49       		.uleb128 0x49
 3573 003a 13       		.uleb128 0x13
 3574 003b 00       		.byte	0
 3575 003c 00       		.byte	0
 3576 003d 06       		.uleb128 0x6
 3577 003e 0F       		.uleb128 0xf
 3578 003f 00       		.byte	0
 3579 0040 0B       		.uleb128 0xb
 3580 0041 0B       		.uleb128 0xb
 3581 0042 49       		.uleb128 0x49
 3582 0043 13       		.uleb128 0x13
 3583 0044 00       		.byte	0
 3584 0045 00       		.byte	0
 3585 0046 07       		.uleb128 0x7
 3586 0047 15       		.uleb128 0x15
 3587 0048 00       		.byte	0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 118


 3588 0049 27       		.uleb128 0x27
 3589 004a 19       		.uleb128 0x19
 3590 004b 00       		.byte	0
 3591 004c 00       		.byte	0
 3592 004d 08       		.uleb128 0x8
 3593 004e 16       		.uleb128 0x16
 3594 004f 00       		.byte	0
 3595 0050 03       		.uleb128 0x3
 3596 0051 0E       		.uleb128 0xe
 3597 0052 3A       		.uleb128 0x3a
 3598 0053 0B       		.uleb128 0xb
 3599 0054 3B       		.uleb128 0x3b
 3600 0055 0B       		.uleb128 0xb
 3601 0056 49       		.uleb128 0x49
 3602 0057 13       		.uleb128 0x13
 3603 0058 00       		.byte	0
 3604 0059 00       		.byte	0
 3605 005a 09       		.uleb128 0x9
 3606 005b 2E       		.uleb128 0x2e
 3607 005c 00       		.byte	0
 3608 005d 3F       		.uleb128 0x3f
 3609 005e 19       		.uleb128 0x19
 3610 005f 03       		.uleb128 0x3
 3611 0060 0E       		.uleb128 0xe
 3612 0061 3A       		.uleb128 0x3a
 3613 0062 0B       		.uleb128 0xb
 3614 0063 3B       		.uleb128 0x3b
 3615 0064 0B       		.uleb128 0xb
 3616 0065 27       		.uleb128 0x27
 3617 0066 19       		.uleb128 0x19
 3618 0067 11       		.uleb128 0x11
 3619 0068 01       		.uleb128 0x1
 3620 0069 12       		.uleb128 0x12
 3621 006a 06       		.uleb128 0x6
 3622 006b 40       		.uleb128 0x40
 3623 006c 18       		.uleb128 0x18
 3624 006d 9742     		.uleb128 0x2117
 3625 006f 19       		.uleb128 0x19
 3626 0070 00       		.byte	0
 3627 0071 00       		.byte	0
 3628 0072 0A       		.uleb128 0xa
 3629 0073 2E       		.uleb128 0x2e
 3630 0074 01       		.byte	0x1
 3631 0075 3F       		.uleb128 0x3f
 3632 0076 19       		.uleb128 0x19
 3633 0077 03       		.uleb128 0x3
 3634 0078 0E       		.uleb128 0xe
 3635 0079 3A       		.uleb128 0x3a
 3636 007a 0B       		.uleb128 0xb
 3637 007b 3B       		.uleb128 0x3b
 3638 007c 05       		.uleb128 0x5
 3639 007d 27       		.uleb128 0x27
 3640 007e 19       		.uleb128 0x19
 3641 007f 11       		.uleb128 0x11
 3642 0080 01       		.uleb128 0x1
 3643 0081 12       		.uleb128 0x12
 3644 0082 06       		.uleb128 0x6
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 119


 3645 0083 40       		.uleb128 0x40
 3646 0084 18       		.uleb128 0x18
 3647 0085 9642     		.uleb128 0x2116
 3648 0087 19       		.uleb128 0x19
 3649 0088 01       		.uleb128 0x1
 3650 0089 13       		.uleb128 0x13
 3651 008a 00       		.byte	0
 3652 008b 00       		.byte	0
 3653 008c 0B       		.uleb128 0xb
 3654 008d 05       		.uleb128 0x5
 3655 008e 00       		.byte	0
 3656 008f 03       		.uleb128 0x3
 3657 0090 0E       		.uleb128 0xe
 3658 0091 3A       		.uleb128 0x3a
 3659 0092 0B       		.uleb128 0xb
 3660 0093 3B       		.uleb128 0x3b
 3661 0094 05       		.uleb128 0x5
 3662 0095 49       		.uleb128 0x49
 3663 0096 13       		.uleb128 0x13
 3664 0097 02       		.uleb128 0x2
 3665 0098 18       		.uleb128 0x18
 3666 0099 00       		.byte	0
 3667 009a 00       		.byte	0
 3668 009b 0C       		.uleb128 0xc
 3669 009c 34       		.uleb128 0x34
 3670 009d 00       		.byte	0
 3671 009e 03       		.uleb128 0x3
 3672 009f 0E       		.uleb128 0xe
 3673 00a0 3A       		.uleb128 0x3a
 3674 00a1 0B       		.uleb128 0xb
 3675 00a2 3B       		.uleb128 0x3b
 3676 00a3 05       		.uleb128 0x5
 3677 00a4 49       		.uleb128 0x49
 3678 00a5 13       		.uleb128 0x13
 3679 00a6 02       		.uleb128 0x2
 3680 00a7 18       		.uleb128 0x18
 3681 00a8 00       		.byte	0
 3682 00a9 00       		.byte	0
 3683 00aa 0D       		.uleb128 0xd
 3684 00ab 2E       		.uleb128 0x2e
 3685 00ac 01       		.byte	0x1
 3686 00ad 3F       		.uleb128 0x3f
 3687 00ae 19       		.uleb128 0x19
 3688 00af 03       		.uleb128 0x3
 3689 00b0 0E       		.uleb128 0xe
 3690 00b1 3A       		.uleb128 0x3a
 3691 00b2 0B       		.uleb128 0xb
 3692 00b3 3B       		.uleb128 0x3b
 3693 00b4 05       		.uleb128 0x5
 3694 00b5 27       		.uleb128 0x27
 3695 00b6 19       		.uleb128 0x19
 3696 00b7 49       		.uleb128 0x49
 3697 00b8 13       		.uleb128 0x13
 3698 00b9 11       		.uleb128 0x11
 3699 00ba 01       		.uleb128 0x1
 3700 00bb 12       		.uleb128 0x12
 3701 00bc 06       		.uleb128 0x6
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 120


 3702 00bd 40       		.uleb128 0x40
 3703 00be 18       		.uleb128 0x18
 3704 00bf 9642     		.uleb128 0x2116
 3705 00c1 19       		.uleb128 0x19
 3706 00c2 01       		.uleb128 0x1
 3707 00c3 13       		.uleb128 0x13
 3708 00c4 00       		.byte	0
 3709 00c5 00       		.byte	0
 3710 00c6 0E       		.uleb128 0xe
 3711 00c7 2E       		.uleb128 0x2e
 3712 00c8 00       		.byte	0
 3713 00c9 3F       		.uleb128 0x3f
 3714 00ca 19       		.uleb128 0x19
 3715 00cb 03       		.uleb128 0x3
 3716 00cc 0E       		.uleb128 0xe
 3717 00cd 3A       		.uleb128 0x3a
 3718 00ce 0B       		.uleb128 0xb
 3719 00cf 3B       		.uleb128 0x3b
 3720 00d0 05       		.uleb128 0x5
 3721 00d1 27       		.uleb128 0x27
 3722 00d2 19       		.uleb128 0x19
 3723 00d3 11       		.uleb128 0x11
 3724 00d4 01       		.uleb128 0x1
 3725 00d5 12       		.uleb128 0x12
 3726 00d6 06       		.uleb128 0x6
 3727 00d7 40       		.uleb128 0x40
 3728 00d8 18       		.uleb128 0x18
 3729 00d9 9742     		.uleb128 0x2117
 3730 00db 19       		.uleb128 0x19
 3731 00dc 00       		.byte	0
 3732 00dd 00       		.byte	0
 3733 00de 0F       		.uleb128 0xf
 3734 00df 2E       		.uleb128 0x2e
 3735 00e0 00       		.byte	0
 3736 00e1 3F       		.uleb128 0x3f
 3737 00e2 19       		.uleb128 0x19
 3738 00e3 03       		.uleb128 0x3
 3739 00e4 0E       		.uleb128 0xe
 3740 00e5 3A       		.uleb128 0x3a
 3741 00e6 0B       		.uleb128 0xb
 3742 00e7 3B       		.uleb128 0x3b
 3743 00e8 05       		.uleb128 0x5
 3744 00e9 27       		.uleb128 0x27
 3745 00ea 19       		.uleb128 0x19
 3746 00eb 49       		.uleb128 0x49
 3747 00ec 13       		.uleb128 0x13
 3748 00ed 11       		.uleb128 0x11
 3749 00ee 01       		.uleb128 0x1
 3750 00ef 12       		.uleb128 0x12
 3751 00f0 06       		.uleb128 0x6
 3752 00f1 40       		.uleb128 0x40
 3753 00f2 18       		.uleb128 0x18
 3754 00f3 9742     		.uleb128 0x2117
 3755 00f5 19       		.uleb128 0x19
 3756 00f6 00       		.byte	0
 3757 00f7 00       		.byte	0
 3758 00f8 10       		.uleb128 0x10
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 121


 3759 00f9 2E       		.uleb128 0x2e
 3760 00fa 01       		.byte	0x1
 3761 00fb 3F       		.uleb128 0x3f
 3762 00fc 19       		.uleb128 0x19
 3763 00fd 03       		.uleb128 0x3
 3764 00fe 0E       		.uleb128 0xe
 3765 00ff 3A       		.uleb128 0x3a
 3766 0100 0B       		.uleb128 0xb
 3767 0101 3B       		.uleb128 0x3b
 3768 0102 05       		.uleb128 0x5
 3769 0103 27       		.uleb128 0x27
 3770 0104 19       		.uleb128 0x19
 3771 0105 49       		.uleb128 0x49
 3772 0106 13       		.uleb128 0x13
 3773 0107 11       		.uleb128 0x11
 3774 0108 01       		.uleb128 0x1
 3775 0109 12       		.uleb128 0x12
 3776 010a 06       		.uleb128 0x6
 3777 010b 40       		.uleb128 0x40
 3778 010c 18       		.uleb128 0x18
 3779 010d 9742     		.uleb128 0x2117
 3780 010f 19       		.uleb128 0x19
 3781 0110 01       		.uleb128 0x1
 3782 0111 13       		.uleb128 0x13
 3783 0112 00       		.byte	0
 3784 0113 00       		.byte	0
 3785 0114 11       		.uleb128 0x11
 3786 0115 2E       		.uleb128 0x2e
 3787 0116 01       		.byte	0x1
 3788 0117 3F       		.uleb128 0x3f
 3789 0118 19       		.uleb128 0x19
 3790 0119 03       		.uleb128 0x3
 3791 011a 0E       		.uleb128 0xe
 3792 011b 3A       		.uleb128 0x3a
 3793 011c 0B       		.uleb128 0xb
 3794 011d 3B       		.uleb128 0x3b
 3795 011e 05       		.uleb128 0x5
 3796 011f 27       		.uleb128 0x27
 3797 0120 19       		.uleb128 0x19
 3798 0121 11       		.uleb128 0x11
 3799 0122 01       		.uleb128 0x1
 3800 0123 12       		.uleb128 0x12
 3801 0124 06       		.uleb128 0x6
 3802 0125 40       		.uleb128 0x40
 3803 0126 18       		.uleb128 0x18
 3804 0127 9742     		.uleb128 0x2117
 3805 0129 19       		.uleb128 0x19
 3806 012a 01       		.uleb128 0x1
 3807 012b 13       		.uleb128 0x13
 3808 012c 00       		.byte	0
 3809 012d 00       		.byte	0
 3810 012e 12       		.uleb128 0x12
 3811 012f 2E       		.uleb128 0x2e
 3812 0130 00       		.byte	0
 3813 0131 3F       		.uleb128 0x3f
 3814 0132 19       		.uleb128 0x19
 3815 0133 03       		.uleb128 0x3
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 122


 3816 0134 0E       		.uleb128 0xe
 3817 0135 3A       		.uleb128 0x3a
 3818 0136 0B       		.uleb128 0xb
 3819 0137 3B       		.uleb128 0x3b
 3820 0138 05       		.uleb128 0x5
 3821 0139 27       		.uleb128 0x27
 3822 013a 19       		.uleb128 0x19
 3823 013b 11       		.uleb128 0x11
 3824 013c 01       		.uleb128 0x1
 3825 013d 12       		.uleb128 0x12
 3826 013e 06       		.uleb128 0x6
 3827 013f 40       		.uleb128 0x40
 3828 0140 18       		.uleb128 0x18
 3829 0141 9642     		.uleb128 0x2116
 3830 0143 19       		.uleb128 0x19
 3831 0144 00       		.byte	0
 3832 0145 00       		.byte	0
 3833 0146 13       		.uleb128 0x13
 3834 0147 34       		.uleb128 0x34
 3835 0148 00       		.byte	0
 3836 0149 03       		.uleb128 0x3
 3837 014a 08       		.uleb128 0x8
 3838 014b 3A       		.uleb128 0x3a
 3839 014c 0B       		.uleb128 0xb
 3840 014d 3B       		.uleb128 0x3b
 3841 014e 05       		.uleb128 0x5
 3842 014f 49       		.uleb128 0x49
 3843 0150 13       		.uleb128 0x13
 3844 0151 02       		.uleb128 0x2
 3845 0152 18       		.uleb128 0x18
 3846 0153 00       		.byte	0
 3847 0154 00       		.byte	0
 3848 0155 14       		.uleb128 0x14
 3849 0156 2E       		.uleb128 0x2e
 3850 0157 01       		.byte	0x1
 3851 0158 03       		.uleb128 0x3
 3852 0159 0E       		.uleb128 0xe
 3853 015a 3A       		.uleb128 0x3a
 3854 015b 0B       		.uleb128 0xb
 3855 015c 3B       		.uleb128 0x3b
 3856 015d 05       		.uleb128 0x5
 3857 015e 27       		.uleb128 0x27
 3858 015f 19       		.uleb128 0x19
 3859 0160 11       		.uleb128 0x11
 3860 0161 01       		.uleb128 0x1
 3861 0162 12       		.uleb128 0x12
 3862 0163 06       		.uleb128 0x6
 3863 0164 40       		.uleb128 0x40
 3864 0165 18       		.uleb128 0x18
 3865 0166 9642     		.uleb128 0x2116
 3866 0168 19       		.uleb128 0x19
 3867 0169 01       		.uleb128 0x1
 3868 016a 13       		.uleb128 0x13
 3869 016b 00       		.byte	0
 3870 016c 00       		.byte	0
 3871 016d 15       		.uleb128 0x15
 3872 016e 01       		.uleb128 0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 123


 3873 016f 01       		.byte	0x1
 3874 0170 49       		.uleb128 0x49
 3875 0171 13       		.uleb128 0x13
 3876 0172 01       		.uleb128 0x1
 3877 0173 13       		.uleb128 0x13
 3878 0174 00       		.byte	0
 3879 0175 00       		.byte	0
 3880 0176 16       		.uleb128 0x16
 3881 0177 21       		.uleb128 0x21
 3882 0178 00       		.byte	0
 3883 0179 49       		.uleb128 0x49
 3884 017a 13       		.uleb128 0x13
 3885 017b 2F       		.uleb128 0x2f
 3886 017c 0B       		.uleb128 0xb
 3887 017d 00       		.byte	0
 3888 017e 00       		.byte	0
 3889 017f 17       		.uleb128 0x17
 3890 0180 34       		.uleb128 0x34
 3891 0181 00       		.byte	0
 3892 0182 03       		.uleb128 0x3
 3893 0183 0E       		.uleb128 0xe
 3894 0184 3A       		.uleb128 0x3a
 3895 0185 0B       		.uleb128 0xb
 3896 0186 3B       		.uleb128 0x3b
 3897 0187 0B       		.uleb128 0xb
 3898 0188 49       		.uleb128 0x49
 3899 0189 13       		.uleb128 0x13
 3900 018a 02       		.uleb128 0x2
 3901 018b 18       		.uleb128 0x18
 3902 018c 00       		.byte	0
 3903 018d 00       		.byte	0
 3904 018e 18       		.uleb128 0x18
 3905 018f 34       		.uleb128 0x34
 3906 0190 00       		.byte	0
 3907 0191 03       		.uleb128 0x3
 3908 0192 0E       		.uleb128 0xe
 3909 0193 3A       		.uleb128 0x3a
 3910 0194 0B       		.uleb128 0xb
 3911 0195 3B       		.uleb128 0x3b
 3912 0196 0B       		.uleb128 0xb
 3913 0197 49       		.uleb128 0x49
 3914 0198 13       		.uleb128 0x13
 3915 0199 3F       		.uleb128 0x3f
 3916 019a 19       		.uleb128 0x19
 3917 019b 02       		.uleb128 0x2
 3918 019c 18       		.uleb128 0x18
 3919 019d 00       		.byte	0
 3920 019e 00       		.byte	0
 3921 019f 19       		.uleb128 0x19
 3922 01a0 26       		.uleb128 0x26
 3923 01a1 00       		.byte	0
 3924 01a2 49       		.uleb128 0x49
 3925 01a3 13       		.uleb128 0x13
 3926 01a4 00       		.byte	0
 3927 01a5 00       		.byte	0
 3928 01a6 00       		.byte	0
 3929              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 124


 3930 0000 74010000 		.4byte	0x174
 3931 0004 0200     		.2byte	0x2
 3932 0006 00000000 		.4byte	.Ldebug_info0
 3933 000a 04       		.byte	0x4
 3934 000b 00       		.byte	0
 3935 000c 0000     		.2byte	0
 3936 000e 0000     		.2byte	0
 3937 0010 00000000 		.4byte	.LFB0
 3938 0014 1C000000 		.4byte	.LFE0-.LFB0
 3939 0018 00000000 		.4byte	.LFB1
 3940 001c 18000000 		.4byte	.LFE1-.LFB1
 3941 0020 00000000 		.4byte	.LFB2
 3942 0024 48000000 		.4byte	.LFE2-.LFB2
 3943 0028 00000000 		.4byte	.LFB3
 3944 002c 34000000 		.4byte	.LFE3-.LFB3
 3945 0030 00000000 		.4byte	.LFB4
 3946 0034 44000000 		.4byte	.LFE4-.LFB4
 3947 0038 00000000 		.4byte	.LFB5
 3948 003c E0010000 		.4byte	.LFE5-.LFB5
 3949 0040 00000000 		.4byte	.LFB6
 3950 0044 60000000 		.4byte	.LFE6-.LFB6
 3951 0048 00000000 		.4byte	.LFB7
 3952 004c 28000000 		.4byte	.LFE7-.LFB7
 3953 0050 00000000 		.4byte	.LFB8
 3954 0054 18000000 		.4byte	.LFE8-.LFB8
 3955 0058 00000000 		.4byte	.LFB9
 3956 005c 14000000 		.4byte	.LFE9-.LFB9
 3957 0060 00000000 		.4byte	.LFB10
 3958 0064 30000000 		.4byte	.LFE10-.LFB10
 3959 0068 00000000 		.4byte	.LFB11
 3960 006c 24000000 		.4byte	.LFE11-.LFB11
 3961 0070 00000000 		.4byte	.LFB12
 3962 0074 18000000 		.4byte	.LFE12-.LFB12
 3963 0078 00000000 		.4byte	.LFB13
 3964 007c 3A000000 		.4byte	.LFE13-.LFB13
 3965 0080 00000000 		.4byte	.LFB14
 3966 0084 26000000 		.4byte	.LFE14-.LFB14
 3967 0088 00000000 		.4byte	.LFB15
 3968 008c 3E000000 		.4byte	.LFE15-.LFB15
 3969 0090 00000000 		.4byte	.LFB16
 3970 0094 28000000 		.4byte	.LFE16-.LFB16
 3971 0098 00000000 		.4byte	.LFB17
 3972 009c 8C000000 		.4byte	.LFE17-.LFB17
 3973 00a0 00000000 		.4byte	.LFB18
 3974 00a4 4C000000 		.4byte	.LFE18-.LFB18
 3975 00a8 00000000 		.4byte	.LFB19
 3976 00ac 28000000 		.4byte	.LFE19-.LFB19
 3977 00b0 00000000 		.4byte	.LFB20
 3978 00b4 30000000 		.4byte	.LFE20-.LFB20
 3979 00b8 00000000 		.4byte	.LFB21
 3980 00bc 28000000 		.4byte	.LFE21-.LFB21
 3981 00c0 00000000 		.4byte	.LFB22
 3982 00c4 28000000 		.4byte	.LFE22-.LFB22
 3983 00c8 00000000 		.4byte	.LFB23
 3984 00cc 28000000 		.4byte	.LFE23-.LFB23
 3985 00d0 00000000 		.4byte	.LFB24
 3986 00d4 14000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 125


 3987 00d8 00000000 		.4byte	.LFB25
 3988 00dc 20000000 		.4byte	.LFE25-.LFB25
 3989 00e0 00000000 		.4byte	.LFB26
 3990 00e4 48000000 		.4byte	.LFE26-.LFB26
 3991 00e8 00000000 		.4byte	.LFB27
 3992 00ec 28000000 		.4byte	.LFE27-.LFB27
 3993 00f0 00000000 		.4byte	.LFB28
 3994 00f4 84000000 		.4byte	.LFE28-.LFB28
 3995 00f8 00000000 		.4byte	.LFB29
 3996 00fc 24000000 		.4byte	.LFE29-.LFB29
 3997 0100 00000000 		.4byte	.LFB30
 3998 0104 60000000 		.4byte	.LFE30-.LFB30
 3999 0108 00000000 		.4byte	.LFB31
 4000 010c 1C000000 		.4byte	.LFE31-.LFB31
 4001 0110 00000000 		.4byte	.LFB32
 4002 0114 18000000 		.4byte	.LFE32-.LFB32
 4003 0118 00000000 		.4byte	.LFB33
 4004 011c 18000000 		.4byte	.LFE33-.LFB33
 4005 0120 00000000 		.4byte	.LFB34
 4006 0124 18000000 		.4byte	.LFE34-.LFB34
 4007 0128 00000000 		.4byte	.LFB35
 4008 012c 1C000000 		.4byte	.LFE35-.LFB35
 4009 0130 00000000 		.4byte	.LFB36
 4010 0134 18000000 		.4byte	.LFE36-.LFB36
 4011 0138 00000000 		.4byte	.LFB37
 4012 013c 18000000 		.4byte	.LFE37-.LFB37
 4013 0140 00000000 		.4byte	.LFB38
 4014 0144 18000000 		.4byte	.LFE38-.LFB38
 4015 0148 00000000 		.4byte	.LFB39
 4016 014c 14000000 		.4byte	.LFE39-.LFB39
 4017 0150 00000000 		.4byte	.LFB40
 4018 0154 2C000000 		.4byte	.LFE40-.LFB40
 4019 0158 00000000 		.4byte	.LFB41
 4020 015c 1C000000 		.4byte	.LFE41-.LFB41
 4021 0160 00000000 		.4byte	.LFB42
 4022 0164 44000000 		.4byte	.LFE42-.LFB42
 4023 0168 00000000 		.4byte	.LFB43
 4024 016c C0000000 		.4byte	.LFE43-.LFB43
 4025 0170 00000000 		.4byte	0
 4026 0174 00000000 		.4byte	0
 4027              		.section	.debug_ranges,"",%progbits
 4028              	.Ldebug_ranges0:
 4029 0000 00000000 		.4byte	.LFB0
 4030 0004 1C000000 		.4byte	.LFE0
 4031 0008 00000000 		.4byte	.LFB1
 4032 000c 18000000 		.4byte	.LFE1
 4033 0010 00000000 		.4byte	.LFB2
 4034 0014 48000000 		.4byte	.LFE2
 4035 0018 00000000 		.4byte	.LFB3
 4036 001c 34000000 		.4byte	.LFE3
 4037 0020 00000000 		.4byte	.LFB4
 4038 0024 44000000 		.4byte	.LFE4
 4039 0028 00000000 		.4byte	.LFB5
 4040 002c E0010000 		.4byte	.LFE5
 4041 0030 00000000 		.4byte	.LFB6
 4042 0034 60000000 		.4byte	.LFE6
 4043 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 126


 4044 003c 28000000 		.4byte	.LFE7
 4045 0040 00000000 		.4byte	.LFB8
 4046 0044 18000000 		.4byte	.LFE8
 4047 0048 00000000 		.4byte	.LFB9
 4048 004c 14000000 		.4byte	.LFE9
 4049 0050 00000000 		.4byte	.LFB10
 4050 0054 30000000 		.4byte	.LFE10
 4051 0058 00000000 		.4byte	.LFB11
 4052 005c 24000000 		.4byte	.LFE11
 4053 0060 00000000 		.4byte	.LFB12
 4054 0064 18000000 		.4byte	.LFE12
 4055 0068 00000000 		.4byte	.LFB13
 4056 006c 3A000000 		.4byte	.LFE13
 4057 0070 00000000 		.4byte	.LFB14
 4058 0074 26000000 		.4byte	.LFE14
 4059 0078 00000000 		.4byte	.LFB15
 4060 007c 3E000000 		.4byte	.LFE15
 4061 0080 00000000 		.4byte	.LFB16
 4062 0084 28000000 		.4byte	.LFE16
 4063 0088 00000000 		.4byte	.LFB17
 4064 008c 8C000000 		.4byte	.LFE17
 4065 0090 00000000 		.4byte	.LFB18
 4066 0094 4C000000 		.4byte	.LFE18
 4067 0098 00000000 		.4byte	.LFB19
 4068 009c 28000000 		.4byte	.LFE19
 4069 00a0 00000000 		.4byte	.LFB20
 4070 00a4 30000000 		.4byte	.LFE20
 4071 00a8 00000000 		.4byte	.LFB21
 4072 00ac 28000000 		.4byte	.LFE21
 4073 00b0 00000000 		.4byte	.LFB22
 4074 00b4 28000000 		.4byte	.LFE22
 4075 00b8 00000000 		.4byte	.LFB23
 4076 00bc 28000000 		.4byte	.LFE23
 4077 00c0 00000000 		.4byte	.LFB24
 4078 00c4 14000000 		.4byte	.LFE24
 4079 00c8 00000000 		.4byte	.LFB25
 4080 00cc 20000000 		.4byte	.LFE25
 4081 00d0 00000000 		.4byte	.LFB26
 4082 00d4 48000000 		.4byte	.LFE26
 4083 00d8 00000000 		.4byte	.LFB27
 4084 00dc 28000000 		.4byte	.LFE27
 4085 00e0 00000000 		.4byte	.LFB28
 4086 00e4 84000000 		.4byte	.LFE28
 4087 00e8 00000000 		.4byte	.LFB29
 4088 00ec 24000000 		.4byte	.LFE29
 4089 00f0 00000000 		.4byte	.LFB30
 4090 00f4 60000000 		.4byte	.LFE30
 4091 00f8 00000000 		.4byte	.LFB31
 4092 00fc 1C000000 		.4byte	.LFE31
 4093 0100 00000000 		.4byte	.LFB32
 4094 0104 18000000 		.4byte	.LFE32
 4095 0108 00000000 		.4byte	.LFB33
 4096 010c 18000000 		.4byte	.LFE33
 4097 0110 00000000 		.4byte	.LFB34
 4098 0114 18000000 		.4byte	.LFE34
 4099 0118 00000000 		.4byte	.LFB35
 4100 011c 1C000000 		.4byte	.LFE35
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 127


 4101 0120 00000000 		.4byte	.LFB36
 4102 0124 18000000 		.4byte	.LFE36
 4103 0128 00000000 		.4byte	.LFB37
 4104 012c 18000000 		.4byte	.LFE37
 4105 0130 00000000 		.4byte	.LFB38
 4106 0134 18000000 		.4byte	.LFE38
 4107 0138 00000000 		.4byte	.LFB39
 4108 013c 14000000 		.4byte	.LFE39
 4109 0140 00000000 		.4byte	.LFB40
 4110 0144 2C000000 		.4byte	.LFE40
 4111 0148 00000000 		.4byte	.LFB41
 4112 014c 1C000000 		.4byte	.LFE41
 4113 0150 00000000 		.4byte	.LFB42
 4114 0154 44000000 		.4byte	.LFE42
 4115 0158 00000000 		.4byte	.LFB43
 4116 015c C0000000 		.4byte	.LFE43
 4117 0160 00000000 		.4byte	0
 4118 0164 00000000 		.4byte	0
 4119              		.section	.debug_line,"",%progbits
 4120              	.Ldebug_line0:
 4121 0000 1D040000 		.section	.debug_str,"MS",%progbits,1
 4121      02004F00 
 4121      00000201 
 4121      FB0E0D00 
 4121      01010101 
 4122              	.LASF52:
 4123 0000 72616D56 		.ascii	"ramVectorTable\000"
 4123      6563746F 
 4123      72546162 
 4123      6C6500
 4124              	.LASF31:
 4125 000f 62675472 		.ascii	"bgTrim4\000"
 4125      696D3400 
 4126              	.LASF10:
 4127 0017 75696E74 		.ascii	"uint16\000"
 4127      313600
 4128              	.LASF45:
 4129 001e 696E7453 		.ascii	"intState\000"
 4129      74617465 
 4129      00
 4130              	.LASF25:
 4131 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4131      73436C6B 
 4131      57726974 
 4131      65486663 
 4131      6C6B4469 
 4132              	.LASF78:
 4133 0040 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4133      73546963 
 4133      6B446973 
 4133      61626C65 
 4133      496E7465 
 4134              	.LASF51:
 4135 005a 6F6C6449 		.ascii	"oldIsr\000"
 4135      737200
 4136              	.LASF87:
 4137 0061 72657456 		.ascii	"retVal\000"
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 128


 4137      616C00
 4138              	.LASF44:
 4139 0068 43794469 		.ascii	"CyDisableInts\000"
 4139      7361626C 
 4139      65496E74 
 4139      7300
 4140              	.LASF34:
 4141 0076 63757272 		.ascii	"currentImoTrim2Value\000"
 4141      656E7449 
 4141      6D6F5472 
 4141      696D3256 
 4141      616C7565 
 4142              	.LASF7:
 4143 008b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4143      206C6F6E 
 4143      6720756E 
 4143      7369676E 
 4143      65642069 
 4144              	.LASF92:
 4145 00a2 43795379 		.ascii	"CySysTickInitVar\000"
 4145      73546963 
 4145      6B496E69 
 4145      74566172 
 4145      00
 4146              	.LASF46:
 4147 00b3 4379456E 		.ascii	"CyEnableInts\000"
 4147      61626C65 
 4147      496E7473 
 4147      00
 4148              	.LASF67:
 4149 00c0 4379536F 		.ascii	"CySoftwareReset\000"
 4149      66747761 
 4149      72655265 
 4149      73657400 
 4150              	.LASF77:
 4151 00d0 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4151      73546963 
 4151      6B456E61 
 4151      626C6549 
 4151      6E746572 
 4152              	.LASF62:
 4153 00e9 4379496E 		.ascii	"CyIntGetState\000"
 4153      74476574 
 4153      53746174 
 4153      6500
 4154              	.LASF6:
 4155 00f7 6C6F6E67 		.ascii	"long long int\000"
 4155      206C6F6E 
 4155      6720696E 
 4155      7400
 4156              	.LASF0:
 4157 0105 7369676E 		.ascii	"signed char\000"
 4157      65642063 
 4157      68617200 
 4158              	.LASF30:
 4159 0111 66726571 		.ascii	"freq\000"
 4159      00
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 129


 4160              	.LASF72:
 4161 0116 43794465 		.ascii	"CyDelayFreq\000"
 4161      6C617946 
 4161      72657100 
 4162              	.LASF22:
 4163 0122 696E7465 		.ascii	"interruptState\000"
 4163      72727570 
 4163      74537461 
 4163      746500
 4164              	.LASF81:
 4165 0131 43795379 		.ascii	"CySysTickGetReload\000"
 4165      73546963 
 4165      6B476574 
 4165      52656C6F 
 4165      616400
 4166              	.LASF4:
 4167 0144 6C6F6E67 		.ascii	"long int\000"
 4167      20696E74 
 4167      00
 4168              	.LASF63:
 4169 014d 4379496E 		.ascii	"CyIntDisable\000"
 4169      74446973 
 4169      61626C65 
 4169      00
 4170              	.LASF88:
 4171 015a 43795379 		.ascii	"CySysTickGetCallback\000"
 4171      73546963 
 4171      6B476574 
 4171      43616C6C 
 4171      6261636B 
 4172              	.LASF9:
 4173 016f 75696E74 		.ascii	"uint8\000"
 4173      3800
 4174              	.LASF94:
 4175 0175 63796465 		.ascii	"cydelayFreqKhz\000"
 4175      6C617946 
 4175      7265714B 
 4175      687A00
 4176              	.LASF70:
 4177 0184 43794465 		.ascii	"CyDelayUs\000"
 4177      6C617955 
 4177      7300
 4178              	.LASF13:
 4179 018e 646F7562 		.ascii	"double\000"
 4179      6C6500
 4180              	.LASF58:
 4181 0195 73686966 		.ascii	"shift\000"
 4181      7400
 4182              	.LASF39:
 4183 019b 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4183      734C7664 
 4183      436C6561 
 4183      72496E74 
 4183      65727275 
 4184              	.LASF11:
 4185 01b2 75696E74 		.ascii	"uint32\000"
 4185      333200
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 130


 4186              	.LASF49:
 4187 01b9 6E756D62 		.ascii	"number\000"
 4187      657200
 4188              	.LASF47:
 4189 01c0 6D61736B 		.ascii	"mask\000"
 4189      00
 4190              	.LASF40:
 4191 01c5 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4191      73436C6B 
 4191      47657453 
 4191      7973636C 
 4191      6B536F75 
 4192              	.LASF60:
 4193 01dd 4379496E 		.ascii	"CyIntGetPriority\000"
 4193      74476574 
 4193      5072696F 
 4193      72697479 
 4193      00
 4194              	.LASF96:
 4195 01ee 63796465 		.ascii	"cydelay32kMs\000"
 4195      6C617933 
 4195      326B4D73 
 4195      00
 4196              	.LASF74:
 4197 01fb 43795379 		.ascii	"CySysTickInit\000"
 4197      73546963 
 4197      6B496E69 
 4197      7400
 4198              	.LASF59:
 4199 0209 76616C75 		.ascii	"value\000"
 4199      6500
 4200              	.LASF89:
 4201 020f 43794765 		.ascii	"CyGetUniqueId\000"
 4201      74556E69 
 4201      71756549 
 4201      6400
 4202              	.LASF83:
 4203 021d 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4203      73546963 
 4203      6B476574 
 4203      436F756E 
 4203      74466C61 
 4204              	.LASF8:
 4205 0233 756E7369 		.ascii	"unsigned int\000"
 4205      676E6564 
 4205      20696E74 
 4205      00
 4206              	.LASF84:
 4207 0240 43795379 		.ascii	"CySysTickClear\000"
 4207      73546963 
 4207      6B436C65 
 4207      617200
 4208              	.LASF5:
 4209 024f 6C6F6E67 		.ascii	"long unsigned int\000"
 4209      20756E73 
 4209      69676E65 
 4209      6420696E 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 131


 4209      7400
 4210              	.LASF80:
 4211 0261 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4211      734C7664 
 4211      47657449 
 4211      6E746572 
 4211      72757074 
 4212              	.LASF21:
 4213 027c 43795379 		.ascii	"CySysClkImoStop\000"
 4213      73436C6B 
 4213      496D6F53 
 4213      746F7000 
 4214              	.LASF64:
 4215 028c 4379496E 		.ascii	"CyIntSetPending\000"
 4215      74536574 
 4215      50656E64 
 4215      696E6700 
 4216              	.LASF41:
 4217 029c 43795379 		.ascii	"CySysGetResetReason\000"
 4217      73476574 
 4217      52657365 
 4217      74526561 
 4217      736F6E00 
 4218              	.LASF3:
 4219 02b0 73686F72 		.ascii	"short unsigned int\000"
 4219      7420756E 
 4219      7369676E 
 4219      65642069 
 4219      6E7400
 4220              	.LASF54:
 4221 02c3 4379496E 		.ascii	"CyIntSetVector\000"
 4221      74536574 
 4221      56656374 
 4221      6F7200
 4222              	.LASF99:
 4223 02d2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4223      6E657261 
 4223      7465645F 
 4223      536F7572 
 4223      63655C50 
 4224              	.LASF57:
 4225 02f3 7072696F 		.ascii	"priority\000"
 4225      72697479 
 4225      00
 4226              	.LASF29:
 4227 02fc 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4227      73436C6B 
 4227      57726974 
 4227      65496D6F 
 4227      46726571 
 4228              	.LASF48:
 4229 0311 4379496E 		.ascii	"CyIntSetSysVector\000"
 4229      74536574 
 4229      53797356 
 4229      6563746F 
 4229      7200
 4230              	.LASF16:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 132


 4231 0323 72656733 		.ascii	"reg32\000"
 4231      3200
 4232              	.LASF73:
 4233 0329 43795379 		.ascii	"CySysTickStart\000"
 4233      73546963 
 4233      6B537461 
 4233      727400
 4234              	.LASF43:
 4235 0338 72657475 		.ascii	"returnStatus\000"
 4235      726E5374 
 4235      61747573 
 4235      00
 4236              	.LASF18:
 4237 0345 73697A65 		.ascii	"sizetype\000"
 4237      74797065 
 4237      00
 4238              	.LASF65:
 4239 034e 4379496E 		.ascii	"CyIntClearPending\000"
 4239      74436C65 
 4239      61725065 
 4239      6E64696E 
 4239      6700
 4240              	.LASF50:
 4241 0360 61646472 		.ascii	"address\000"
 4241      65737300 
 4242              	.LASF32:
 4243 0368 62675472 		.ascii	"bgTrim5\000"
 4243      696D3500 
 4244              	.LASF24:
 4245 0370 73797363 		.ascii	"sysclkSource\000"
 4245      6C6B536F 
 4245      75726365 
 4245      00
 4246              	.LASF86:
 4247 037d 66756E63 		.ascii	"function\000"
 4247      74696F6E 
 4247      00
 4248              	.LASF97:
 4249 0386 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4249      6F467265 
 4249      714D687A 
 4249      32526567 
 4249      00
 4250              	.LASF82:
 4251 0397 43795379 		.ascii	"CySysTickGetValue\000"
 4251      73546963 
 4251      6B476574 
 4251      56616C75 
 4251      6500
 4252              	.LASF93:
 4253 03a9 63796465 		.ascii	"cydelayFreqHz\000"
 4253      6C617946 
 4253      72657148 
 4253      7A00
 4254              	.LASF56:
 4255 03b7 4379496E 		.ascii	"CyIntSetPriority\000"
 4255      74536574 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 133


 4255      5072696F 
 4255      72697479 
 4255      00
 4256              	.LASF12:
 4257 03c8 666C6F61 		.ascii	"float\000"
 4257      7400
 4258              	.LASF36:
 4259 03ce 43795379 		.ascii	"CySysLvdEnable\000"
 4259      734C7664 
 4259      456E6162 
 4259      6C6500
 4260              	.LASF19:
 4261 03dd 63795379 		.ascii	"cySysTickCallback\000"
 4261      73546963 
 4261      6B43616C 
 4261      6C626163 
 4261      6B00
 4262              	.LASF55:
 4263 03ef 4379496E 		.ascii	"CyIntGetVector\000"
 4263      74476574 
 4263      56656374 
 4263      6F7200
 4264              	.LASF69:
 4265 03fe 6D696C6C 		.ascii	"milliseconds\000"
 4265      69736563 
 4265      6F6E6473 
 4265      00
 4266              	.LASF15:
 4267 040b 72656738 		.ascii	"reg8\000"
 4267      00
 4268              	.LASF37:
 4269 0410 74687265 		.ascii	"threshold\000"
 4269      73686F6C 
 4269      6400
 4270              	.LASF66:
 4271 041a 43794861 		.ascii	"CyHalt\000"
 4271      6C7400
 4272              	.LASF1:
 4273 0421 756E7369 		.ascii	"unsigned char\000"
 4273      676E6564 
 4273      20636861 
 4273      7200
 4274              	.LASF2:
 4275 042f 73686F72 		.ascii	"short int\000"
 4275      7420696E 
 4275      7400
 4276              	.LASF61:
 4277 0439 4379496E 		.ascii	"CyIntEnable\000"
 4277      74456E61 
 4277      626C6500 
 4278              	.LASF53:
 4279 0445 4379496E 		.ascii	"CyIntGetSysVector\000"
 4279      74476574 
 4279      53797356 
 4279      6563746F 
 4279      7200
 4280              	.LASF27:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 134


 4281 0457 636C6B53 		.ascii	"clkSelect\000"
 4281      656C6563 
 4281      7400
 4282              	.LASF42:
 4283 0461 72656173 		.ascii	"reason\000"
 4283      6F6E00
 4284              	.LASF14:
 4285 0468 63686172 		.ascii	"char\000"
 4285      00
 4286              	.LASF17:
 4287 046d 63796973 		.ascii	"cyisraddress\000"
 4287      72616464 
 4287      72657373 
 4287      00
 4288              	.LASF75:
 4289 047a 43795379 		.ascii	"CySysTickEnable\000"
 4289      73546963 
 4289      6B456E61 
 4289      626C6500 
 4290              	.LASF26:
 4291 048a 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4291      73436C6B 
 4291      57726974 
 4291      65537973 
 4291      636C6B44 
 4292              	.LASF85:
 4293 04a1 43795379 		.ascii	"CySysTickSetCallback\000"
 4293      73546963 
 4293      6B536574 
 4293      43616C6C 
 4293      6261636B 
 4294              	.LASF91:
 4295 04b6 43795379 		.ascii	"CySysTickCallbacks\000"
 4295      73546963 
 4295      6B43616C 
 4295      6C626163 
 4295      6B7300
 4296              	.LASF35:
 4297 04c9 696D6F54 		.ascii	"imoTrim1Value\000"
 4297      72696D31 
 4297      56616C75 
 4297      6500
 4298              	.LASF90:
 4299 04d7 756E6971 		.ascii	"uniqueId\000"
 4299      75654964 
 4299      00
 4300              	.LASF68:
 4301 04e0 43794465 		.ascii	"CyDelay\000"
 4301      6C617900 
 4302              	.LASF100:
 4303 04e8 433A5C55 		.ascii	"C:\\Users\\kylep\\Box Sync\\Feniex Firmware Files\\"
 4303      73657273 
 4303      5C6B796C 
 4303      65705C42 
 4303      6F782053 
 4304 0516 414C4220 		.ascii	"ALB Cube\\81-00024-01 AI Cube\\81-00024-01.cydsn\000"
 4304      43756265 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 135


 4304      5C38312D 
 4304      30303032 
 4304      342D3031 
 4305              	.LASF38:
 4306 0545 43795379 		.ascii	"CySysLvdDisable\000"
 4306      734C7664 
 4306      44697361 
 4306      626C6500 
 4307              	.LASF95:
 4308 0555 63796465 		.ascii	"cydelayFreqMhz\000"
 4308      6C617946 
 4308      7265714D 
 4308      687A00
 4309              	.LASF76:
 4310 0564 43795379 		.ascii	"CySysTickStop\000"
 4310      73546963 
 4310      6B53746F 
 4310      7000
 4311              	.LASF28:
 4312 0572 64697669 		.ascii	"divider\000"
 4312      64657200 
 4313              	.LASF98:
 4314 057a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4314      4320342E 
 4314      392E3320 
 4314      32303135 
 4314      30333033 
 4315 05ad 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4315      20726576 
 4315      6973696F 
 4315      6E203232 
 4315      31323230 
 4316 05e0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4316      66756E63 
 4316      74696F6E 
 4316      2D736563 
 4316      74696F6E 
 4317              	.LASF20:
 4318 0608 43795379 		.ascii	"CySysClkImoStart\000"
 4318      73436C6B 
 4318      496D6F53 
 4318      74617274 
 4318      00
 4319              	.LASF33:
 4320 0619 6E657749 		.ascii	"newImoTrim2Value\000"
 4320      6D6F5472 
 4320      696D3256 
 4320      616C7565 
 4320      00
 4321              	.LASF71:
 4322 062a 6D696372 		.ascii	"microseconds\000"
 4322      6F736563 
 4322      6F6E6473 
 4322      00
 4323              	.LASF23:
 4324 0637 746D7052 		.ascii	"tmpReg\000"
 4324      656700
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccAJ1He0.s 			page 136


 4325              	.LASF79:
 4326 063e 43795379 		.ascii	"CySysTickSetReload\000"
 4326      73546963 
 4326      6B536574 
 4326      52656C6F 
 4326      616400
 4327              	.LASF101:
 4328 0651 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4328      73546963 
 4328      6B536572 
 4328      76696365 
 4328      43616C6C 
 4329              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
