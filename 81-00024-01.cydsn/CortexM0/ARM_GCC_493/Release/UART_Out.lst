ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_Out.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_Out_Start,"ax",%progbits
  18              		.align	2
  19              		.global	UART_Out_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_Out_Start, %function
  23              	UART_Out_Start:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_Out.c"
   1:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_Out.c **** * File Name: UART_Out.c
   3:.\Generated_Source\PSoC4/UART_Out.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/UART_Out.c **** *
   5:.\Generated_Source\PSoC4/UART_Out.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_Out.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_Out.c **** *
   8:.\Generated_Source\PSoC4/UART_Out.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_Out.c **** *
  10:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_Out.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_Out.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_Out.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_Out.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_Out.c **** 
  17:.\Generated_Source\PSoC4/UART_Out.c **** #include "UART_Out.h"
  18:.\Generated_Source\PSoC4/UART_Out.c **** #if (UART_Out_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC4/UART_Out.c ****     #include "UART_Out_IntClock.h"
  20:.\Generated_Source\PSoC4/UART_Out.c **** #endif /* End UART_Out_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC4/UART_Out.c **** 
  22:.\Generated_Source\PSoC4/UART_Out.c **** 
  23:.\Generated_Source\PSoC4/UART_Out.c **** /***************************************
  24:.\Generated_Source\PSoC4/UART_Out.c **** * Global data allocation
  25:.\Generated_Source\PSoC4/UART_Out.c **** ***************************************/
  26:.\Generated_Source\PSoC4/UART_Out.c **** 
  27:.\Generated_Source\PSoC4/UART_Out.c **** uint8 UART_Out_initVar = 0u;
  28:.\Generated_Source\PSoC4/UART_Out.c **** 
  29:.\Generated_Source\PSoC4/UART_Out.c **** #if (UART_Out_TX_INTERRUPT_ENABLED && UART_Out_TX_ENABLED)
  30:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_txBuffer[UART_Out_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_txBufferWrite = 0u;
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 2


  33:.\Generated_Source\PSoC4/UART_Out.c **** #endif /* (UART_Out_TX_INTERRUPT_ENABLED && UART_Out_TX_ENABLED) */
  34:.\Generated_Source\PSoC4/UART_Out.c **** 
  35:.\Generated_Source\PSoC4/UART_Out.c **** #if (UART_Out_RX_INTERRUPT_ENABLED && (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED))
  36:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_errorStatus = 0u;
  37:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_rxBuffer[UART_Out_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC4/UART_Out.c ****     volatile uint8 UART_Out_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC4/UART_Out.c ****         volatile uint8 UART_Out_rxAddressMode = UART_Out_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC4/UART_Out.c ****         volatile uint8 UART_Out_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC4/UART_Out.c **** #endif /* (UART_Out_RX_INTERRUPT_ENABLED && (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)) */
  47:.\Generated_Source\PSoC4/UART_Out.c **** 
  48:.\Generated_Source\PSoC4/UART_Out.c **** 
  49:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC4/UART_Out.c **** * Function Name: UART_Out_Start
  51:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
  52:.\Generated_Source\PSoC4/UART_Out.c **** *
  53:.\Generated_Source\PSoC4/UART_Out.c **** * Summary:
  54:.\Generated_Source\PSoC4/UART_Out.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC4/UART_Out.c **** *  UART_Out_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC4/UART_Out.c **** *  UART_Out_Init() function, and then calls the
  57:.\Generated_Source\PSoC4/UART_Out.c **** *  UART_Out_Enable() function.
  58:.\Generated_Source\PSoC4/UART_Out.c **** *
  59:.\Generated_Source\PSoC4/UART_Out.c **** * Parameters:
  60:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
  61:.\Generated_Source\PSoC4/UART_Out.c **** *
  62:.\Generated_Source\PSoC4/UART_Out.c **** * Return:
  63:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
  64:.\Generated_Source\PSoC4/UART_Out.c **** *
  65:.\Generated_Source\PSoC4/UART_Out.c **** * Global variables:
  66:.\Generated_Source\PSoC4/UART_Out.c **** *  The UART_Out_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC4/UART_Out.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC4/UART_Out.c **** *  and set to one (1u) the first time UART_Out_Start() is called. This
  69:.\Generated_Source\PSoC4/UART_Out.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC4/UART_Out.c **** *  subsequent calls to the UART_Out_Start() routine.
  71:.\Generated_Source\PSoC4/UART_Out.c **** *
  72:.\Generated_Source\PSoC4/UART_Out.c **** * Reentrant:
  73:.\Generated_Source\PSoC4/UART_Out.c **** *  No.
  74:.\Generated_Source\PSoC4/UART_Out.c **** *
  75:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC4/UART_Out.c **** void UART_Out_Start(void) 
  77:.\Generated_Source\PSoC4/UART_Out.c **** {
  26              		.loc 1 77 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  78:.\Generated_Source\PSoC4/UART_Out.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC4/UART_Out.c ****     if(UART_Out_initVar == 0u)
  32              		.loc 1 79 0
  33 0002 164B     		ldr	r3, .L4
  34 0004 1A78     		ldrb	r2, [r3]
  35 0006 002A     		cmp	r2, #0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 3


  36 0008 0FD1     		bne	.L2
  37              	.LBB22:
  38              	.LBB23:
  80:.\Generated_Source\PSoC4/UART_Out.c ****     {
  81:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_Init();
  82:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_initVar = 1u;
  83:.\Generated_Source\PSoC4/UART_Out.c ****     }
  84:.\Generated_Source\PSoC4/UART_Out.c **** 
  85:.\Generated_Source\PSoC4/UART_Out.c ****     UART_Out_Enable();
  86:.\Generated_Source\PSoC4/UART_Out.c **** }
  87:.\Generated_Source\PSoC4/UART_Out.c **** 
  88:.\Generated_Source\PSoC4/UART_Out.c **** 
  89:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC4/UART_Out.c **** * Function Name: UART_Out_Init
  91:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
  92:.\Generated_Source\PSoC4/UART_Out.c **** *
  93:.\Generated_Source\PSoC4/UART_Out.c **** * Summary:
  94:.\Generated_Source\PSoC4/UART_Out.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC4/UART_Out.c **** *  dialog settings. It is not necessary to call UART_Out_Init() because
  96:.\Generated_Source\PSoC4/UART_Out.c **** *  the UART_Out_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC4/UART_Out.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC4/UART_Out.c **** *
  99:.\Generated_Source\PSoC4/UART_Out.c **** * Parameters:
 100:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 101:.\Generated_Source\PSoC4/UART_Out.c **** *
 102:.\Generated_Source\PSoC4/UART_Out.c **** * Return:
 103:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 104:.\Generated_Source\PSoC4/UART_Out.c **** *
 105:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC4/UART_Out.c **** void UART_Out_Init(void) 
 107:.\Generated_Source\PSoC4/UART_Out.c **** {
 108:.\Generated_Source\PSoC4/UART_Out.c ****     #if(UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)
 109:.\Generated_Source\PSoC4/UART_Out.c **** 
 110:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC4/UART_Out.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC4/UART_Out.c ****             (void) CyIntSetVector(UART_Out_RX_VECT_NUM, &UART_Out_RXISR);
 113:.\Generated_Source\PSoC4/UART_Out.c ****             CyIntSetPriority(UART_Out_RX_VECT_NUM, UART_Out_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_errorStatus = 0u;
 115:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC4/UART_Out.c **** 
 117:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_SetRxAddressMode(UART_Out_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_SetRxAddress1(UART_Out_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_SetRxAddress2(UART_Out_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* End UART_Out_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC4/UART_Out.c **** 
 123:.\Generated_Source\PSoC4/UART_Out.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXBITCTR_PERIOD_REG = UART_Out_RXBITCTR_INIT;
  39              		.loc 1 124 0
  40 000a 7220     		mov	r0, #114
  41 000c 1449     		ldr	r1, .L4+4
  42 000e 0870     		strb	r0, [r1]
 125:.\Generated_Source\PSoC4/UART_Out.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXSTATUS_MASK_REG  = UART_Out_INIT_RX_INTERRUPTS_MASK;
  43              		.loc 1 126 0
  44 0010 1449     		ldr	r1, .L4+8
  45 0012 5238     		sub	r0, r0, #82
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 4


  46 0014 0870     		strb	r0, [r1]
 127:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* End UART_Out_RX_ENABLED || UART_Out_HD_ENABLED*/
 128:.\Generated_Source\PSoC4/UART_Out.c **** 
 129:.\Generated_Source\PSoC4/UART_Out.c ****     #if(UART_Out_TX_ENABLED)
 130:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC4/UART_Out.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC4/UART_Out.c ****             (void) CyIntSetVector(UART_Out_TX_VECT_NUM, &UART_Out_TXISR);
 133:.\Generated_Source\PSoC4/UART_Out.c ****             CyIntSetPriority(UART_Out_TX_VECT_NUM, UART_Out_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC4/UART_Out.c **** 
 136:.\Generated_Source\PSoC4/UART_Out.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXBITCLKGEN_CTR_REG = UART_Out_BIT_CENTER;
  47              		.loc 1 138 0
  48 0016 1449     		ldr	r1, .L4+12
  49 0018 1A38     		sub	r0, r0, #26
  50 001a 0870     		strb	r0, [r1]
 139:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXBITCLKTX_COMPLETE_REG = ((UART_Out_NUMBER_OF_DATA_BITS +
  51              		.loc 1 139 0
  52 001c 1349     		ldr	r1, .L4+16
  53 001e 4130     		add	r0, r0, #65
  54 0020 0870     		strb	r0, [r1]
 140:.\Generated_Source\PSoC4/UART_Out.c ****                         UART_Out_NUMBER_OF_START_BIT) * UART_Out_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC4/UART_Out.c ****         #else
 142:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXBITCTR_PERIOD_REG = ((UART_Out_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC4/UART_Out.c ****                         UART_Out_NUMBER_OF_START_BIT) * UART_Out_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* End UART_Out_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC4/UART_Out.c **** 
 146:.\Generated_Source\PSoC4/UART_Out.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXSTATUS_MASK_REG = UART_Out_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC4/UART_Out.c ****         #else
 150:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXSTATUS_MASK_REG = UART_Out_INIT_TX_INTERRUPTS_MASK;
  55              		.loc 1 150 0
  56 0022 1349     		ldr	r1, .L4+20
  57 0024 0A70     		strb	r2, [r1]
  58              	.LBE23:
  59              	.LBE22:
  82:.\Generated_Source\PSoC4/UART_Out.c ****     }
  60              		.loc 1 82 0
  61 0026 0132     		add	r2, r2, #1
  62 0028 1A70     		strb	r2, [r3]
  63              	.L2:
  64              	.LBB24:
  65              	.LBB25:
 151:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /*End UART_Out_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC4/UART_Out.c **** 
 153:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* End UART_Out_TX_ENABLED */
 154:.\Generated_Source\PSoC4/UART_Out.c **** 
 155:.\Generated_Source\PSoC4/UART_Out.c ****     #if(UART_Out_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_WriteControlRegister( \
 157:.\Generated_Source\PSoC4/UART_Out.c ****             (UART_Out_ReadControlRegister() & (uint8)~UART_Out_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC4/UART_Out.c ****             (uint8)(UART_Out_PARITY_TYPE << UART_Out_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* End UART_Out_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC4/UART_Out.c **** }
 161:.\Generated_Source\PSoC4/UART_Out.c **** 
 162:.\Generated_Source\PSoC4/UART_Out.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 5


 163:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/UART_Out.c **** * Function Name: UART_Out_Enable
 165:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/UART_Out.c **** *
 167:.\Generated_Source\PSoC4/UART_Out.c **** * Summary:
 168:.\Generated_Source\PSoC4/UART_Out.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC4/UART_Out.c **** *  to call UART_Out_Enable() because the UART_Out_Start() API
 170:.\Generated_Source\PSoC4/UART_Out.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC4/UART_Out.c **** *  operation.
 172:.\Generated_Source\PSoC4/UART_Out.c **** 
 173:.\Generated_Source\PSoC4/UART_Out.c **** * Parameters:
 174:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 175:.\Generated_Source\PSoC4/UART_Out.c **** *
 176:.\Generated_Source\PSoC4/UART_Out.c **** * Return:
 177:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 178:.\Generated_Source\PSoC4/UART_Out.c **** *
 179:.\Generated_Source\PSoC4/UART_Out.c **** * Global Variables:
 180:.\Generated_Source\PSoC4/UART_Out.c **** *  UART_Out_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC4/UART_Out.c **** *
 182:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/UART_Out.c **** void UART_Out_Enable(void) 
 184:.\Generated_Source\PSoC4/UART_Out.c **** {
 185:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC4/UART_Out.c ****     enableInterrupts = CyEnterCriticalSection();
  66              		.loc 1 186 0
  67 002a FFF7FEFF 		bl	CyEnterCriticalSection
  68              	.LVL0:
 187:.\Generated_Source\PSoC4/UART_Out.c **** 
 188:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)
 189:.\Generated_Source\PSoC4/UART_Out.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXBITCTR_CONTROL_REG |= UART_Out_CNTR_ENABLE;
  69              		.loc 1 190 0
  70 002e 2023     		mov	r3, #32
  71 0030 104A     		ldr	r2, .L4+24
 186:.\Generated_Source\PSoC4/UART_Out.c **** 
  72              		.loc 1 186 0
  73 0032 041C     		mov	r4, r0
  74              	.LVL1:
  75              		.loc 1 190 0
  76 0034 1178     		ldrb	r1, [r2]
  77              	.LBE25:
  78              	.LBE24:
  86:.\Generated_Source\PSoC4/UART_Out.c **** 
  79              		.loc 1 86 0
  80              		@ sp needed
  81              	.LBB27:
  82              	.LBB26:
  83              		.loc 1 190 0
  84 0036 0B43     		orr	r3, r1
  85 0038 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC4/UART_Out.c **** 
 192:.\Generated_Source\PSoC4/UART_Out.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXSTATUS_ACTL_REG  |= UART_Out_INT_ENABLE;
  86              		.loc 1 193 0
  87 003a 1023     		mov	r3, #16
  88 003c 0E49     		ldr	r1, .L4+28
  89 003e 0A78     		ldrb	r2, [r1]
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 6


  90 0040 1A43     		orr	r2, r3
  91 0042 D2B2     		uxtb	r2, r2
  92 0044 0A70     		strb	r2, [r1]
 194:.\Generated_Source\PSoC4/UART_Out.c **** 
 195:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_EnableRxInt();
 197:.\Generated_Source\PSoC4/UART_Out.c **** 
 198:.\Generated_Source\PSoC4/UART_Out.c ****             #if (UART_Out_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC4/UART_Out.c ****             #endif /* (UART_Out_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED) */
 203:.\Generated_Source\PSoC4/UART_Out.c **** 
 204:.\Generated_Source\PSoC4/UART_Out.c ****     #if(UART_Out_TX_ENABLED)
 205:.\Generated_Source\PSoC4/UART_Out.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC4/UART_Out.c ****         #if(!UART_Out_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXBITCTR_CONTROL_REG |= UART_Out_CNTR_ENABLE;
 208:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* End UART_Out_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC4/UART_Out.c **** 
 210:.\Generated_Source\PSoC4/UART_Out.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXSTATUS_ACTL_REG |= UART_Out_INT_ENABLE;
  93              		.loc 1 211 0
  94 0046 0D4A     		ldr	r2, .L4+32
  95 0048 1178     		ldrb	r1, [r2]
  96 004a 0B43     		orr	r3, r1
  97 004c DBB2     		uxtb	r3, r3
  98 004e 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_EnableTxInt();
 215:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC4/UART_Out.c ****      #endif /* (UART_Out_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC4/UART_Out.c **** 
 218:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_IntClock_Start();  /* Enable the clock */
  99              		.loc 1 219 0
 100 0050 FFF7FEFF 		bl	UART_Out_IntClock_Start
 101              	.LVL2:
 220:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC4/UART_Out.c **** 
 222:.\Generated_Source\PSoC4/UART_Out.c ****     CyExitCriticalSection(enableInterrupts);
 102              		.loc 1 222 0
 103 0054 201C     		mov	r0, r4
 104 0056 FFF7FEFF 		bl	CyExitCriticalSection
 105              	.LVL3:
 106              	.LVL4:
 107              	.LBE26:
 108              	.LBE27:
  86:.\Generated_Source\PSoC4/UART_Out.c **** 
 109              		.loc 1 86 0
 110 005a 10BD     		pop	{r4, pc}
 111              	.L5:
 112              		.align	2
 113              	.L4:
 114 005c 00000000 		.word	.LANCHOR0
 115 0060 83000F40 		.word	1074724995
 116 0064 80000F40 		.word	1074724992
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 7


 117 0068 20000F40 		.word	1074724896
 118 006c 30000F40 		.word	1074724912
 119 0070 81000F40 		.word	1074724993
 120 0074 93000F40 		.word	1074725011
 121 0078 90000F40 		.word	1074725008
 122 007c 91000F40 		.word	1074725009
 123              		.cfi_endproc
 124              	.LFE0:
 125              		.size	UART_Out_Start, .-UART_Out_Start
 126              		.section	.text.UART_Out_Init,"ax",%progbits
 127              		.align	2
 128              		.global	UART_Out_Init
 129              		.code	16
 130              		.thumb_func
 131              		.type	UART_Out_Init, %function
 132              	UART_Out_Init:
 133              	.LFB1:
 107:.\Generated_Source\PSoC4/UART_Out.c ****     #if(UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)
 134              		.loc 1 107 0
 135              		.cfi_startproc
 124:.\Generated_Source\PSoC4/UART_Out.c ****         /* Configure the Initial RX interrupt mask */
 136              		.loc 1 124 0
 137 0000 7222     		mov	r2, #114
 138 0002 074B     		ldr	r3, .L7
 160:.\Generated_Source\PSoC4/UART_Out.c **** 
 139              		.loc 1 160 0
 140              		@ sp needed
 124:.\Generated_Source\PSoC4/UART_Out.c ****         /* Configure the Initial RX interrupt mask */
 141              		.loc 1 124 0
 142 0004 1A70     		strb	r2, [r3]
 126:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* End UART_Out_RX_ENABLED || UART_Out_HD_ENABLED*/
 143              		.loc 1 126 0
 144 0006 074B     		ldr	r3, .L7+4
 145 0008 523A     		sub	r2, r2, #82
 146 000a 1A70     		strb	r2, [r3]
 138:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXBITCLKTX_COMPLETE_REG = ((UART_Out_NUMBER_OF_DATA_BITS +
 147              		.loc 1 138 0
 148 000c 064B     		ldr	r3, .L7+8
 149 000e 1A3A     		sub	r2, r2, #26
 150 0010 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC4/UART_Out.c ****                         UART_Out_NUMBER_OF_START_BIT) * UART_Out_OVER_SAMPLE_COUNT) - 1u;
 151              		.loc 1 139 0
 152 0012 064B     		ldr	r3, .L7+12
 153 0014 4132     		add	r2, r2, #65
 154 0016 1A70     		strb	r2, [r3]
 150:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /*End UART_Out_TX_INTERRUPT_ENABLED*/
 155              		.loc 1 150 0
 156 0018 0022     		mov	r2, #0
 157 001a 054B     		ldr	r3, .L7+16
 158 001c 1A70     		strb	r2, [r3]
 160:.\Generated_Source\PSoC4/UART_Out.c **** 
 159              		.loc 1 160 0
 160 001e 7047     		bx	lr
 161              	.L8:
 162              		.align	2
 163              	.L7:
 164 0020 83000F40 		.word	1074724995
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 8


 165 0024 80000F40 		.word	1074724992
 166 0028 20000F40 		.word	1074724896
 167 002c 30000F40 		.word	1074724912
 168 0030 81000F40 		.word	1074724993
 169              		.cfi_endproc
 170              	.LFE1:
 171              		.size	UART_Out_Init, .-UART_Out_Init
 172              		.section	.text.UART_Out_Enable,"ax",%progbits
 173              		.align	2
 174              		.global	UART_Out_Enable
 175              		.code	16
 176              		.thumb_func
 177              		.type	UART_Out_Enable, %function
 178              	UART_Out_Enable:
 179              	.LFB2:
 184:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 enableInterrupts;
 180              		.loc 1 184 0
 181              		.cfi_startproc
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 186:.\Generated_Source\PSoC4/UART_Out.c **** 
 186              		.loc 1 186 0
 187 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 188              	.LVL5:
 190:.\Generated_Source\PSoC4/UART_Out.c **** 
 189              		.loc 1 190 0
 190 0006 2023     		mov	r3, #32
 191 0008 0A4A     		ldr	r2, .L10
 186:.\Generated_Source\PSoC4/UART_Out.c **** 
 192              		.loc 1 186 0
 193 000a 041C     		mov	r4, r0
 194              	.LVL6:
 190:.\Generated_Source\PSoC4/UART_Out.c **** 
 195              		.loc 1 190 0
 196 000c 1178     		ldrb	r1, [r2]
 223:.\Generated_Source\PSoC4/UART_Out.c **** }
 197              		.loc 1 223 0
 198              		@ sp needed
 190:.\Generated_Source\PSoC4/UART_Out.c **** 
 199              		.loc 1 190 0
 200 000e 0B43     		orr	r3, r1
 201 0010 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC4/UART_Out.c **** 
 202              		.loc 1 193 0
 203 0012 1023     		mov	r3, #16
 204 0014 0849     		ldr	r1, .L10+4
 205 0016 0A78     		ldrb	r2, [r1]
 206 0018 1A43     		orr	r2, r3
 207 001a D2B2     		uxtb	r2, r2
 208 001c 0A70     		strb	r2, [r1]
 211:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TX_INTERRUPT_ENABLED)
 209              		.loc 1 211 0
 210 001e 074A     		ldr	r2, .L10+8
 211 0020 1178     		ldrb	r1, [r2]
 212 0022 0B43     		orr	r3, r1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 9


 213 0024 DBB2     		uxtb	r3, r3
 214 0026 1370     		strb	r3, [r2]
 219:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_INTERNAL_CLOCK_USED) */
 215              		.loc 1 219 0
 216 0028 FFF7FEFF 		bl	UART_Out_IntClock_Start
 217              	.LVL7:
 222:.\Generated_Source\PSoC4/UART_Out.c **** }
 218              		.loc 1 222 0
 219 002c 201C     		mov	r0, r4
 220 002e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL8:
 222              	.LVL9:
 223              		.loc 1 223 0
 224 0032 10BD     		pop	{r4, pc}
 225              	.L11:
 226              		.align	2
 227              	.L10:
 228 0034 93000F40 		.word	1074725011
 229 0038 90000F40 		.word	1074725008
 230 003c 91000F40 		.word	1074725009
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	UART_Out_Enable, .-UART_Out_Enable
 234              		.section	.text.UART_Out_Stop,"ax",%progbits
 235              		.align	2
 236              		.global	UART_Out_Stop
 237              		.code	16
 238              		.thumb_func
 239              		.type	UART_Out_Stop, %function
 240              	UART_Out_Stop:
 241              	.LFB3:
 224:.\Generated_Source\PSoC4/UART_Out.c **** 
 225:.\Generated_Source\PSoC4/UART_Out.c **** 
 226:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/UART_Out.c **** * Function Name: UART_Out_Stop
 228:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/UART_Out.c **** *
 230:.\Generated_Source\PSoC4/UART_Out.c **** * Summary:
 231:.\Generated_Source\PSoC4/UART_Out.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC4/UART_Out.c **** *
 233:.\Generated_Source\PSoC4/UART_Out.c **** * Parameters:
 234:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 235:.\Generated_Source\PSoC4/UART_Out.c **** *
 236:.\Generated_Source\PSoC4/UART_Out.c **** * Return:
 237:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 238:.\Generated_Source\PSoC4/UART_Out.c **** *
 239:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC4/UART_Out.c **** void UART_Out_Stop(void) 
 241:.\Generated_Source\PSoC4/UART_Out.c **** {
 242              		.loc 1 241 0
 243              		.cfi_startproc
 244 0000 10B5     		push	{r4, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC4/UART_Out.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 10


 248              		.loc 1 243 0
 249 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 250              	.LVL10:
 244:.\Generated_Source\PSoC4/UART_Out.c **** 
 245:.\Generated_Source\PSoC4/UART_Out.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)
 247:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXBITCTR_CONTROL_REG &= (uint8) ~UART_Out_CNTR_ENABLE;
 251              		.loc 1 247 0
 252 0006 2021     		mov	r1, #32
 253 0008 094A     		ldr	r2, .L13
 243:.\Generated_Source\PSoC4/UART_Out.c **** 
 254              		.loc 1 243 0
 255 000a 041C     		mov	r4, r0
 256              	.LVL11:
 257              		.loc 1 247 0
 258 000c 1378     		ldrb	r3, [r2]
 248:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED) */
 249:.\Generated_Source\PSoC4/UART_Out.c **** 
 250:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_TX_ENABLED)
 251:.\Generated_Source\PSoC4/UART_Out.c ****         #if(!UART_Out_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXBITCTR_CONTROL_REG &= (uint8) ~UART_Out_CNTR_ENABLE;
 253:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (!UART_Out_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_TX_ENABLED) */
 255:.\Generated_Source\PSoC4/UART_Out.c **** 
 256:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC4/UART_Out.c **** 
 260:.\Generated_Source\PSoC4/UART_Out.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)
 262:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXSTATUS_ACTL_REG  &= (uint8) ~UART_Out_INT_ENABLE;
 263:.\Generated_Source\PSoC4/UART_Out.c **** 
 264:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_DisableRxInt();
 266:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED) */
 268:.\Generated_Source\PSoC4/UART_Out.c **** 
 269:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_TX_ENABLED)
 270:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXSTATUS_ACTL_REG &= (uint8) ~UART_Out_INT_ENABLE;
 271:.\Generated_Source\PSoC4/UART_Out.c **** 
 272:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_DisableTxInt();
 274:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_TX_ENABLED) */
 276:.\Generated_Source\PSoC4/UART_Out.c **** 
 277:.\Generated_Source\PSoC4/UART_Out.c ****     CyExitCriticalSection(enableInterrupts);
 278:.\Generated_Source\PSoC4/UART_Out.c **** }
 259              		.loc 1 278 0
 260              		@ sp needed
 247:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_ENABLED || UART_Out_HD_ENABLED) */
 261              		.loc 1 247 0
 262 000e 8B43     		bic	r3, r1
 263 0010 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_INTERNAL_CLOCK_USED) */
 264              		.loc 1 257 0
 265 0012 FFF7FEFF 		bl	UART_Out_IntClock_Stop
 266              	.LVL12:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 11


 262:.\Generated_Source\PSoC4/UART_Out.c **** 
 267              		.loc 1 262 0
 268 0016 1021     		mov	r1, #16
 269 0018 064A     		ldr	r2, .L13+4
 277:.\Generated_Source\PSoC4/UART_Out.c **** }
 270              		.loc 1 277 0
 271 001a 201C     		mov	r0, r4
 262:.\Generated_Source\PSoC4/UART_Out.c **** 
 272              		.loc 1 262 0
 273 001c 1378     		ldrb	r3, [r2]
 274 001e 8B43     		bic	r3, r1
 275 0020 1370     		strb	r3, [r2]
 270:.\Generated_Source\PSoC4/UART_Out.c **** 
 276              		.loc 1 270 0
 277 0022 054A     		ldr	r2, .L13+8
 278 0024 1378     		ldrb	r3, [r2]
 279 0026 8B43     		bic	r3, r1
 280 0028 1370     		strb	r3, [r2]
 277:.\Generated_Source\PSoC4/UART_Out.c **** }
 281              		.loc 1 277 0
 282 002a FFF7FEFF 		bl	CyExitCriticalSection
 283              	.LVL13:
 284              	.LVL14:
 285              		.loc 1 278 0
 286 002e 10BD     		pop	{r4, pc}
 287              	.L14:
 288              		.align	2
 289              	.L13:
 290 0030 93000F40 		.word	1074725011
 291 0034 90000F40 		.word	1074725008
 292 0038 91000F40 		.word	1074725009
 293              		.cfi_endproc
 294              	.LFE3:
 295              		.size	UART_Out_Stop, .-UART_Out_Stop
 296              		.section	.text.UART_Out_ReadControlRegister,"ax",%progbits
 297              		.align	2
 298              		.global	UART_Out_ReadControlRegister
 299              		.code	16
 300              		.thumb_func
 301              		.type	UART_Out_ReadControlRegister, %function
 302              	UART_Out_ReadControlRegister:
 303              	.LFB4:
 279:.\Generated_Source\PSoC4/UART_Out.c **** 
 280:.\Generated_Source\PSoC4/UART_Out.c **** 
 281:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/UART_Out.c **** * Function Name: UART_Out_ReadControlRegister
 283:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/UART_Out.c **** *
 285:.\Generated_Source\PSoC4/UART_Out.c **** * Summary:
 286:.\Generated_Source\PSoC4/UART_Out.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC4/UART_Out.c **** *
 288:.\Generated_Source\PSoC4/UART_Out.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 290:.\Generated_Source\PSoC4/UART_Out.c **** *
 291:.\Generated_Source\PSoC4/UART_Out.c **** * Return:
 292:.\Generated_Source\PSoC4/UART_Out.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC4/UART_Out.c **** *
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 12


 294:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/UART_Out.c **** uint8 UART_Out_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC4/UART_Out.c **** {
 304              		.loc 1 296 0
 305              		.cfi_startproc
 297:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC4/UART_Out.c ****         return(0u);
 299:.\Generated_Source\PSoC4/UART_Out.c ****     #else
 300:.\Generated_Source\PSoC4/UART_Out.c ****         return(UART_Out_CONTROL_REG);
 301:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC4/UART_Out.c **** }
 306              		.loc 1 302 0
 307 0000 0020     		mov	r0, #0
 308              		@ sp needed
 309 0002 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE4:
 312              		.size	UART_Out_ReadControlRegister, .-UART_Out_ReadControlRegister
 313              		.section	.text.UART_Out_WriteControlRegister,"ax",%progbits
 314              		.align	2
 315              		.global	UART_Out_WriteControlRegister
 316              		.code	16
 317              		.thumb_func
 318              		.type	UART_Out_WriteControlRegister, %function
 319              	UART_Out_WriteControlRegister:
 320              	.LFB5:
 303:.\Generated_Source\PSoC4/UART_Out.c **** 
 304:.\Generated_Source\PSoC4/UART_Out.c **** 
 305:.\Generated_Source\PSoC4/UART_Out.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC4/UART_Out.c **** * Function Name: UART_Out_WriteControlRegister
 307:.\Generated_Source\PSoC4/UART_Out.c **** ********************************************************************************
 308:.\Generated_Source\PSoC4/UART_Out.c **** *
 309:.\Generated_Source\PSoC4/UART_Out.c **** * Summary:
 310:.\Generated_Source\PSoC4/UART_Out.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC4/UART_Out.c **** *
 312:.\Generated_Source\PSoC4/UART_Out.c **** * Parameters:
 313:.\Generated_Source\PSoC4/UART_Out.c **** *  control:  control register value
 314:.\Generated_Source\PSoC4/UART_Out.c **** *
 315:.\Generated_Source\PSoC4/UART_Out.c **** * Return:
 316:.\Generated_Source\PSoC4/UART_Out.c **** *  None.
 317:.\Generated_Source\PSoC4/UART_Out.c **** *
 318:.\Generated_Source\PSoC4/UART_Out.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_Out.c **** void  UART_Out_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC4/UART_Out.c **** {
 321              		.loc 1 320 0
 322              		.cfi_startproc
 323              	.LVL15:
 321:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC4/UART_Out.c ****         if(0u != control)
 323:.\Generated_Source\PSoC4/UART_Out.c ****         {
 324:.\Generated_Source\PSoC4/UART_Out.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC4/UART_Out.c ****         }
 326:.\Generated_Source\PSoC4/UART_Out.c ****     #else
 327:.\Generated_Source\PSoC4/UART_Out.c ****        UART_Out_CONTROL_REG = control;
 328:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC4/UART_Out.c **** }
 324              		.loc 1 329 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 13


 325              		@ sp needed
 326 0000 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE5:
 329              		.size	UART_Out_WriteControlRegister, .-UART_Out_WriteControlRegister
 330 0002 C046     		.section	.text.UART_Out_SetRxInterruptMode,"ax",%progbits
 331              		.align	2
 332              		.global	UART_Out_SetRxInterruptMode
 333              		.code	16
 334              		.thumb_func
 335              		.type	UART_Out_SetRxInterruptMode, %function
 336              	UART_Out_SetRxInterruptMode:
 337              	.LFB6:
 330:.\Generated_Source\PSoC4/UART_Out.c **** 
 331:.\Generated_Source\PSoC4/UART_Out.c **** 
 332:.\Generated_Source\PSoC4/UART_Out.c **** #if(UART_Out_RX_ENABLED || UART_Out_HD_ENABLED)
 333:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SetRxInterruptMode
 335:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC4/UART_Out.c ****     *
 337:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 338:.\Generated_Source\PSoC4/UART_Out.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC4/UART_Out.c ****     *
 340:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 341:.\Generated_Source\PSoC4/UART_Out.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC4/UART_Out.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC4/UART_Out.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC4/UART_Out.c ****     *
 352:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 353:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 354:.\Generated_Source\PSoC4/UART_Out.c ****     *
 355:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
 356:.\Generated_Source\PSoC4/UART_Out.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC4/UART_Out.c ****     *
 358:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC4/UART_Out.c ****     {
 338              		.loc 1 360 0
 339              		.cfi_startproc
 340              	.LVL16:
 361:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXSTATUS_MASK_REG  = intSrc;
 341              		.loc 1 361 0
 342 0000 014B     		ldr	r3, .L18
 362:.\Generated_Source\PSoC4/UART_Out.c ****     }
 343              		.loc 1 362 0
 344              		@ sp needed
 361:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXSTATUS_MASK_REG  = intSrc;
 345              		.loc 1 361 0
 346 0002 1870     		strb	r0, [r3]
 347              		.loc 1 362 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 14


 348 0004 7047     		bx	lr
 349              	.L19:
 350 0006 C046     		.align	2
 351              	.L18:
 352 0008 80000F40 		.word	1074724992
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	UART_Out_SetRxInterruptMode, .-UART_Out_SetRxInterruptMode
 356              		.section	.text.UART_Out_ReadRxData,"ax",%progbits
 357              		.align	2
 358              		.global	UART_Out_ReadRxData
 359              		.code	16
 360              		.thumb_func
 361              		.type	UART_Out_ReadRxData, %function
 362              	UART_Out_ReadRxData:
 363              	.LFB7:
 363:.\Generated_Source\PSoC4/UART_Out.c **** 
 364:.\Generated_Source\PSoC4/UART_Out.c **** 
 365:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_ReadRxData
 367:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC4/UART_Out.c ****     *
 369:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 370:.\Generated_Source\PSoC4/UART_Out.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC4/UART_Out.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC4/UART_Out.c ****     *
 373:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 374:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 375:.\Generated_Source\PSoC4/UART_Out.c ****     *
 376:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 377:.\Generated_Source\PSoC4/UART_Out.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC4/UART_Out.c ****     *
 379:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 380:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC4/UART_Out.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC4/UART_Out.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC4/UART_Out.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC4/UART_Out.c ****     *
 388:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
 389:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
 390:.\Generated_Source\PSoC4/UART_Out.c ****     *
 391:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_ReadRxData(void) 
 393:.\Generated_Source\PSoC4/UART_Out.c ****     {
 364              		.loc 1 393 0
 365              		.cfi_startproc
 394:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC4/UART_Out.c **** 
 396:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC4/UART_Out.c **** 
 398:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC4/UART_Out.c **** 
 401:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 15


 402:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableRxInt();
 403:.\Generated_Source\PSoC4/UART_Out.c **** 
 404:.\Generated_Source\PSoC4/UART_Out.c ****         locRxBufferRead  = UART_Out_rxBufferRead;
 405:.\Generated_Source\PSoC4/UART_Out.c ****         locRxBufferWrite = UART_Out_rxBufferWrite;
 406:.\Generated_Source\PSoC4/UART_Out.c **** 
 407:.\Generated_Source\PSoC4/UART_Out.c ****         if( (UART_Out_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC4/UART_Out.c ****         {
 409:.\Generated_Source\PSoC4/UART_Out.c ****             rxData = UART_Out_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC4/UART_Out.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC4/UART_Out.c **** 
 412:.\Generated_Source\PSoC4/UART_Out.c ****             if(locRxBufferRead >= UART_Out_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC4/UART_Out.c ****             {
 414:.\Generated_Source\PSoC4/UART_Out.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC4/UART_Out.c ****             }
 416:.\Generated_Source\PSoC4/UART_Out.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC4/UART_Out.c **** 
 419:.\Generated_Source\PSoC4/UART_Out.c ****             if(UART_Out_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC4/UART_Out.c ****             {
 421:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC4/UART_Out.c ****                 #if ((UART_Out_RX_INTERRUPT_ENABLED) && (UART_Out_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC4/UART_Out.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC4/UART_Out.c ****                     #if( UART_Out_HD_ENABLED )
 425:.\Generated_Source\PSoC4/UART_Out.c ****                         if((UART_Out_CONTROL_REG & UART_Out_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC4/UART_Out.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC4/UART_Out.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC4/UART_Out.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC4/UART_Out.c ****                             */
 430:.\Generated_Source\PSoC4/UART_Out.c ****                             UART_Out_RXSTATUS_MASK_REG  |= UART_Out_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC4/UART_Out.c ****                         }
 432:.\Generated_Source\PSoC4/UART_Out.c ****                     #else
 433:.\Generated_Source\PSoC4/UART_Out.c ****                         UART_Out_RXSTATUS_MASK_REG  |= UART_Out_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC4/UART_Out.c ****                     #endif /* end UART_Out_HD_ENABLED */
 435:.\Generated_Source\PSoC4/UART_Out.c ****                 #endif /* ((UART_Out_RX_INTERRUPT_ENABLED) && (UART_Out_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC4/UART_Out.c ****             }
 437:.\Generated_Source\PSoC4/UART_Out.c ****         }
 438:.\Generated_Source\PSoC4/UART_Out.c ****         else
 439:.\Generated_Source\PSoC4/UART_Out.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC4/UART_Out.c ****             rxData = UART_Out_RXDATA_REG;
 441:.\Generated_Source\PSoC4/UART_Out.c ****         }
 442:.\Generated_Source\PSoC4/UART_Out.c **** 
 443:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableRxInt();
 444:.\Generated_Source\PSoC4/UART_Out.c **** 
 445:.\Generated_Source\PSoC4/UART_Out.c ****     #else
 446:.\Generated_Source\PSoC4/UART_Out.c **** 
 447:.\Generated_Source\PSoC4/UART_Out.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC4/UART_Out.c ****         rxData = UART_Out_RXDATA_REG;
 366              		.loc 1 448 0
 367 0000 014B     		ldr	r3, .L21
 449:.\Generated_Source\PSoC4/UART_Out.c **** 
 450:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC4/UART_Out.c **** 
 452:.\Generated_Source\PSoC4/UART_Out.c ****         return(rxData);
 453:.\Generated_Source\PSoC4/UART_Out.c ****     }
 368              		.loc 1 453 0
 369              		@ sp needed
 448:.\Generated_Source\PSoC4/UART_Out.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 16


 370              		.loc 1 448 0
 371 0002 1878     		ldrb	r0, [r3]
 372 0004 C0B2     		uxtb	r0, r0
 373              	.LVL17:
 374              		.loc 1 453 0
 375 0006 7047     		bx	lr
 376              	.L22:
 377              		.align	2
 378              	.L21:
 379 0008 43000F40 		.word	1074724931
 380              		.cfi_endproc
 381              	.LFE7:
 382              		.size	UART_Out_ReadRxData, .-UART_Out_ReadRxData
 383              		.section	.text.UART_Out_ReadRxStatus,"ax",%progbits
 384              		.align	2
 385              		.global	UART_Out_ReadRxStatus
 386              		.code	16
 387              		.thumb_func
 388              		.type	UART_Out_ReadRxStatus, %function
 389              	UART_Out_ReadRxStatus:
 390              	.LFB8:
 454:.\Generated_Source\PSoC4/UART_Out.c **** 
 455:.\Generated_Source\PSoC4/UART_Out.c **** 
 456:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_ReadRxStatus
 458:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC4/UART_Out.c ****     *
 460:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 461:.\Generated_Source\PSoC4/UART_Out.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC4/UART_Out.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC4/UART_Out.c ****     *
 464:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 465:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 466:.\Generated_Source\PSoC4/UART_Out.c ****     *
 467:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 468:.\Generated_Source\PSoC4/UART_Out.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC4/UART_Out.c ****     *
 470:.\Generated_Source\PSoC4/UART_Out.c ****     * Side Effect:
 471:.\Generated_Source\PSoC4/UART_Out.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC4/UART_Out.c ****     *  register read.
 475:.\Generated_Source\PSoC4/UART_Out.c ****     *
 476:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 477:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC4/UART_Out.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC4/UART_Out.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC4/UART_Out.c ****     *   bits.
 483:.\Generated_Source\PSoC4/UART_Out.c ****     *
 484:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC4/UART_Out.c ****     {
 391              		.loc 1 486 0
 392              		.cfi_startproc
 487:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 status;
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 17


 488:.\Generated_Source\PSoC4/UART_Out.c **** 
 489:.\Generated_Source\PSoC4/UART_Out.c ****         status = UART_Out_RXSTATUS_REG & UART_Out_RX_HW_MASK;
 490:.\Generated_Source\PSoC4/UART_Out.c **** 
 491:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC4/UART_Out.c ****         {
 494:.\Generated_Source\PSoC4/UART_Out.c ****             status |= UART_Out_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC4/UART_Out.c ****         }
 497:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC4/UART_Out.c **** 
 499:.\Generated_Source\PSoC4/UART_Out.c ****         return(status);
 393              		.loc 1 499 0
 394 0000 7F20     		mov	r0, #127
 489:.\Generated_Source\PSoC4/UART_Out.c **** 
 395              		.loc 1 489 0
 396 0002 024B     		ldr	r3, .L24
 500:.\Generated_Source\PSoC4/UART_Out.c ****     }
 397              		.loc 1 500 0
 398              		@ sp needed
 489:.\Generated_Source\PSoC4/UART_Out.c **** 
 399              		.loc 1 489 0
 400 0004 1B78     		ldrb	r3, [r3]
 401              	.LVL18:
 499:.\Generated_Source\PSoC4/UART_Out.c ****     }
 402              		.loc 1 499 0
 403 0006 1840     		and	r0, r3
 404              		.loc 1 500 0
 405 0008 7047     		bx	lr
 406              	.L25:
 407 000a C046     		.align	2
 408              	.L24:
 409 000c 60000F40 		.word	1074724960
 410              		.cfi_endproc
 411              	.LFE8:
 412              		.size	UART_Out_ReadRxStatus, .-UART_Out_ReadRxStatus
 413              		.section	.text.UART_Out_GetChar,"ax",%progbits
 414              		.align	2
 415              		.global	UART_Out_GetChar
 416              		.code	16
 417              		.thumb_func
 418              		.type	UART_Out_GetChar, %function
 419              	UART_Out_GetChar:
 420              	.LFB9:
 501:.\Generated_Source\PSoC4/UART_Out.c **** 
 502:.\Generated_Source\PSoC4/UART_Out.c **** 
 503:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_GetChar
 505:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC4/UART_Out.c ****     *
 507:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 508:.\Generated_Source\PSoC4/UART_Out.c ****     *  Returns the last received byte of data. UART_Out_GetChar() is
 509:.\Generated_Source\PSoC4/UART_Out.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC4/UART_Out.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC4/UART_Out.c ****     *
 512:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 513:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 18


 514:.\Generated_Source\PSoC4/UART_Out.c ****     *
 515:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 516:.\Generated_Source\PSoC4/UART_Out.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC4/UART_Out.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC4/UART_Out.c ****     *
 519:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 520:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC4/UART_Out.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC4/UART_Out.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC4/UART_Out.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC4/UART_Out.c ****     *
 528:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
 529:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
 530:.\Generated_Source\PSoC4/UART_Out.c ****     *
 531:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_GetChar(void) 
 533:.\Generated_Source\PSoC4/UART_Out.c ****     {
 421              		.loc 1 533 0
 422              		.cfi_startproc
 423              	.LVL19:
 534:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC4/UART_Out.c **** 
 537:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC4/UART_Out.c **** 
 541:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableRxInt();
 543:.\Generated_Source\PSoC4/UART_Out.c **** 
 544:.\Generated_Source\PSoC4/UART_Out.c ****         locRxBufferRead  = UART_Out_rxBufferRead;
 545:.\Generated_Source\PSoC4/UART_Out.c ****         locRxBufferWrite = UART_Out_rxBufferWrite;
 546:.\Generated_Source\PSoC4/UART_Out.c **** 
 547:.\Generated_Source\PSoC4/UART_Out.c ****         if( (UART_Out_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC4/UART_Out.c ****         {
 549:.\Generated_Source\PSoC4/UART_Out.c ****             rxData = UART_Out_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC4/UART_Out.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC4/UART_Out.c ****             if(locRxBufferRead >= UART_Out_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC4/UART_Out.c ****             {
 553:.\Generated_Source\PSoC4/UART_Out.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC4/UART_Out.c ****             }
 555:.\Generated_Source\PSoC4/UART_Out.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC4/UART_Out.c **** 
 558:.\Generated_Source\PSoC4/UART_Out.c ****             if(UART_Out_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC4/UART_Out.c ****             {
 560:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC4/UART_Out.c ****                 #if( (UART_Out_RX_INTERRUPT_ENABLED) && (UART_Out_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC4/UART_Out.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC4/UART_Out.c ****                     #if( UART_Out_HD_ENABLED )
 564:.\Generated_Source\PSoC4/UART_Out.c ****                         if((UART_Out_CONTROL_REG & UART_Out_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC4/UART_Out.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC4/UART_Out.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC4/UART_Out.c ****                             *  mask will be returned in LoadRxConfig() API.
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 19


 568:.\Generated_Source\PSoC4/UART_Out.c ****                             */
 569:.\Generated_Source\PSoC4/UART_Out.c ****                             UART_Out_RXSTATUS_MASK_REG |= UART_Out_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC4/UART_Out.c ****                         }
 571:.\Generated_Source\PSoC4/UART_Out.c ****                     #else
 572:.\Generated_Source\PSoC4/UART_Out.c ****                         UART_Out_RXSTATUS_MASK_REG |= UART_Out_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC4/UART_Out.c ****                     #endif /* end UART_Out_HD_ENABLED */
 574:.\Generated_Source\PSoC4/UART_Out.c ****                 #endif /* UART_Out_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC4/UART_Out.c ****             }
 576:.\Generated_Source\PSoC4/UART_Out.c **** 
 577:.\Generated_Source\PSoC4/UART_Out.c ****         }
 578:.\Generated_Source\PSoC4/UART_Out.c ****         else
 579:.\Generated_Source\PSoC4/UART_Out.c ****         {   rxStatus = UART_Out_RXSTATUS_REG;
 580:.\Generated_Source\PSoC4/UART_Out.c ****             if((rxStatus & UART_Out_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC4/UART_Out.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC4/UART_Out.c ****                 rxData = UART_Out_RXDATA_REG;
 583:.\Generated_Source\PSoC4/UART_Out.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC4/UART_Out.c ****                 if((rxStatus & (UART_Out_RX_STS_BREAK | UART_Out_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC4/UART_Out.c ****                                 UART_Out_RX_STS_STOP_ERROR | UART_Out_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC4/UART_Out.c ****                 {
 587:.\Generated_Source\PSoC4/UART_Out.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC4/UART_Out.c ****                 }
 589:.\Generated_Source\PSoC4/UART_Out.c ****             }
 590:.\Generated_Source\PSoC4/UART_Out.c ****         }
 591:.\Generated_Source\PSoC4/UART_Out.c **** 
 592:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableRxInt();
 593:.\Generated_Source\PSoC4/UART_Out.c **** 
 594:.\Generated_Source\PSoC4/UART_Out.c ****     #else
 595:.\Generated_Source\PSoC4/UART_Out.c **** 
 596:.\Generated_Source\PSoC4/UART_Out.c ****         rxStatus =UART_Out_RXSTATUS_REG;
 424              		.loc 1 596 0
 425 0000 074B     		ldr	r3, .L32
 534:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 rxData = 0u;
 426              		.loc 1 534 0
 427 0002 0020     		mov	r0, #0
 428              		.loc 1 596 0
 429 0004 1B78     		ldrb	r3, [r3]
 430 0006 DBB2     		uxtb	r3, r3
 431              	.LVL20:
 597:.\Generated_Source\PSoC4/UART_Out.c ****         if((rxStatus & UART_Out_RX_STS_FIFO_NOTEMPTY) != 0u)
 432              		.loc 1 597 0
 433 0008 9A06     		lsl	r2, r3, #26
 434 000a 07D5     		bpl	.L27
 598:.\Generated_Source\PSoC4/UART_Out.c ****         {
 599:.\Generated_Source\PSoC4/UART_Out.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC4/UART_Out.c ****             rxData = UART_Out_RXDATA_REG;
 435              		.loc 1 600 0
 436 000c 054A     		ldr	r2, .L32+4
 437 000e 1078     		ldrb	r0, [r2]
 438              	.LVL21:
 601:.\Generated_Source\PSoC4/UART_Out.c **** 
 602:.\Generated_Source\PSoC4/UART_Out.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC4/UART_Out.c ****             if((rxStatus & (UART_Out_RX_STS_BREAK | UART_Out_RX_STS_PAR_ERROR |
 439              		.loc 1 603 0
 440 0010 1E22     		mov	r2, #30
 441 0012 1340     		and	r3, r2
 442              	.LVL22:
 604:.\Generated_Source\PSoC4/UART_Out.c ****                             UART_Out_RX_STS_STOP_ERROR | UART_Out_RX_STS_OVERRUN)) != 0u)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 20


 605:.\Generated_Source\PSoC4/UART_Out.c ****             {
 606:.\Generated_Source\PSoC4/UART_Out.c ****                 rxData = 0u;
 443              		.loc 1 606 0
 444 0014 5A42     		neg	r2, r3
 445 0016 5A41     		adc	r2, r2, r3
 446 0018 5242     		neg	r2, r2
 447 001a 1040     		and	r0, r2
 448              	.LVL23:
 449              	.L27:
 607:.\Generated_Source\PSoC4/UART_Out.c ****             }
 608:.\Generated_Source\PSoC4/UART_Out.c ****         }
 609:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC4/UART_Out.c **** 
 611:.\Generated_Source\PSoC4/UART_Out.c ****         return(rxData);
 612:.\Generated_Source\PSoC4/UART_Out.c ****     }
 450              		.loc 1 612 0
 451              		@ sp needed
 452 001c 7047     		bx	lr
 453              	.L33:
 454 001e C046     		.align	2
 455              	.L32:
 456 0020 60000F40 		.word	1074724960
 457 0024 43000F40 		.word	1074724931
 458              		.cfi_endproc
 459              	.LFE9:
 460              		.size	UART_Out_GetChar, .-UART_Out_GetChar
 461              		.section	.text.UART_Out_GetByte,"ax",%progbits
 462              		.align	2
 463              		.global	UART_Out_GetByte
 464              		.code	16
 465              		.thumb_func
 466              		.type	UART_Out_GetByte, %function
 467              	UART_Out_GetByte:
 468              	.LFB10:
 613:.\Generated_Source\PSoC4/UART_Out.c **** 
 614:.\Generated_Source\PSoC4/UART_Out.c **** 
 615:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_GetByte
 617:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC4/UART_Out.c ****     *
 619:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 620:.\Generated_Source\PSoC4/UART_Out.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC4/UART_Out.c ****     *  condition.
 622:.\Generated_Source\PSoC4/UART_Out.c ****     *
 623:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 624:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 625:.\Generated_Source\PSoC4/UART_Out.c ****     *
 626:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 627:.\Generated_Source\PSoC4/UART_Out.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC4/UART_Out.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC4/UART_Out.c ****     *
 630:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
 631:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
 632:.\Generated_Source\PSoC4/UART_Out.c ****     *
 633:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC4/UART_Out.c ****     uint16 UART_Out_GetByte(void) 
 635:.\Generated_Source\PSoC4/UART_Out.c ****     {
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 21


 469              		.loc 1 635 0
 470              		.cfi_startproc
 636:.\Generated_Source\PSoC4/UART_Out.c ****         
 637:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC4/UART_Out.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableRxInt();
 641:.\Generated_Source\PSoC4/UART_Out.c ****         locErrorStatus = (uint16)UART_Out_errorStatus;
 642:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_errorStatus = 0u;
 643:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableRxInt();
 644:.\Generated_Source\PSoC4/UART_Out.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_Out_ReadRxData() );
 645:.\Generated_Source\PSoC4/UART_Out.c ****     #else
 646:.\Generated_Source\PSoC4/UART_Out.c ****         return ( ((uint16)UART_Out_ReadRxStatus() << 8u) | UART_Out_ReadRxData() );
 471              		.loc 1 646 0
 472 0000 7F20     		mov	r0, #127
 473              	.LBB28:
 474              	.LBB29:
 489:.\Generated_Source\PSoC4/UART_Out.c **** 
 475              		.loc 1 489 0
 476 0002 044B     		ldr	r3, .L35
 477              	.LBE29:
 478              	.LBE28:
 479              	.LBB31:
 480              	.LBB32:
 448:.\Generated_Source\PSoC4/UART_Out.c **** 
 481              		.loc 1 448 0
 482 0004 044A     		ldr	r2, .L35+4
 483              	.LBE32:
 484              	.LBE31:
 485              	.LBB34:
 486              	.LBB30:
 489:.\Generated_Source\PSoC4/UART_Out.c **** 
 487              		.loc 1 489 0
 488 0006 1B78     		ldrb	r3, [r3]
 489              	.LVL24:
 490              	.LBE30:
 491              	.LBE34:
 492              	.LBB35:
 493              	.LBB33:
 448:.\Generated_Source\PSoC4/UART_Out.c **** 
 494              		.loc 1 448 0
 495 0008 1278     		ldrb	r2, [r2]
 496              	.LVL25:
 497              	.LBE33:
 498              	.LBE35:
 499              		.loc 1 646 0
 500 000a 1840     		and	r0, r3
 501 000c 0002     		lsl	r0, r0, #8
 502 000e 1043     		orr	r0, r2
 647:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* UART_Out_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC4/UART_Out.c ****         
 649:.\Generated_Source\PSoC4/UART_Out.c ****     }
 503              		.loc 1 649 0
 504              		@ sp needed
 505 0010 7047     		bx	lr
 506              	.L36:
 507 0012 C046     		.align	2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 22


 508              	.L35:
 509 0014 60000F40 		.word	1074724960
 510 0018 43000F40 		.word	1074724931
 511              		.cfi_endproc
 512              	.LFE10:
 513              		.size	UART_Out_GetByte, .-UART_Out_GetByte
 514              		.section	.text.UART_Out_GetRxBufferSize,"ax",%progbits
 515              		.align	2
 516              		.global	UART_Out_GetRxBufferSize
 517              		.code	16
 518              		.thumb_func
 519              		.type	UART_Out_GetRxBufferSize, %function
 520              	UART_Out_GetRxBufferSize:
 521              	.LFB11:
 650:.\Generated_Source\PSoC4/UART_Out.c **** 
 651:.\Generated_Source\PSoC4/UART_Out.c **** 
 652:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_GetRxBufferSize
 654:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC4/UART_Out.c ****     *
 656:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 657:.\Generated_Source\PSoC4/UART_Out.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC4/UART_Out.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC4/UART_Out.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC4/UART_Out.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC4/UART_Out.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC4/UART_Out.c ****     *    account.
 663:.\Generated_Source\PSoC4/UART_Out.c ****     *
 664:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 665:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 666:.\Generated_Source\PSoC4/UART_Out.c ****     *
 667:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 668:.\Generated_Source\PSoC4/UART_Out.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC4/UART_Out.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC4/UART_Out.c ****     *
 671:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 672:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC4/UART_Out.c ****     *
 676:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
 677:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
 678:.\Generated_Source\PSoC4/UART_Out.c ****     *
 679:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
 680:.\Generated_Source\PSoC4/UART_Out.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC4/UART_Out.c ****     *
 682:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC4/UART_Out.c ****                                                             
 685:.\Generated_Source\PSoC4/UART_Out.c ****     {
 522              		.loc 1 685 0
 523              		.cfi_startproc
 686:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 size;
 687:.\Generated_Source\PSoC4/UART_Out.c **** 
 688:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC4/UART_Out.c **** 
 690:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 23


 691:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableRxInt();
 692:.\Generated_Source\PSoC4/UART_Out.c **** 
 693:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_rxBufferRead == UART_Out_rxBufferWrite)
 694:.\Generated_Source\PSoC4/UART_Out.c ****         {
 695:.\Generated_Source\PSoC4/UART_Out.c ****             if(UART_Out_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC4/UART_Out.c ****             {
 697:.\Generated_Source\PSoC4/UART_Out.c ****                 size = UART_Out_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC4/UART_Out.c ****             }
 699:.\Generated_Source\PSoC4/UART_Out.c ****             else
 700:.\Generated_Source\PSoC4/UART_Out.c ****             {
 701:.\Generated_Source\PSoC4/UART_Out.c ****                 size = 0u;
 702:.\Generated_Source\PSoC4/UART_Out.c ****             }
 703:.\Generated_Source\PSoC4/UART_Out.c ****         }
 704:.\Generated_Source\PSoC4/UART_Out.c ****         else if(UART_Out_rxBufferRead < UART_Out_rxBufferWrite)
 705:.\Generated_Source\PSoC4/UART_Out.c ****         {
 706:.\Generated_Source\PSoC4/UART_Out.c ****             size = (UART_Out_rxBufferWrite - UART_Out_rxBufferRead);
 707:.\Generated_Source\PSoC4/UART_Out.c ****         }
 708:.\Generated_Source\PSoC4/UART_Out.c ****         else
 709:.\Generated_Source\PSoC4/UART_Out.c ****         {
 710:.\Generated_Source\PSoC4/UART_Out.c ****             size = (UART_Out_RX_BUFFER_SIZE - UART_Out_rxBufferRead) + UART_Out_rxBufferWrite;
 711:.\Generated_Source\PSoC4/UART_Out.c ****         }
 712:.\Generated_Source\PSoC4/UART_Out.c **** 
 713:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableRxInt();
 714:.\Generated_Source\PSoC4/UART_Out.c **** 
 715:.\Generated_Source\PSoC4/UART_Out.c ****     #else
 716:.\Generated_Source\PSoC4/UART_Out.c **** 
 717:.\Generated_Source\PSoC4/UART_Out.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC4/UART_Out.c ****         size = ((UART_Out_RXSTATUS_REG & UART_Out_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 524              		.loc 1 718 0
 525 0000 024B     		ldr	r3, .L38
 719:.\Generated_Source\PSoC4/UART_Out.c **** 
 720:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC4/UART_Out.c **** 
 722:.\Generated_Source\PSoC4/UART_Out.c ****         return(size);
 723:.\Generated_Source\PSoC4/UART_Out.c ****     }
 526              		.loc 1 723 0
 527              		@ sp needed
 718:.\Generated_Source\PSoC4/UART_Out.c **** 
 528              		.loc 1 718 0
 529 0002 1878     		ldrb	r0, [r3]
 530              	.LVL26:
 531 0004 8006     		lsl	r0, r0, #26
 532              	.LVL27:
 722:.\Generated_Source\PSoC4/UART_Out.c ****     }
 533              		.loc 1 722 0
 534 0006 C00F     		lsr	r0, r0, #31
 535              		.loc 1 723 0
 536 0008 7047     		bx	lr
 537              	.L39:
 538 000a C046     		.align	2
 539              	.L38:
 540 000c 60000F40 		.word	1074724960
 541              		.cfi_endproc
 542              	.LFE11:
 543              		.size	UART_Out_GetRxBufferSize, .-UART_Out_GetRxBufferSize
 544              		.section	.text.UART_Out_ClearRxBuffer,"ax",%progbits
 545              		.align	2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 24


 546              		.global	UART_Out_ClearRxBuffer
 547              		.code	16
 548              		.thumb_func
 549              		.type	UART_Out_ClearRxBuffer, %function
 550              	UART_Out_ClearRxBuffer:
 551              	.LFB12:
 724:.\Generated_Source\PSoC4/UART_Out.c **** 
 725:.\Generated_Source\PSoC4/UART_Out.c **** 
 726:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_ClearRxBuffer
 728:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC4/UART_Out.c ****     *
 730:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 731:.\Generated_Source\PSoC4/UART_Out.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC4/UART_Out.c ****     *
 733:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 734:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 735:.\Generated_Source\PSoC4/UART_Out.c ****     *
 736:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 737:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 738:.\Generated_Source\PSoC4/UART_Out.c ****     *
 739:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 740:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC4/UART_Out.c ****     *
 745:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
 746:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
 747:.\Generated_Source\PSoC4/UART_Out.c ****     *
 748:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
 749:.\Generated_Source\PSoC4/UART_Out.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC4/UART_Out.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC4/UART_Out.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC4/UART_Out.c ****     *
 753:.\Generated_Source\PSoC4/UART_Out.c ****     * Side Effects:
 754:.\Generated_Source\PSoC4/UART_Out.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC4/UART_Out.c ****     *
 756:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC4/UART_Out.c ****     {
 552              		.loc 1 758 0
 553              		.cfi_startproc
 554 0000 08B5     		push	{r3, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 3, -8
 557              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC4/UART_Out.c **** 
 761:.\Generated_Source\PSoC4/UART_Out.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC4/UART_Out.c ****         enableInterrupts = CyEnterCriticalSection();
 558              		.loc 1 762 0
 559 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 560              	.LVL28:
 763:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXDATA_AUX_CTL_REG |= (uint8)  UART_Out_RX_FIFO_CLR;
 561              		.loc 1 763 0
 562 0006 0122     		mov	r2, #1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 25


 563 0008 054B     		ldr	r3, .L41
 764:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC4/UART_Out.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/UART_Out.c **** 
 767:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC4/UART_Out.c **** 
 769:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableRxInt();
 771:.\Generated_Source\PSoC4/UART_Out.c **** 
 772:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC4/UART_Out.c **** 
 777:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableRxInt();
 778:.\Generated_Source\PSoC4/UART_Out.c **** 
 779:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC4/UART_Out.c **** 
 781:.\Generated_Source\PSoC4/UART_Out.c ****     }
 564              		.loc 1 781 0
 565              		@ sp needed
 763:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXDATA_AUX_CTL_REG |= (uint8)  UART_Out_RX_FIFO_CLR;
 566              		.loc 1 763 0
 567 000a 1978     		ldrb	r1, [r3]
 568 000c 0A43     		orr	r2, r1
 764:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_RX_FIFO_CLR;
 569              		.loc 1 764 0
 570 000e 0121     		mov	r1, #1
 763:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXDATA_AUX_CTL_REG |= (uint8)  UART_Out_RX_FIFO_CLR;
 571              		.loc 1 763 0
 572 0010 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_RX_FIFO_CLR;
 573              		.loc 1 764 0
 574 0012 1A78     		ldrb	r2, [r3]
 575 0014 8A43     		bic	r2, r1
 576 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC4/UART_Out.c **** 
 577              		.loc 1 765 0
 578 0018 FFF7FEFF 		bl	CyExitCriticalSection
 579              	.LVL29:
 580              		.loc 1 781 0
 581 001c 08BD     		pop	{r3, pc}
 582              	.L42:
 583 001e C046     		.align	2
 584              	.L41:
 585 0020 93000F40 		.word	1074725011
 586              		.cfi_endproc
 587              	.LFE12:
 588              		.size	UART_Out_ClearRxBuffer, .-UART_Out_ClearRxBuffer
 589              		.section	.text.UART_Out_SetRxAddressMode,"ax",%progbits
 590              		.align	2
 591              		.global	UART_Out_SetRxAddressMode
 592              		.code	16
 593              		.thumb_func
 594              		.type	UART_Out_SetRxAddressMode, %function
 595              	UART_Out_SetRxAddressMode:
 596              	.LFB13:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 26


 782:.\Generated_Source\PSoC4/UART_Out.c **** 
 783:.\Generated_Source\PSoC4/UART_Out.c **** 
 784:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SetRxAddressMode
 786:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC4/UART_Out.c ****     *
 788:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 789:.\Generated_Source\PSoC4/UART_Out.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART.
 791:.\Generated_Source\PSoC4/UART_Out.c ****     *
 792:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 793:.\Generated_Source\PSoC4/UART_Out.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC4/UART_Out.c ****     *                                               detection
 796:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC4/UART_Out.c ****     *                                               address detection
 798:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC4/UART_Out.c ****     *                                               detection
 800:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC4/UART_Out.c ****     *                                               address detection
 802:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC4/UART_Out.c ****     *
 804:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 805:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 806:.\Generated_Source\PSoC4/UART_Out.c ****     *
 807:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 808:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC4/UART_Out.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC4/UART_Out.c ****     *
 812:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC4/UART_Out.c ****                                                         
 815:.\Generated_Source\PSoC4/UART_Out.c ****     {
 597              		.loc 1 815 0
 598              		.cfi_startproc
 599              	.LVL30:
 816:.\Generated_Source\PSoC4/UART_Out.c ****         #if(UART_Out_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC4/UART_Out.c ****             #if(UART_Out_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC4/UART_Out.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC4/UART_Out.c ****                 {
 820:.\Generated_Source\PSoC4/UART_Out.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC4/UART_Out.c ****                 }
 822:.\Generated_Source\PSoC4/UART_Out.c ****             #else /* UART_Out_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC4/UART_Out.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC4/UART_Out.c ****                 tmpCtrl = UART_Out_CONTROL_REG & (uint8)~UART_Out_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC4/UART_Out.c ****                 tmpCtrl |= (uint8)(addressMode << UART_Out_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC4/UART_Out.c **** 
 828:.\Generated_Source\PSoC4/UART_Out.c ****                 #if(UART_Out_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC4/UART_Out.c ****                    (UART_Out_RXBUFFERSIZE > UART_Out_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC4/UART_Out.c ****                 #endif /* End UART_Out_RXBUFFERSIZE > UART_Out_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC4/UART_Out.c ****             #endif /* End UART_Out_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC4/UART_Out.c ****         #else /* UART_Out_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC4/UART_Out.c ****             if(0u != addressMode)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 27


 836:.\Generated_Source\PSoC4/UART_Out.c ****             {
 837:.\Generated_Source\PSoC4/UART_Out.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC4/UART_Out.c ****             }
 839:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* End UART_Out_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC4/UART_Out.c ****     }
 600              		.loc 1 840 0
 601              		@ sp needed
 602 0000 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE13:
 605              		.size	UART_Out_SetRxAddressMode, .-UART_Out_SetRxAddressMode
 606 0002 C046     		.section	.text.UART_Out_SetRxAddress1,"ax",%progbits
 607              		.align	2
 608              		.global	UART_Out_SetRxAddress1
 609              		.code	16
 610              		.thumb_func
 611              		.type	UART_Out_SetRxAddress1, %function
 612              	UART_Out_SetRxAddress1:
 613              	.LFB14:
 841:.\Generated_Source\PSoC4/UART_Out.c **** 
 842:.\Generated_Source\PSoC4/UART_Out.c **** 
 843:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SetRxAddress1
 845:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/UART_Out.c ****     *
 847:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 848:.\Generated_Source\PSoC4/UART_Out.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC4/UART_Out.c ****     *
 850:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 851:.\Generated_Source\PSoC4/UART_Out.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC4/UART_Out.c ****     *
 853:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 854:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 855:.\Generated_Source\PSoC4/UART_Out.c ****     *
 856:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC4/UART_Out.c ****     {
 614              		.loc 1 858 0
 615              		.cfi_startproc
 616              	.LVL31:
 859:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXADDRESS1_REG = address;
 617              		.loc 1 859 0
 618 0000 014B     		ldr	r3, .L45
 860:.\Generated_Source\PSoC4/UART_Out.c ****     }
 619              		.loc 1 860 0
 620              		@ sp needed
 859:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXADDRESS1_REG = address;
 621              		.loc 1 859 0
 622 0002 1870     		strb	r0, [r3]
 623              		.loc 1 860 0
 624 0004 7047     		bx	lr
 625              	.L46:
 626 0006 C046     		.align	2
 627              	.L45:
 628 0008 23000F40 		.word	1074724899
 629              		.cfi_endproc
 630              	.LFE14:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 28


 631              		.size	UART_Out_SetRxAddress1, .-UART_Out_SetRxAddress1
 632              		.section	.text.UART_Out_SetRxAddress2,"ax",%progbits
 633              		.align	2
 634              		.global	UART_Out_SetRxAddress2
 635              		.code	16
 636              		.thumb_func
 637              		.type	UART_Out_SetRxAddress2, %function
 638              	UART_Out_SetRxAddress2:
 639              	.LFB15:
 861:.\Generated_Source\PSoC4/UART_Out.c **** 
 862:.\Generated_Source\PSoC4/UART_Out.c **** 
 863:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SetRxAddress2
 865:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC4/UART_Out.c ****     *
 867:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 868:.\Generated_Source\PSoC4/UART_Out.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC4/UART_Out.c ****     *
 870:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 871:.\Generated_Source\PSoC4/UART_Out.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC4/UART_Out.c ****     *
 873:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 874:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 875:.\Generated_Source\PSoC4/UART_Out.c ****     *
 876:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC4/UART_Out.c ****     {
 640              		.loc 1 878 0
 641              		.cfi_startproc
 642              	.LVL32:
 879:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXADDRESS2_REG = address;
 643              		.loc 1 879 0
 644 0000 014B     		ldr	r3, .L48
 880:.\Generated_Source\PSoC4/UART_Out.c ****     }
 645              		.loc 1 880 0
 646              		@ sp needed
 879:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_RXADDRESS2_REG = address;
 647              		.loc 1 879 0
 648 0002 1870     		strb	r0, [r3]
 649              		.loc 1 880 0
 650 0004 7047     		bx	lr
 651              	.L49:
 652 0006 C046     		.align	2
 653              	.L48:
 654 0008 33000F40 		.word	1074724915
 655              		.cfi_endproc
 656              	.LFE15:
 657              		.size	UART_Out_SetRxAddress2, .-UART_Out_SetRxAddress2
 658              		.section	.text.UART_Out_SetTxInterruptMode,"ax",%progbits
 659              		.align	2
 660              		.global	UART_Out_SetTxInterruptMode
 661              		.code	16
 662              		.thumb_func
 663              		.type	UART_Out_SetTxInterruptMode, %function
 664              	UART_Out_SetTxInterruptMode:
 665              	.LFB16:
 881:.\Generated_Source\PSoC4/UART_Out.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 29


 882:.\Generated_Source\PSoC4/UART_Out.c **** #endif  /* UART_Out_RX_ENABLED || UART_Out_HD_ENABLED*/
 883:.\Generated_Source\PSoC4/UART_Out.c **** 
 884:.\Generated_Source\PSoC4/UART_Out.c **** 
 885:.\Generated_Source\PSoC4/UART_Out.c **** #if( (UART_Out_TX_ENABLED) || (UART_Out_HD_ENABLED) )
 886:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SetTxInterruptMode
 888:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC4/UART_Out.c ****     *
 890:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 891:.\Generated_Source\PSoC4/UART_Out.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC4/UART_Out.c ****     *  interrupt.
 893:.\Generated_Source\PSoC4/UART_Out.c ****     *
 894:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 895:.\Generated_Source\PSoC4/UART_Out.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC4/UART_Out.c ****     *
 901:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 902:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 903:.\Generated_Source\PSoC4/UART_Out.c ****     *
 904:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
 905:.\Generated_Source\PSoC4/UART_Out.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC4/UART_Out.c ****     *
 907:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC4/UART_Out.c ****     {
 666              		.loc 1 909 0
 667              		.cfi_startproc
 668              	.LVL33:
 910:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXSTATUS_MASK_REG = intSrc;
 669              		.loc 1 910 0
 670 0000 014B     		ldr	r3, .L51
 911:.\Generated_Source\PSoC4/UART_Out.c ****     }
 671              		.loc 1 911 0
 672              		@ sp needed
 910:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXSTATUS_MASK_REG = intSrc;
 673              		.loc 1 910 0
 674 0002 1870     		strb	r0, [r3]
 675              		.loc 1 911 0
 676 0004 7047     		bx	lr
 677              	.L52:
 678 0006 C046     		.align	2
 679              	.L51:
 680 0008 81000F40 		.word	1074724993
 681              		.cfi_endproc
 682              	.LFE16:
 683              		.size	UART_Out_SetTxInterruptMode, .-UART_Out_SetTxInterruptMode
 684              		.section	.text.UART_Out_WriteTxData,"ax",%progbits
 685              		.align	2
 686              		.global	UART_Out_WriteTxData
 687              		.code	16
 688              		.thumb_func
 689              		.type	UART_Out_WriteTxData, %function
 690              	UART_Out_WriteTxData:
 691              	.LFB17:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 30


 912:.\Generated_Source\PSoC4/UART_Out.c **** 
 913:.\Generated_Source\PSoC4/UART_Out.c **** 
 914:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_WriteTxData
 916:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC4/UART_Out.c ****     *
 918:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 919:.\Generated_Source\PSoC4/UART_Out.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC4/UART_Out.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC4/UART_Out.c ****     *  separately.
 922:.\Generated_Source\PSoC4/UART_Out.c ****     *
 923:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 924:.\Generated_Source\PSoC4/UART_Out.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC4/UART_Out.c ****     *
 926:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 927:.\Generated_Source\PSoC4/UART_Out.c ****     * None.
 928:.\Generated_Source\PSoC4/UART_Out.c ****     *
 929:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
 930:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC4/UART_Out.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC4/UART_Out.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC4/UART_Out.c ****     *    initialized.
 937:.\Generated_Source\PSoC4/UART_Out.c ****     *
 938:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
 939:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
 940:.\Generated_Source\PSoC4/UART_Out.c ****     *
 941:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC4/UART_Out.c ****     {
 692              		.loc 1 943 0
 693              		.cfi_startproc
 694              	.LVL34:
 944:.\Generated_Source\PSoC4/UART_Out.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_initVar != 0u)
 695              		.loc 1 945 0
 696 0000 034B     		ldr	r3, .L58
 697 0002 1B78     		ldrb	r3, [r3]
 698 0004 002B     		cmp	r3, #0
 699 0006 01D0     		beq	.L53
 946:.\Generated_Source\PSoC4/UART_Out.c ****         {
 947:.\Generated_Source\PSoC4/UART_Out.c ****         #if (UART_Out_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC4/UART_Out.c **** 
 949:.\Generated_Source\PSoC4/UART_Out.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_DisableTxInt();
 951:.\Generated_Source\PSoC4/UART_Out.c **** 
 952:.\Generated_Source\PSoC4/UART_Out.c ****             if( (UART_Out_txBufferRead == UART_Out_txBufferWrite) &&
 953:.\Generated_Source\PSoC4/UART_Out.c ****                 ((UART_Out_TXSTATUS_REG & UART_Out_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC4/UART_Out.c ****             {
 955:.\Generated_Source\PSoC4/UART_Out.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC4/UART_Out.c ****             }
 958:.\Generated_Source\PSoC4/UART_Out.c ****             else
 959:.\Generated_Source\PSoC4/UART_Out.c ****             {
 960:.\Generated_Source\PSoC4/UART_Out.c ****                 if(UART_Out_txBufferWrite >= UART_Out_TX_BUFFER_SIZE)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 31


 961:.\Generated_Source\PSoC4/UART_Out.c ****                 {
 962:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC4/UART_Out.c ****                 }
 964:.\Generated_Source\PSoC4/UART_Out.c **** 
 965:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_txBuffer[UART_Out_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC4/UART_Out.c **** 
 967:.\Generated_Source\PSoC4/UART_Out.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_txBufferWrite++;
 969:.\Generated_Source\PSoC4/UART_Out.c ****             }
 970:.\Generated_Source\PSoC4/UART_Out.c **** 
 971:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_EnableTxInt();
 972:.\Generated_Source\PSoC4/UART_Out.c **** 
 973:.\Generated_Source\PSoC4/UART_Out.c ****         #else
 974:.\Generated_Source\PSoC4/UART_Out.c **** 
 975:.\Generated_Source\PSoC4/UART_Out.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXDATA_REG = txDataByte;
 700              		.loc 1 976 0
 701 0008 024B     		ldr	r3, .L58+4
 702 000a 1870     		strb	r0, [r3]
 703              	.L53:
 977:.\Generated_Source\PSoC4/UART_Out.c **** 
 978:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /*(UART_Out_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC4/UART_Out.c ****         }
 980:.\Generated_Source\PSoC4/UART_Out.c ****     }
 704              		.loc 1 980 0
 705              		@ sp needed
 706 000c 7047     		bx	lr
 707              	.L59:
 708 000e C046     		.align	2
 709              	.L58:
 710 0010 00000000 		.word	.LANCHOR0
 711 0014 41000F40 		.word	1074724929
 712              		.cfi_endproc
 713              	.LFE17:
 714              		.size	UART_Out_WriteTxData, .-UART_Out_WriteTxData
 715              		.section	.text.UART_Out_ReadTxStatus,"ax",%progbits
 716              		.align	2
 717              		.global	UART_Out_ReadTxStatus
 718              		.code	16
 719              		.thumb_func
 720              		.type	UART_Out_ReadTxStatus, %function
 721              	UART_Out_ReadTxStatus:
 722              	.LFB18:
 981:.\Generated_Source\PSoC4/UART_Out.c **** 
 982:.\Generated_Source\PSoC4/UART_Out.c **** 
 983:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_ReadTxStatus
 985:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC4/UART_Out.c ****     *
 987:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
 988:.\Generated_Source\PSoC4/UART_Out.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC4/UART_Out.c ****     *
 990:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
 991:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
 992:.\Generated_Source\PSoC4/UART_Out.c ****     *
 993:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
 994:.\Generated_Source\PSoC4/UART_Out.c ****     *  Contents of the status register
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 32


 995:.\Generated_Source\PSoC4/UART_Out.c ****     *
 996:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
 997:.\Generated_Source\PSoC4/UART_Out.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC4/UART_Out.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC4/UART_Out.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC4/UART_Out.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC4/UART_Out.c ****     *
1002:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC4/UART_Out.c ****     {
 723              		.loc 1 1004 0
 724              		.cfi_startproc
1005:.\Generated_Source\PSoC4/UART_Out.c ****         return(UART_Out_TXSTATUS_REG);
 725              		.loc 1 1005 0
 726 0000 014B     		ldr	r3, .L61
1006:.\Generated_Source\PSoC4/UART_Out.c ****     }
 727              		.loc 1 1006 0
 728              		@ sp needed
1005:.\Generated_Source\PSoC4/UART_Out.c ****         return(UART_Out_TXSTATUS_REG);
 729              		.loc 1 1005 0
 730 0002 1878     		ldrb	r0, [r3]
 731 0004 C0B2     		uxtb	r0, r0
 732              		.loc 1 1006 0
 733 0006 7047     		bx	lr
 734              	.L62:
 735              		.align	2
 736              	.L61:
 737 0008 61000F40 		.word	1074724961
 738              		.cfi_endproc
 739              	.LFE18:
 740              		.size	UART_Out_ReadTxStatus, .-UART_Out_ReadTxStatus
 741              		.section	.text.UART_Out_PutChar,"ax",%progbits
 742              		.align	2
 743              		.global	UART_Out_PutChar
 744              		.code	16
 745              		.thumb_func
 746              		.type	UART_Out_PutChar, %function
 747              	UART_Out_PutChar:
 748              	.LFB19:
1007:.\Generated_Source\PSoC4/UART_Out.c **** 
1008:.\Generated_Source\PSoC4/UART_Out.c **** 
1009:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_PutChar
1011:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/UART_Out.c ****     *
1013:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1014:.\Generated_Source\PSoC4/UART_Out.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC4/UART_Out.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC4/UART_Out.c ****     *  hold the data.
1017:.\Generated_Source\PSoC4/UART_Out.c ****     *
1018:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1019:.\Generated_Source\PSoC4/UART_Out.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC4/UART_Out.c ****     *
1021:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1022:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1023:.\Generated_Source\PSoC4/UART_Out.c ****     *
1024:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 33


1025:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC4/UART_Out.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC4/UART_Out.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC4/UART_Out.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC4/UART_Out.c ****     *     initialized.
1033:.\Generated_Source\PSoC4/UART_Out.c ****     *
1034:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1035:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1036:.\Generated_Source\PSoC4/UART_Out.c ****     *
1037:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
1038:.\Generated_Source\PSoC4/UART_Out.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC4/UART_Out.c ****     *
1040:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC4/UART_Out.c ****     {
 749              		.loc 1 1042 0
 750              		.cfi_startproc
 751              	.LVL35:
1043:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC4/UART_Out.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC4/UART_Out.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC4/UART_Out.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC4/UART_Out.c ****         */
1048:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC4/UART_Out.c **** 
1051:.\Generated_Source\PSoC4/UART_Out.c ****         do
1052:.\Generated_Source\PSoC4/UART_Out.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC4/UART_Out.c **** 
1054:.\Generated_Source\PSoC4/UART_Out.c ****         #if ((UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC4/UART_Out.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_DisableTxInt();
1057:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC4/UART_Out.c **** 
1059:.\Generated_Source\PSoC4/UART_Out.c ****             locTxBufferWrite = UART_Out_txBufferWrite;
1060:.\Generated_Source\PSoC4/UART_Out.c ****             locTxBufferRead  = UART_Out_txBufferRead;
1061:.\Generated_Source\PSoC4/UART_Out.c **** 
1062:.\Generated_Source\PSoC4/UART_Out.c ****         #if ((UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC4/UART_Out.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_EnableTxInt();
1065:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC4/UART_Out.c ****         }
1067:.\Generated_Source\PSoC4/UART_Out.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC4/UART_Out.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC4/UART_Out.c ****                                 (uint8)(UART_Out_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC4/UART_Out.c **** 
1071:.\Generated_Source\PSoC4/UART_Out.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC4/UART_Out.c ****             ((UART_Out_TXSTATUS_REG & UART_Out_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC4/UART_Out.c ****         {
1074:.\Generated_Source\PSoC4/UART_Out.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC4/UART_Out.c ****         }
1077:.\Generated_Source\PSoC4/UART_Out.c ****         else
1078:.\Generated_Source\PSoC4/UART_Out.c ****         {
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 34


1079:.\Generated_Source\PSoC4/UART_Out.c ****             if(locTxBufferWrite >= UART_Out_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC4/UART_Out.c ****             {
1081:.\Generated_Source\PSoC4/UART_Out.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC4/UART_Out.c ****             }
1083:.\Generated_Source\PSoC4/UART_Out.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC4/UART_Out.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC4/UART_Out.c **** 
1087:.\Generated_Source\PSoC4/UART_Out.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC4/UART_Out.c ****         #if ((UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_DisableTxInt();
1090:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC4/UART_Out.c **** 
1092:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC4/UART_Out.c **** 
1094:.\Generated_Source\PSoC4/UART_Out.c ****         #if ((UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_EnableTxInt();
1096:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* (UART_Out_TX_BUFFER_SIZE > UART_Out_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC4/UART_Out.c **** 
1098:.\Generated_Source\PSoC4/UART_Out.c ****             if(0u != (UART_Out_TXSTATUS_REG & UART_Out_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC4/UART_Out.c ****             {
1100:.\Generated_Source\PSoC4/UART_Out.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_SetPendingTxInt();
1102:.\Generated_Source\PSoC4/UART_Out.c ****             }
1103:.\Generated_Source\PSoC4/UART_Out.c ****         }
1104:.\Generated_Source\PSoC4/UART_Out.c **** 
1105:.\Generated_Source\PSoC4/UART_Out.c ****     #else
1106:.\Generated_Source\PSoC4/UART_Out.c **** 
1107:.\Generated_Source\PSoC4/UART_Out.c ****         while((UART_Out_TXSTATUS_REG & UART_Out_TX_STS_FIFO_FULL) != 0u)
 752              		.loc 1 1107 0
 753 0000 0422     		mov	r2, #4
 754 0002 0349     		ldr	r1, .L66
 755              	.L64:
 756              		.loc 1 1107 0 is_stmt 0 discriminator 1
 757 0004 0B78     		ldrb	r3, [r1]
 758 0006 1A42     		tst	r2, r3
 759 0008 FCD1     		bne	.L64
1108:.\Generated_Source\PSoC4/UART_Out.c ****         {
1109:.\Generated_Source\PSoC4/UART_Out.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC4/UART_Out.c ****         }
1111:.\Generated_Source\PSoC4/UART_Out.c **** 
1112:.\Generated_Source\PSoC4/UART_Out.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_REG = txDataByte;
 760              		.loc 1 1113 0 is_stmt 1
 761 000a 024B     		ldr	r3, .L66+4
1114:.\Generated_Source\PSoC4/UART_Out.c **** 
1115:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* UART_Out_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC4/UART_Out.c ****     }
 762              		.loc 1 1116 0
 763              		@ sp needed
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 764              		.loc 1 1113 0
 765 000c 1870     		strb	r0, [r3]
 766              		.loc 1 1116 0
 767 000e 7047     		bx	lr
 768              	.L67:
 769              		.align	2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 35


 770              	.L66:
 771 0010 61000F40 		.word	1074724961
 772 0014 41000F40 		.word	1074724929
 773              		.cfi_endproc
 774              	.LFE19:
 775              		.size	UART_Out_PutChar, .-UART_Out_PutChar
 776              		.section	.text.UART_Out_PutString,"ax",%progbits
 777              		.align	2
 778              		.global	UART_Out_PutString
 779              		.code	16
 780              		.thumb_func
 781              		.type	UART_Out_PutString, %function
 782              	UART_Out_PutString:
 783              	.LFB20:
1117:.\Generated_Source\PSoC4/UART_Out.c **** 
1118:.\Generated_Source\PSoC4/UART_Out.c **** 
1119:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_PutString
1121:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC4/UART_Out.c ****     *
1123:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1124:.\Generated_Source\PSoC4/UART_Out.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC4/UART_Out.c ****     *
1126:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1127:.\Generated_Source\PSoC4/UART_Out.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC4/UART_Out.c ****     *
1129:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1130:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1131:.\Generated_Source\PSoC4/UART_Out.c ****     *
1132:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
1133:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC4/UART_Out.c ****     *     initialized.
1135:.\Generated_Source\PSoC4/UART_Out.c ****     *
1136:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1137:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1138:.\Generated_Source\PSoC4/UART_Out.c ****     *
1139:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
1140:.\Generated_Source\PSoC4/UART_Out.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC4/UART_Out.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC4/UART_Out.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC4/UART_Out.c ****     *
1144:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC4/UART_Out.c ****     {
 784              		.loc 1 1146 0
 785              		.cfi_startproc
 786              	.LVL36:
 787 0000 70B5     		push	{r4, r5, r6, lr}
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 4, -16
 790              		.cfi_offset 5, -12
 791              		.cfi_offset 6, -8
 792              		.cfi_offset 14, -4
1147:.\Generated_Source\PSoC4/UART_Out.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC4/UART_Out.c **** 
1149:.\Generated_Source\PSoC4/UART_Out.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_initVar != 0u)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 36


 793              		.loc 1 1150 0
 794 0002 0A4B     		ldr	r3, .L78
 795 0004 1B78     		ldrb	r3, [r3]
 796 0006 002B     		cmp	r3, #0
 797 0008 0FD0     		beq	.L68
1151:.\Generated_Source\PSoC4/UART_Out.c ****         {
1152:.\Generated_Source\PSoC4/UART_Out.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC4/UART_Out.c ****             while(string[bufIndex] != (char8) 0)
 798              		.loc 1 1153 0
 799 000a 0578     		ldrb	r5, [r0]
 800 000c 002D     		cmp	r5, #0
 801 000e 0CD0     		beq	.L68
 802 0010 0024     		mov	r4, #0
 803              	.LBB36:
 804              	.LBB37:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 805              		.loc 1 1107 0
 806 0012 0422     		mov	r2, #4
 807 0014 0649     		ldr	r1, .L78+4
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 808              		.loc 1 1113 0
 809 0016 074E     		ldr	r6, .L78+8
 810              	.LVL37:
 811              	.L71:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 812              		.loc 1 1107 0
 813 0018 0B78     		ldrb	r3, [r1]
 814 001a 1A42     		tst	r2, r3
 815 001c FCD1     		bne	.L71
 816              	.LBE37:
 817              	.LBE36:
1154:.\Generated_Source\PSoC4/UART_Out.c ****             {
1155:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_PutChar((uint8)string[bufIndex]);
1156:.\Generated_Source\PSoC4/UART_Out.c ****                 bufIndex++;
 818              		.loc 1 1156 0
 819 001e 0134     		add	r4, r4, #1
 820              	.LBB39:
 821              	.LBB38:
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 822              		.loc 1 1113 0
 823 0020 3570     		strb	r5, [r6]
 824              	.LBE38:
 825              	.LBE39:
 826              		.loc 1 1156 0
 827 0022 A4B2     		uxth	r4, r4
 828              	.LVL38:
1153:.\Generated_Source\PSoC4/UART_Out.c ****             {
 829              		.loc 1 1153 0
 830 0024 055D     		ldrb	r5, [r0, r4]
 831 0026 002D     		cmp	r5, #0
 832 0028 F6D1     		bne	.L71
 833              	.LVL39:
 834              	.L68:
1157:.\Generated_Source\PSoC4/UART_Out.c ****             }
1158:.\Generated_Source\PSoC4/UART_Out.c ****         }
1159:.\Generated_Source\PSoC4/UART_Out.c ****     }
 835              		.loc 1 1159 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 37


 836              		@ sp needed
 837 002a 70BD     		pop	{r4, r5, r6, pc}
 838              	.L79:
 839              		.align	2
 840              	.L78:
 841 002c 00000000 		.word	.LANCHOR0
 842 0030 61000F40 		.word	1074724961
 843 0034 41000F40 		.word	1074724929
 844              		.cfi_endproc
 845              	.LFE20:
 846              		.size	UART_Out_PutString, .-UART_Out_PutString
 847              		.section	.text.UART_Out_PutArray,"ax",%progbits
 848              		.align	2
 849              		.global	UART_Out_PutArray
 850              		.code	16
 851              		.thumb_func
 852              		.type	UART_Out_PutArray, %function
 853              	UART_Out_PutArray:
 854              	.LFB21:
1160:.\Generated_Source\PSoC4/UART_Out.c **** 
1161:.\Generated_Source\PSoC4/UART_Out.c **** 
1162:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_PutArray
1164:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC4/UART_Out.c ****     *
1166:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1167:.\Generated_Source\PSoC4/UART_Out.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC4/UART_Out.c ****     *  transmission.
1169:.\Generated_Source\PSoC4/UART_Out.c ****     *
1170:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1171:.\Generated_Source\PSoC4/UART_Out.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC4/UART_Out.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC4/UART_Out.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC4/UART_Out.c ****     *
1175:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1176:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1177:.\Generated_Source\PSoC4/UART_Out.c ****     *
1178:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
1179:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC4/UART_Out.c ****     *     initialized.
1181:.\Generated_Source\PSoC4/UART_Out.c ****     *
1182:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1183:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1184:.\Generated_Source\PSoC4/UART_Out.c ****     *
1185:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
1186:.\Generated_Source\PSoC4/UART_Out.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC4/UART_Out.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC4/UART_Out.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC4/UART_Out.c ****     *
1190:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC4/UART_Out.c ****                                                                     
1193:.\Generated_Source\PSoC4/UART_Out.c ****     {
 855              		.loc 1 1193 0
 856              		.cfi_startproc
 857              	.LVL40:
 858 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 38


 859              		.cfi_def_cfa_offset 16
 860              		.cfi_offset 4, -16
 861              		.cfi_offset 5, -12
 862              		.cfi_offset 6, -8
 863              		.cfi_offset 14, -4
1194:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC4/UART_Out.c **** 
1196:.\Generated_Source\PSoC4/UART_Out.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_initVar != 0u)
 864              		.loc 1 1197 0
 865 0002 0B4B     		ldr	r3, .L90
 866 0004 1B78     		ldrb	r3, [r3]
 867 0006 002B     		cmp	r3, #0
 868 0008 10D0     		beq	.L80
1198:.\Generated_Source\PSoC4/UART_Out.c ****         {
1199:.\Generated_Source\PSoC4/UART_Out.c ****             while(bufIndex < byteCount)
 869              		.loc 1 1199 0
 870 000a 0029     		cmp	r1, #0
 871 000c 0ED0     		beq	.L80
 872              	.LBB40:
 873              	.LBB41:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 874              		.loc 1 1107 0
 875 000e 0422     		mov	r2, #4
 876 0010 4D1E     		sub	r5, r1, #1
 877 0012 EDB2     		uxtb	r5, r5
 878 0014 0135     		add	r5, r5, #1
 879 0016 0749     		ldr	r1, .L90+4
 880              	.LVL41:
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 881              		.loc 1 1113 0
 882 0018 074E     		ldr	r6, .L90+8
 883 001a 4519     		add	r5, r0, r5
 884              	.LVL42:
 885              	.L84:
 886              	.LBE41:
 887              	.LBE40:
1200:.\Generated_Source\PSoC4/UART_Out.c ****             {
1201:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_PutChar(string[bufIndex]);
 888              		.loc 1 1201 0
 889 001c 0478     		ldrb	r4, [r0]
 890              	.LVL43:
 891              	.L83:
 892              	.LBB43:
 893              	.LBB42:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 894              		.loc 1 1107 0
 895 001e 0B78     		ldrb	r3, [r1]
 896 0020 1A42     		tst	r2, r3
 897 0022 FCD1     		bne	.L83
 898 0024 0130     		add	r0, r0, #1
 899              	.LVL44:
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 900              		.loc 1 1113 0
 901 0026 3470     		strb	r4, [r6]
 902              	.LBE42:
 903              	.LBE43:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 39


1199:.\Generated_Source\PSoC4/UART_Out.c ****             {
 904              		.loc 1 1199 0
 905 0028 A842     		cmp	r0, r5
 906 002a F7D1     		bne	.L84
 907              	.LVL45:
 908              	.L80:
1202:.\Generated_Source\PSoC4/UART_Out.c ****                 bufIndex++;
1203:.\Generated_Source\PSoC4/UART_Out.c ****             }
1204:.\Generated_Source\PSoC4/UART_Out.c ****         }
1205:.\Generated_Source\PSoC4/UART_Out.c ****     }
 909              		.loc 1 1205 0
 910              		@ sp needed
 911 002c 70BD     		pop	{r4, r5, r6, pc}
 912              	.L91:
 913 002e C046     		.align	2
 914              	.L90:
 915 0030 00000000 		.word	.LANCHOR0
 916 0034 61000F40 		.word	1074724961
 917 0038 41000F40 		.word	1074724929
 918              		.cfi_endproc
 919              	.LFE21:
 920              		.size	UART_Out_PutArray, .-UART_Out_PutArray
 921              		.section	.text.UART_Out_PutCRLF,"ax",%progbits
 922              		.align	2
 923              		.global	UART_Out_PutCRLF
 924              		.code	16
 925              		.thumb_func
 926              		.type	UART_Out_PutCRLF, %function
 927              	UART_Out_PutCRLF:
 928              	.LFB22:
1206:.\Generated_Source\PSoC4/UART_Out.c **** 
1207:.\Generated_Source\PSoC4/UART_Out.c **** 
1208:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_PutCRLF
1210:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC4/UART_Out.c ****     *
1212:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1213:.\Generated_Source\PSoC4/UART_Out.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC4/UART_Out.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC4/UART_Out.c ****     *
1216:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1217:.\Generated_Source\PSoC4/UART_Out.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC4/UART_Out.c ****     *
1219:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1220:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1221:.\Generated_Source\PSoC4/UART_Out.c ****     *
1222:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
1223:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC4/UART_Out.c ****     *     initialized.
1225:.\Generated_Source\PSoC4/UART_Out.c ****     *
1226:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1227:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1228:.\Generated_Source\PSoC4/UART_Out.c ****     *
1229:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC4/UART_Out.c ****     {
 929              		.loc 1 1231 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 40


 930              		.cfi_startproc
 931              	.LVL46:
1232:.\Generated_Source\PSoC4/UART_Out.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_initVar != 0u)
 932              		.loc 1 1233 0
 933 0000 0D4B     		ldr	r3, .L104
 934 0002 1B78     		ldrb	r3, [r3]
 935 0004 002B     		cmp	r3, #0
 936 0006 16D0     		beq	.L92
 937              	.LBB44:
 938              	.LBB45:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 939              		.loc 1 1107 0
 940 0008 0422     		mov	r2, #4
 941 000a 0C49     		ldr	r1, .L104+4
 942              	.L99:
 943 000c 0B78     		ldrb	r3, [r1]
 944 000e 1A42     		tst	r2, r3
 945 0010 FCD1     		bne	.L99
 946              	.LBE45:
 947              	.LBE44:
 948              	.LBB48:
 949              	.LBB49:
 950 0012 0422     		mov	r2, #4
 951              	.LBE49:
 952              	.LBE48:
 953              	.LBB53:
 954              	.LBB46:
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 955              		.loc 1 1113 0
 956 0014 0A4B     		ldr	r3, .L104+8
 957              	.LBE46:
 958              	.LBE53:
 959              	.LBB54:
 960              	.LBB50:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 961              		.loc 1 1107 0
 962 0016 0949     		ldr	r1, .L104+4
 963              	.LBE50:
 964              	.LBE54:
 965              	.LBB55:
 966              	.LBB47:
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 967              		.loc 1 1113 0
 968 0018 1870     		strb	r0, [r3]
 969              	.LVL47:
 970              	.L95:
 971              	.LBE47:
 972              	.LBE55:
 973              	.LBB56:
 974              	.LBB51:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 975              		.loc 1 1107 0
 976 001a 0B78     		ldrb	r3, [r1]
 977 001c 1A42     		tst	r2, r3
 978 001e FCD1     		bne	.L95
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 41


 979              		.loc 1 1113 0
 980 0020 0D22     		mov	r2, #13
 981 0022 074B     		ldr	r3, .L104+8
 982              	.LBE51:
 983              	.LBE56:
 984              	.LBB57:
 985              	.LBB58:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 986              		.loc 1 1107 0
 987 0024 0549     		ldr	r1, .L104+4
 988              	.LBE58:
 989              	.LBE57:
 990              	.LBB60:
 991              	.LBB52:
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 992              		.loc 1 1113 0
 993 0026 1A70     		strb	r2, [r3]
 994              	.LVL48:
 995              	.LBE52:
 996              	.LBE60:
 997              	.LBB61:
 998              	.LBB59:
1107:.\Generated_Source\PSoC4/UART_Out.c ****         {
 999              		.loc 1 1107 0
 1000 0028 093A     		sub	r2, r2, #9
 1001              	.L96:
 1002 002a 0B78     		ldrb	r3, [r1]
 1003 002c 1A42     		tst	r2, r3
 1004 002e FCD1     		bne	.L96
1113:.\Generated_Source\PSoC4/UART_Out.c **** 
 1005              		.loc 1 1113 0
 1006 0030 0A22     		mov	r2, #10
 1007 0032 034B     		ldr	r3, .L104+8
 1008 0034 1A70     		strb	r2, [r3]
 1009              	.LVL49:
 1010              	.L92:
 1011              	.LBE59:
 1012              	.LBE61:
1234:.\Generated_Source\PSoC4/UART_Out.c ****         {
1235:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_PutChar(txDataByte);
1236:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_PutChar(0x0Du);
1237:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_PutChar(0x0Au);
1238:.\Generated_Source\PSoC4/UART_Out.c ****         }
1239:.\Generated_Source\PSoC4/UART_Out.c ****     }
 1013              		.loc 1 1239 0
 1014              		@ sp needed
 1015 0036 7047     		bx	lr
 1016              	.L105:
 1017              		.align	2
 1018              	.L104:
 1019 0038 00000000 		.word	.LANCHOR0
 1020 003c 61000F40 		.word	1074724961
 1021 0040 41000F40 		.word	1074724929
 1022              		.cfi_endproc
 1023              	.LFE22:
 1024              		.size	UART_Out_PutCRLF, .-UART_Out_PutCRLF
 1025              		.section	.text.UART_Out_GetTxBufferSize,"ax",%progbits
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 42


 1026              		.align	2
 1027              		.global	UART_Out_GetTxBufferSize
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	UART_Out_GetTxBufferSize, %function
 1031              	UART_Out_GetTxBufferSize:
 1032              	.LFB23:
1240:.\Generated_Source\PSoC4/UART_Out.c **** 
1241:.\Generated_Source\PSoC4/UART_Out.c **** 
1242:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_GetTxBufferSize
1244:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC4/UART_Out.c ****     *
1246:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1247:.\Generated_Source\PSoC4/UART_Out.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC4/UART_Out.c ****     *  transmitted.
1249:.\Generated_Source\PSoC4/UART_Out.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC4/UART_Out.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC4/UART_Out.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC4/UART_Out.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC4/UART_Out.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC4/UART_Out.c ****     *
1255:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1256:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1257:.\Generated_Source\PSoC4/UART_Out.c ****     *
1258:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1259:.\Generated_Source\PSoC4/UART_Out.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC4/UART_Out.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC4/UART_Out.c ****     *
1262:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
1263:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC4/UART_Out.c ****     *
1266:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1267:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1268:.\Generated_Source\PSoC4/UART_Out.c ****     *
1269:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
1270:.\Generated_Source\PSoC4/UART_Out.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC4/UART_Out.c ****     *
1272:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART_Out.c ****     uint8 UART_Out_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC4/UART_Out.c ****                                                             
1275:.\Generated_Source\PSoC4/UART_Out.c ****     {
 1033              		.loc 1 1275 0
 1034              		.cfi_startproc
1276:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 size;
1277:.\Generated_Source\PSoC4/UART_Out.c **** 
1278:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC4/UART_Out.c **** 
1280:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableTxInt();
1282:.\Generated_Source\PSoC4/UART_Out.c **** 
1283:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_txBufferRead == UART_Out_txBufferWrite)
1284:.\Generated_Source\PSoC4/UART_Out.c ****         {
1285:.\Generated_Source\PSoC4/UART_Out.c ****             size = 0u;
1286:.\Generated_Source\PSoC4/UART_Out.c ****         }
1287:.\Generated_Source\PSoC4/UART_Out.c ****         else if(UART_Out_txBufferRead < UART_Out_txBufferWrite)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 43


1288:.\Generated_Source\PSoC4/UART_Out.c ****         {
1289:.\Generated_Source\PSoC4/UART_Out.c ****             size = (UART_Out_txBufferWrite - UART_Out_txBufferRead);
1290:.\Generated_Source\PSoC4/UART_Out.c ****         }
1291:.\Generated_Source\PSoC4/UART_Out.c ****         else
1292:.\Generated_Source\PSoC4/UART_Out.c ****         {
1293:.\Generated_Source\PSoC4/UART_Out.c ****             size = (UART_Out_TX_BUFFER_SIZE - UART_Out_txBufferRead) +
1294:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_txBufferWrite;
1295:.\Generated_Source\PSoC4/UART_Out.c ****         }
1296:.\Generated_Source\PSoC4/UART_Out.c **** 
1297:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableTxInt();
1298:.\Generated_Source\PSoC4/UART_Out.c **** 
1299:.\Generated_Source\PSoC4/UART_Out.c ****     #else
1300:.\Generated_Source\PSoC4/UART_Out.c **** 
1301:.\Generated_Source\PSoC4/UART_Out.c ****         size = UART_Out_TXSTATUS_REG;
 1035              		.loc 1 1301 0
 1036 0000 064B     		ldr	r3, .L110
1302:.\Generated_Source\PSoC4/UART_Out.c **** 
1303:.\Generated_Source\PSoC4/UART_Out.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC4/UART_Out.c ****         if((size & UART_Out_TX_STS_FIFO_FULL) != 0u)
1305:.\Generated_Source\PSoC4/UART_Out.c ****         {
1306:.\Generated_Source\PSoC4/UART_Out.c ****             size = UART_Out_FIFO_LENGTH;
 1037              		.loc 1 1306 0
 1038 0002 0420     		mov	r0, #4
1301:.\Generated_Source\PSoC4/UART_Out.c **** 
 1039              		.loc 1 1301 0
 1040 0004 1B78     		ldrb	r3, [r3]
 1041 0006 DBB2     		uxtb	r3, r3
 1042              	.LVL50:
1304:.\Generated_Source\PSoC4/UART_Out.c ****         {
 1043              		.loc 1 1304 0
 1044 0008 5A07     		lsl	r2, r3, #29
 1045 000a 00D5     		bpl	.L109
 1046              	.LVL51:
 1047              	.L107:
1307:.\Generated_Source\PSoC4/UART_Out.c ****         }
1308:.\Generated_Source\PSoC4/UART_Out.c ****         else if((size & UART_Out_TX_STS_FIFO_EMPTY) != 0u)
1309:.\Generated_Source\PSoC4/UART_Out.c ****         {
1310:.\Generated_Source\PSoC4/UART_Out.c ****             size = 0u;
1311:.\Generated_Source\PSoC4/UART_Out.c ****         }
1312:.\Generated_Source\PSoC4/UART_Out.c ****         else
1313:.\Generated_Source\PSoC4/UART_Out.c ****         {
1314:.\Generated_Source\PSoC4/UART_Out.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC4/UART_Out.c ****             size = 1u;
1316:.\Generated_Source\PSoC4/UART_Out.c ****         }
1317:.\Generated_Source\PSoC4/UART_Out.c **** 
1318:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC4/UART_Out.c **** 
1320:.\Generated_Source\PSoC4/UART_Out.c ****     return(size);
1321:.\Generated_Source\PSoC4/UART_Out.c ****     }
 1048              		.loc 1 1321 0
 1049              		@ sp needed
 1050 000c 7047     		bx	lr
 1051              	.LVL52:
 1052              	.L109:
1308:.\Generated_Source\PSoC4/UART_Out.c ****         {
 1053              		.loc 1 1308 0
 1054 000e 0120     		mov	r0, #1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 44


 1055 0010 5B08     		lsr	r3, r3, #1
 1056              	.LVL53:
 1057 0012 4340     		eor	r3, r0
 1058 0014 0120     		mov	r0, #1
 1059 0016 1840     		and	r0, r3
 1060 0018 F8E7     		b	.L107
 1061              	.L111:
 1062 001a C046     		.align	2
 1063              	.L110:
 1064 001c 61000F40 		.word	1074724961
 1065              		.cfi_endproc
 1066              	.LFE23:
 1067              		.size	UART_Out_GetTxBufferSize, .-UART_Out_GetTxBufferSize
 1068              		.section	.text.UART_Out_ClearTxBuffer,"ax",%progbits
 1069              		.align	2
 1070              		.global	UART_Out_ClearTxBuffer
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	UART_Out_ClearTxBuffer, %function
 1074              	UART_Out_ClearTxBuffer:
 1075              	.LFB24:
1322:.\Generated_Source\PSoC4/UART_Out.c **** 
1323:.\Generated_Source\PSoC4/UART_Out.c **** 
1324:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_ClearTxBuffer
1326:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC4/UART_Out.c ****     *
1328:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1329:.\Generated_Source\PSoC4/UART_Out.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC4/UART_Out.c ****     *
1331:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1332:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1333:.\Generated_Source\PSoC4/UART_Out.c ****     *
1334:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1335:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1336:.\Generated_Source\PSoC4/UART_Out.c ****     *
1337:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
1338:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC4/UART_Out.c ****     *
1341:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1342:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1343:.\Generated_Source\PSoC4/UART_Out.c ****     *
1344:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
1345:.\Generated_Source\PSoC4/UART_Out.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC4/UART_Out.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC4/UART_Out.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC4/UART_Out.c ****     *
1349:.\Generated_Source\PSoC4/UART_Out.c ****     * Side Effects:
1350:.\Generated_Source\PSoC4/UART_Out.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC4/UART_Out.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC4/UART_Out.c ****     *
1353:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC4/UART_Out.c ****     {
 1076              		.loc 1 1355 0
 1077              		.cfi_startproc
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 45


 1078 0000 08B5     		push	{r3, lr}
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 3, -8
 1081              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC4/UART_Out.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC4/UART_Out.c **** 
1358:.\Generated_Source\PSoC4/UART_Out.c ****         enableInterrupts = CyEnterCriticalSection();
 1082              		.loc 1 1358 0
 1083 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1084              	.LVL54:
1359:.\Generated_Source\PSoC4/UART_Out.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_AUX_CTL_REG |= (uint8)  UART_Out_TX_FIFO_CLR;
 1085              		.loc 1 1360 0
 1086 0006 0122     		mov	r2, #1
 1087 0008 054B     		ldr	r3, .L113
1361:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_TX_FIFO_CLR;
1362:.\Generated_Source\PSoC4/UART_Out.c ****         CyExitCriticalSection(enableInterrupts);
1363:.\Generated_Source\PSoC4/UART_Out.c **** 
1364:.\Generated_Source\PSoC4/UART_Out.c ****     #if (UART_Out_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC4/UART_Out.c **** 
1366:.\Generated_Source\PSoC4/UART_Out.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_DisableTxInt();
1368:.\Generated_Source\PSoC4/UART_Out.c **** 
1369:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_txBufferRead = 0u;
1370:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC4/UART_Out.c **** 
1372:.\Generated_Source\PSoC4/UART_Out.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_EnableTxInt();
1374:.\Generated_Source\PSoC4/UART_Out.c **** 
1375:.\Generated_Source\PSoC4/UART_Out.c ****     #endif /* (UART_Out_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC4/UART_Out.c ****     }
 1088              		.loc 1 1376 0
 1089              		@ sp needed
1360:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_TX_FIFO_CLR;
 1090              		.loc 1 1360 0
 1091 000a 1978     		ldrb	r1, [r3]
 1092 000c 0A43     		orr	r2, r1
1361:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_TX_FIFO_CLR;
 1093              		.loc 1 1361 0
 1094 000e 0121     		mov	r1, #1
1360:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_TX_FIFO_CLR;
 1095              		.loc 1 1360 0
 1096 0010 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC4/UART_Out.c ****         UART_Out_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Out_TX_FIFO_CLR;
 1097              		.loc 1 1361 0
 1098 0012 1A78     		ldrb	r2, [r3]
 1099 0014 8A43     		bic	r2, r1
 1100 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC4/UART_Out.c **** 
 1101              		.loc 1 1362 0
 1102 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1103              	.LVL55:
 1104              		.loc 1 1376 0
 1105 001c 08BD     		pop	{r3, pc}
 1106              	.L114:
 1107 001e C046     		.align	2
 1108              	.L113:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 46


 1109 0020 91000F40 		.word	1074725009
 1110              		.cfi_endproc
 1111              	.LFE24:
 1112              		.size	UART_Out_ClearTxBuffer, .-UART_Out_ClearTxBuffer
 1113              		.section	.text.UART_Out_SendBreak,"ax",%progbits
 1114              		.align	2
 1115              		.global	UART_Out_SendBreak
 1116              		.code	16
 1117              		.thumb_func
 1118              		.type	UART_Out_SendBreak, %function
 1119              	UART_Out_SendBreak:
 1120              	.LFB25:
1377:.\Generated_Source\PSoC4/UART_Out.c **** 
1378:.\Generated_Source\PSoC4/UART_Out.c **** 
1379:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SendBreak
1381:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC4/UART_Out.c ****     *
1383:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1384:.\Generated_Source\PSoC4/UART_Out.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC4/UART_Out.c ****     *
1386:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1387:.\Generated_Source\PSoC4/UART_Out.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC4/UART_Out.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC4/UART_Out.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC4/UART_Out.c ****     *       then return.
1394:.\Generated_Source\PSoC4/UART_Out.c ****     *   UART_Out_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC4/UART_Out.c ****     *      UART_Out_SEND_BREAK and UART_Out_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC4/UART_Out.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC4/UART_Out.c ****     *
1398:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1399:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1400:.\Generated_Source\PSoC4/UART_Out.c ****     *
1401:.\Generated_Source\PSoC4/UART_Out.c ****     * Global Variables:
1402:.\Generated_Source\PSoC4/UART_Out.c ****     *  UART_Out_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC4/UART_Out.c ****     *     initialized.
1404:.\Generated_Source\PSoC4/UART_Out.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC4/UART_Out.c ****     *
1406:.\Generated_Source\PSoC4/UART_Out.c ****     * Reentrant:
1407:.\Generated_Source\PSoC4/UART_Out.c ****     *  No.
1408:.\Generated_Source\PSoC4/UART_Out.c ****     *
1409:.\Generated_Source\PSoC4/UART_Out.c ****     * Theory:
1410:.\Generated_Source\PSoC4/UART_Out.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC4/UART_Out.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC4/UART_Out.c ****     *  operation.
1413:.\Generated_Source\PSoC4/UART_Out.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC4/UART_Out.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC4/UART_Out.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC4/UART_Out.c ****     *     complete.
1417:.\Generated_Source\PSoC4/UART_Out.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC4/UART_Out.c ****     *     operation
1419:.\Generated_Source\PSoC4/UART_Out.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC4/UART_Out.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC4/UART_Out.c ****     *         Add your code here to use CPU time
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 47


1422:.\Generated_Source\PSoC4/UART_Out.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC4/UART_Out.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC4/UART_Out.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC4/UART_Out.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC4/UART_Out.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC4/UART_Out.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC4/UART_Out.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC4/UART_Out.c ****     *     When interrupt appear with UART_Out_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC4/UART_Out.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC4/UART_Out.c ****     *
1432:.\Generated_Source\PSoC4/UART_Out.c ****     * Side Effects:
1433:.\Generated_Source\PSoC4/UART_Out.c ****     *  The UART_Out_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC4/UART_Out.c ****     *  break signal.
1435:.\Generated_Source\PSoC4/UART_Out.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC4/UART_Out.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC4/UART_Out.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC4/UART_Out.c ****     *
1439:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC4/UART_Out.c ****     {
 1121              		.loc 1 1441 0
 1122              		.cfi_startproc
 1123              	.LVL56:
 1124 0000 30B5     		push	{r4, r5, lr}
 1125              		.cfi_def_cfa_offset 12
 1126              		.cfi_offset 4, -12
 1127              		.cfi_offset 5, -8
 1128              		.cfi_offset 14, -4
1442:.\Generated_Source\PSoC4/UART_Out.c **** 
1443:.\Generated_Source\PSoC4/UART_Out.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC4/UART_Out.c ****         if(UART_Out_initVar != 0u)
 1129              		.loc 1 1444 0
 1130 0002 154C     		ldr	r4, .L138
 1131 0004 2378     		ldrb	r3, [r4]
 1132 0006 002B     		cmp	r3, #0
 1133 0008 19D0     		beq	.L115
 1134              	.LBB62:
1445:.\Generated_Source\PSoC4/UART_Out.c ****         {
1446:.\Generated_Source\PSoC4/UART_Out.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC4/UART_Out.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC4/UART_Out.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC4/UART_Out.c **** 
1450:.\Generated_Source\PSoC4/UART_Out.c ****         #if(UART_Out_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC4/UART_Out.c **** 
1452:.\Generated_Source\PSoC4/UART_Out.c ****             if( (retMode == UART_Out_SEND_BREAK) ||
1453:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC4/UART_Out.c ****             {
1455:.\Generated_Source\PSoC4/UART_Out.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_WriteControlRegister(UART_Out_ReadControlRegister() |
1457:.\Generated_Source\PSoC4/UART_Out.c ****                                                       UART_Out_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC4/UART_Out.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC4/UART_Out.c **** 
1461:.\Generated_Source\PSoC4/UART_Out.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC4/UART_Out.c ****                 {
1463:.\Generated_Source\PSoC4/UART_Out.c ****                     tmpStat = UART_Out_TXSTATUS_REG;
1464:.\Generated_Source\PSoC4/UART_Out.c ****                 }
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 48


1465:.\Generated_Source\PSoC4/UART_Out.c ****                 while((tmpStat & UART_Out_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC4/UART_Out.c ****             }
1467:.\Generated_Source\PSoC4/UART_Out.c **** 
1468:.\Generated_Source\PSoC4/UART_Out.c ****             if( (retMode == UART_Out_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC4/UART_Out.c ****             {
1471:.\Generated_Source\PSoC4/UART_Out.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC4/UART_Out.c ****                 {
1473:.\Generated_Source\PSoC4/UART_Out.c ****                     tmpStat = UART_Out_TXSTATUS_REG;
1474:.\Generated_Source\PSoC4/UART_Out.c ****                 }
1475:.\Generated_Source\PSoC4/UART_Out.c ****                 while(((uint8)~tmpStat & UART_Out_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC4/UART_Out.c ****             }
1477:.\Generated_Source\PSoC4/UART_Out.c **** 
1478:.\Generated_Source\PSoC4/UART_Out.c ****             if( (retMode == UART_Out_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_REINIT) ||
1480:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC4/UART_Out.c ****             {
1482:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_WriteControlRegister(UART_Out_ReadControlRegister() &
1483:.\Generated_Source\PSoC4/UART_Out.c ****                                               (uint8)~UART_Out_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC4/UART_Out.c ****             }
1485:.\Generated_Source\PSoC4/UART_Out.c **** 
1486:.\Generated_Source\PSoC4/UART_Out.c ****         #else /* UART_Out_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC4/UART_Out.c **** 
1488:.\Generated_Source\PSoC4/UART_Out.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC4/UART_Out.c **** 
1490:.\Generated_Source\PSoC4/UART_Out.c ****             if( (retMode == UART_Out_SEND_BREAK) ||
 1135              		.loc 1 1490 0
 1136 000a 0028     		cmp	r0, #0
 1137 000c 18D1     		bne	.L137
 1138              	.L118:
1491:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC4/UART_Out.c ****             {
1493:.\Generated_Source\PSoC4/UART_Out.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC4/UART_Out.c ****                 #if( (UART_Out_PARITY_TYPE != UART_Out__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC4/UART_Out.c ****                                     (UART_Out_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_WriteControlRegister(UART_Out_ReadControlRegister() |
1497:.\Generated_Source\PSoC4/UART_Out.c ****                                                           UART_Out_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC4/UART_Out.c ****                 #endif /* End UART_Out_PARITY_TYPE != UART_Out__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC4/UART_Out.c **** 
1500:.\Generated_Source\PSoC4/UART_Out.c ****                 #if(UART_Out_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC4/UART_Out.c ****                     txPeriod = UART_Out_TXBITCLKTX_COMPLETE_REG;
 1139              		.loc 1 1501 0
 1140 000e 134B     		ldr	r3, .L138+4
1502:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_TXBITCLKTX_COMPLETE_REG = UART_Out_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC4/UART_Out.c ****                 #else
1504:.\Generated_Source\PSoC4/UART_Out.c ****                     txPeriod = UART_Out_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_TXBITCTR_PERIOD_REG = UART_Out_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC4/UART_Out.c ****                 #endif /* End UART_Out_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC4/UART_Out.c **** 
1508:.\Generated_Source\PSoC4/UART_Out.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_TXDATA_REG = 0u;
1510:.\Generated_Source\PSoC4/UART_Out.c **** 
1511:.\Generated_Source\PSoC4/UART_Out.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC4/UART_Out.c ****                 {
1513:.\Generated_Source\PSoC4/UART_Out.c ****                     tmpStat = UART_Out_TXSTATUS_REG;
 1141              		.loc 1 1513 0
 1142 0010 1349     		ldr	r1, .L138+8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 49


1501:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_TXBITCLKTX_COMPLETE_REG = UART_Out_TXBITCTR_BREAKBITS;
 1143              		.loc 1 1501 0
 1144 0012 1A78     		ldrb	r2, [r3]
 1145 0014 6270     		strb	r2, [r4, #1]
1502:.\Generated_Source\PSoC4/UART_Out.c ****                     UART_Out_TXBITCLKTX_COMPLETE_REG = UART_Out_TXBITCTR_BREAKBITS;
 1146              		.loc 1 1502 0
 1147 0016 6722     		mov	r2, #103
 1148 0018 1A70     		strb	r2, [r3]
1509:.\Generated_Source\PSoC4/UART_Out.c **** 
 1149              		.loc 1 1509 0
 1150 001a 0022     		mov	r2, #0
 1151 001c 114B     		ldr	r3, .L138+12
 1152 001e 1A70     		strb	r2, [r3]
1514:.\Generated_Source\PSoC4/UART_Out.c ****                 }
1515:.\Generated_Source\PSoC4/UART_Out.c ****                 while((tmpStat & UART_Out_TX_STS_FIFO_EMPTY) != 0u);
 1153              		.loc 1 1515 0
 1154 0020 0232     		add	r2, r2, #2
 1155              	.L120:
1513:.\Generated_Source\PSoC4/UART_Out.c ****                 }
 1156              		.loc 1 1513 0 discriminator 1
 1157 0022 0B78     		ldrb	r3, [r1]
 1158              	.LVL57:
 1159              		.loc 1 1515 0 discriminator 1
 1160 0024 1A42     		tst	r2, r3
 1161 0026 FCD1     		bne	.L120
1516:.\Generated_Source\PSoC4/UART_Out.c ****             }
1517:.\Generated_Source\PSoC4/UART_Out.c **** 
1518:.\Generated_Source\PSoC4/UART_Out.c ****             if( (retMode == UART_Out_WAIT_FOR_COMPLETE_REINIT) ||
 1162              		.loc 1 1518 0
 1163 0028 0223     		mov	r3, #2
 1164              	.LVL58:
 1165 002a 021C     		mov	r2, r0
 1166 002c 9A43     		bic	r2, r3
 1167 002e 012A     		cmp	r2, #1
 1168 0030 0AD0     		beq	.L121
 1169              	.L125:
1519:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC4/UART_Out.c ****             {
1521:.\Generated_Source\PSoC4/UART_Out.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC4/UART_Out.c ****                 {
1523:.\Generated_Source\PSoC4/UART_Out.c ****                     tmpStat = UART_Out_TXSTATUS_REG;
1524:.\Generated_Source\PSoC4/UART_Out.c ****                 }
1525:.\Generated_Source\PSoC4/UART_Out.c ****                 while(((uint8)~tmpStat & UART_Out_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC4/UART_Out.c ****             }
1527:.\Generated_Source\PSoC4/UART_Out.c **** 
1528:.\Generated_Source\PSoC4/UART_Out.c ****             if( (retMode == UART_Out_WAIT_FOR_COMPLETE_REINIT) ||
 1170              		.loc 1 1528 0
 1171 0032 0138     		sub	r0, r0, #1
 1172              	.LVL59:
 1173 0034 0228     		cmp	r0, #2
 1174 0036 02D8     		bhi	.L115
1529:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_REINIT) ||
1530:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC4/UART_Out.c ****             {
1532:.\Generated_Source\PSoC4/UART_Out.c **** 
1533:.\Generated_Source\PSoC4/UART_Out.c ****             #if(UART_Out_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_TXBITCLKTX_COMPLETE_REG = txPeriod;
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 50


 1175              		.loc 1 1534 0
 1176 0038 6278     		ldrb	r2, [r4, #1]
 1177 003a 084B     		ldr	r3, .L138+4
 1178 003c 1A70     		strb	r2, [r3]
 1179              	.L115:
 1180              	.LBE62:
1535:.\Generated_Source\PSoC4/UART_Out.c ****             #else
1536:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC4/UART_Out.c ****             #endif /* End UART_Out_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC4/UART_Out.c **** 
1539:.\Generated_Source\PSoC4/UART_Out.c ****             #if( (UART_Out_PARITY_TYPE != UART_Out__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC4/UART_Out.c ****                  (UART_Out_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC4/UART_Out.c ****                 UART_Out_WriteControlRegister(UART_Out_ReadControlRegister() &
1542:.\Generated_Source\PSoC4/UART_Out.c ****                                                       (uint8) ~UART_Out_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC4/UART_Out.c ****             #endif /* End UART_Out_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC4/UART_Out.c ****             }
1545:.\Generated_Source\PSoC4/UART_Out.c ****         #endif    /* End UART_Out_HD_ENABLED */
1546:.\Generated_Source\PSoC4/UART_Out.c ****         }
1547:.\Generated_Source\PSoC4/UART_Out.c ****     }
 1181              		.loc 1 1547 0
 1182              		@ sp needed
 1183 003e 30BD     		pop	{r4, r5, pc}
 1184              	.LVL60:
 1185              	.L137:
 1186              	.LBB63:
1490:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
 1187              		.loc 1 1490 0 discriminator 1
 1188 0040 0328     		cmp	r0, #3
 1189 0042 E4D0     		beq	.L118
1518:.\Generated_Source\PSoC4/UART_Out.c ****                 (retMode == UART_Out_SEND_WAIT_REINIT) )
 1190              		.loc 1 1518 0
 1191 0044 0128     		cmp	r0, #1
 1192 0046 F4D1     		bne	.L125
 1193              	.L121:
1525:.\Generated_Source\PSoC4/UART_Out.c ****             }
 1194              		.loc 1 1525 0
 1195 0048 0122     		mov	r2, #1
1523:.\Generated_Source\PSoC4/UART_Out.c ****                 }
 1196              		.loc 1 1523 0
 1197 004a 0549     		ldr	r1, .L138+8
 1198              	.L124:
1525:.\Generated_Source\PSoC4/UART_Out.c ****             }
 1199              		.loc 1 1525 0 discriminator 1
 1200 004c 151C     		mov	r5, r2
1523:.\Generated_Source\PSoC4/UART_Out.c ****                 }
 1201              		.loc 1 1523 0 discriminator 1
 1202 004e 0B78     		ldrb	r3, [r1]
 1203              	.LVL61:
1525:.\Generated_Source\PSoC4/UART_Out.c ****             }
 1204              		.loc 1 1525 0 discriminator 1
 1205 0050 9D43     		bic	r5, r3
 1206 0052 FBD1     		bne	.L124
 1207 0054 EDE7     		b	.L125
 1208              	.L139:
 1209 0056 C046     		.align	2
 1210              	.L138:
 1211 0058 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 51


 1212 005c 30000F40 		.word	1074724912
 1213 0060 61000F40 		.word	1074724961
 1214 0064 41000F40 		.word	1074724929
 1215              	.LBE63:
 1216              		.cfi_endproc
 1217              	.LFE25:
 1218              		.size	UART_Out_SendBreak, .-UART_Out_SendBreak
 1219              		.section	.text.UART_Out_SetTxAddressMode,"ax",%progbits
 1220              		.align	2
 1221              		.global	UART_Out_SetTxAddressMode
 1222              		.code	16
 1223              		.thumb_func
 1224              		.type	UART_Out_SetTxAddressMode, %function
 1225              	UART_Out_SetTxAddressMode:
 1226              	.LFB26:
1548:.\Generated_Source\PSoC4/UART_Out.c **** 
1549:.\Generated_Source\PSoC4/UART_Out.c **** 
1550:.\Generated_Source\PSoC4/UART_Out.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/UART_Out.c ****     * Function Name: UART_Out_SetTxAddressMode
1552:.\Generated_Source\PSoC4/UART_Out.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC4/UART_Out.c ****     *
1554:.\Generated_Source\PSoC4/UART_Out.c ****     * Summary:
1555:.\Generated_Source\PSoC4/UART_Out.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC4/UART_Out.c ****     *
1557:.\Generated_Source\PSoC4/UART_Out.c ****     * Parameters:
1558:.\Generated_Source\PSoC4/UART_Out.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC4/UART_Out.c ****     *       UART_Out_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC4/UART_Out.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC4/UART_Out.c ****     *       UART_Out_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC4/UART_Out.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC4/UART_Out.c ****     *
1564:.\Generated_Source\PSoC4/UART_Out.c ****     * Return:
1565:.\Generated_Source\PSoC4/UART_Out.c ****     *  None.
1566:.\Generated_Source\PSoC4/UART_Out.c ****     *
1567:.\Generated_Source\PSoC4/UART_Out.c ****     * Side Effects:
1568:.\Generated_Source\PSoC4/UART_Out.c ****     *  This function sets and clears UART_Out_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC4/UART_Out.c ****     *  register.
1570:.\Generated_Source\PSoC4/UART_Out.c ****     *
1571:.\Generated_Source\PSoC4/UART_Out.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC4/UART_Out.c ****     void UART_Out_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC4/UART_Out.c ****     {
 1227              		.loc 1 1573 0
 1228              		.cfi_startproc
 1229              	.LVL62:
1574:.\Generated_Source\PSoC4/UART_Out.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC4/UART_Out.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC4/UART_Out.c ****         {
1577:.\Generated_Source\PSoC4/UART_Out.c ****         #if( UART_Out_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_WriteControlRegister(UART_Out_ReadControlRegister() |
1579:.\Generated_Source\PSoC4/UART_Out.c ****                                                   UART_Out_CTRL_MARK);
1580:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* End UART_Out_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC4/UART_Out.c ****         }
1582:.\Generated_Source\PSoC4/UART_Out.c ****         else
1583:.\Generated_Source\PSoC4/UART_Out.c ****         {
1584:.\Generated_Source\PSoC4/UART_Out.c ****         #if( UART_Out_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC4/UART_Out.c ****             UART_Out_WriteControlRegister(UART_Out_ReadControlRegister() &
1586:.\Generated_Source\PSoC4/UART_Out.c ****                                                   (uint8) ~UART_Out_CTRL_MARK);
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 52


1587:.\Generated_Source\PSoC4/UART_Out.c ****         #endif /* End UART_Out_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC4/UART_Out.c ****         }
1589:.\Generated_Source\PSoC4/UART_Out.c ****     }
 1230              		.loc 1 1589 0
 1231              		@ sp needed
 1232 0000 7047     		bx	lr
 1233              		.cfi_endproc
 1234              	.LFE26:
 1235              		.size	UART_Out_SetTxAddressMode, .-UART_Out_SetTxAddressMode
 1236              		.global	UART_Out_initVar
 1237 0002 C046     		.bss
 1238              		.set	.LANCHOR0,. + 0
 1239              		.type	UART_Out_initVar, %object
 1240              		.size	UART_Out_initVar, 1
 1241              	UART_Out_initVar:
 1242 0000 00       		.space	1
 1243              		.type	txPeriod.4852, %object
 1244              		.size	txPeriod.4852, 1
 1245              	txPeriod.4852:
 1246 0001 00       		.space	1
 1247              		.text
 1248              	.Letext0:
 1249              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1250              		.file 3 ".\\Generated_Source\\PSoC4\\UART_Out_IntClock.h"
 1251              		.file 4 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1252              		.section	.debug_info,"",%progbits
 1253              	.Ldebug_info0:
 1254 0000 FA060000 		.4byte	0x6fa
 1255 0004 0400     		.2byte	0x4
 1256 0006 00000000 		.4byte	.Ldebug_abbrev0
 1257 000a 04       		.byte	0x4
 1258 000b 01       		.uleb128 0x1
 1259 000c 1C030000 		.4byte	.LASF63
 1260 0010 01       		.byte	0x1
 1261 0011 26010000 		.4byte	.LASF64
 1262 0015 70000000 		.4byte	.LASF65
 1263 0019 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 1264 001d 00000000 		.4byte	0
 1265 0021 00000000 		.4byte	.Ldebug_line0
 1266 0025 02       		.uleb128 0x2
 1267 0026 01       		.byte	0x1
 1268 0027 06       		.byte	0x6
 1269 0028 DE000000 		.4byte	.LASF0
 1270 002c 02       		.uleb128 0x2
 1271 002d 01       		.byte	0x1
 1272 002e 08       		.byte	0x8
 1273 002f AF030000 		.4byte	.LASF1
 1274 0033 02       		.uleb128 0x2
 1275 0034 02       		.byte	0x2
 1276 0035 05       		.byte	0x5
 1277 0036 D7030000 		.4byte	.LASF2
 1278 003a 02       		.uleb128 0x2
 1279 003b 02       		.byte	0x2
 1280 003c 07       		.byte	0x7
 1281 003d D1010000 		.4byte	.LASF3
 1282 0041 02       		.uleb128 0x2
 1283 0042 04       		.byte	0x4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 53


 1284 0043 05       		.byte	0x5
 1285 0044 04010000 		.4byte	.LASF4
 1286 0048 02       		.uleb128 0x2
 1287 0049 04       		.byte	0x4
 1288 004a 07       		.byte	0x7
 1289 004b 8F010000 		.4byte	.LASF5
 1290 004f 02       		.uleb128 0x2
 1291 0050 08       		.byte	0x8
 1292 0051 05       		.byte	0x5
 1293 0052 D0000000 		.4byte	.LASF6
 1294 0056 02       		.uleb128 0x2
 1295 0057 08       		.byte	0x8
 1296 0058 07       		.byte	0x7
 1297 0059 42000000 		.4byte	.LASF7
 1298 005d 03       		.uleb128 0x3
 1299 005e 04       		.byte	0x4
 1300 005f 05       		.byte	0x5
 1301 0060 696E7400 		.ascii	"int\000"
 1302 0064 02       		.uleb128 0x2
 1303 0065 04       		.byte	0x4
 1304 0066 07       		.byte	0x7
 1305 0067 6C010000 		.4byte	.LASF8
 1306 006b 04       		.uleb128 0x4
 1307 006c 0D010000 		.4byte	.LASF9
 1308 0070 02       		.byte	0x2
 1309 0071 3801     		.2byte	0x138
 1310 0073 2C000000 		.4byte	0x2c
 1311 0077 04       		.uleb128 0x4
 1312 0078 00000000 		.4byte	.LASF10
 1313 007c 02       		.byte	0x2
 1314 007d 3901     		.2byte	0x139
 1315 007f 3A000000 		.4byte	0x3a
 1316 0083 02       		.uleb128 0x2
 1317 0084 04       		.byte	0x4
 1318 0085 04       		.byte	0x4
 1319 0086 16030000 		.4byte	.LASF11
 1320 008a 02       		.uleb128 0x2
 1321 008b 08       		.byte	0x8
 1322 008c 04       		.byte	0x4
 1323 008d 13010000 		.4byte	.LASF12
 1324 0091 04       		.uleb128 0x4
 1325 0092 6A040000 		.4byte	.LASF13
 1326 0096 02       		.byte	0x2
 1327 0097 4901     		.2byte	0x149
 1328 0099 9D000000 		.4byte	0x9d
 1329 009d 02       		.uleb128 0x2
 1330 009e 01       		.byte	0x1
 1331 009f 08       		.byte	0x8
 1332 00a0 65040000 		.4byte	.LASF14
 1333 00a4 04       		.uleb128 0x4
 1334 00a5 AA030000 		.4byte	.LASF15
 1335 00a9 02       		.byte	0x2
 1336 00aa E201     		.2byte	0x1e2
 1337 00ac B0000000 		.4byte	0xb0
 1338 00b0 05       		.uleb128 0x5
 1339 00b1 6B000000 		.4byte	0x6b
 1340 00b5 02       		.uleb128 0x2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 54


 1341 00b6 04       		.byte	0x4
 1342 00b7 07       		.byte	0x7
 1343 00b8 9C020000 		.4byte	.LASF16
 1344 00bc 06       		.uleb128 0x6
 1345 00bd 70040000 		.4byte	.LASF59
 1346 00c1 01       		.byte	0x1
 1347 00c2 6A       		.byte	0x6a
 1348 00c3 01       		.byte	0x1
 1349 00c4 07       		.uleb128 0x7
 1350 00c5 79010000 		.4byte	.LASF17
 1351 00c9 01       		.byte	0x1
 1352 00ca E501     		.2byte	0x1e5
 1353 00cc 6B000000 		.4byte	0x6b
 1354 00d0 01       		.byte	0x1
 1355 00d1 E2000000 		.4byte	0xe2
 1356 00d5 08       		.uleb128 0x8
 1357 00d6 BC040000 		.4byte	.LASF19
 1358 00da 01       		.byte	0x1
 1359 00db E701     		.2byte	0x1e7
 1360 00dd 6B000000 		.4byte	0x6b
 1361 00e1 00       		.byte	0
 1362 00e2 07       		.uleb128 0x7
 1363 00e3 7E040000 		.4byte	.LASF18
 1364 00e7 01       		.byte	0x1
 1365 00e8 8801     		.2byte	0x188
 1366 00ea 6B000000 		.4byte	0x6b
 1367 00ee 01       		.byte	0x1
 1368 00ef 00010000 		.4byte	0x100
 1369 00f3 08       		.uleb128 0x8
 1370 00f4 48040000 		.4byte	.LASF20
 1371 00f8 01       		.byte	0x1
 1372 00f9 8A01     		.2byte	0x18a
 1373 00fb 6B000000 		.4byte	0x6b
 1374 00ff 00       		.byte	0
 1375 0100 09       		.uleb128 0x9
 1376 0101 A1010000 		.4byte	.LASF21
 1377 0105 01       		.byte	0x1
 1378 0106 1104     		.2byte	0x411
 1379 0108 01       		.byte	0x1
 1380 0109 1A010000 		.4byte	0x11a
 1381 010d 0A       		.uleb128 0xa
 1382 010e 1D000000 		.4byte	.LASF43
 1383 0112 01       		.byte	0x1
 1384 0113 1104     		.2byte	0x411
 1385 0115 6B000000 		.4byte	0x6b
 1386 0119 00       		.byte	0
 1387 011a 0B       		.uleb128 0xb
 1388 011b BC010000 		.4byte	.LASF22
 1389 011f 01       		.byte	0x1
 1390 0120 B7       		.byte	0xb7
 1391 0121 01       		.byte	0x1
 1392 0122 32010000 		.4byte	0x132
 1393 0126 0C       		.uleb128 0xc
 1394 0127 AB040000 		.4byte	.LASF23
 1395 012b 01       		.byte	0x1
 1396 012c B9       		.byte	0xb9
 1397 012d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 55


 1398 0131 00       		.byte	0
 1399 0132 0D       		.uleb128 0xd
 1400 0133 63020000 		.4byte	.LASF24
 1401 0137 01       		.byte	0x1
 1402 0138 4C       		.byte	0x4c
 1403 0139 00000000 		.4byte	.LFB0
 1404 013d 80000000 		.4byte	.LFE0-.LFB0
 1405 0141 01       		.uleb128 0x1
 1406 0142 9C       		.byte	0x9c
 1407 0143 98010000 		.4byte	0x198
 1408 0147 0E       		.uleb128 0xe
 1409 0148 BC000000 		.4byte	0xbc
 1410 014c 0A000000 		.4byte	.LBB22
 1411 0150 1C000000 		.4byte	.LBE22-.LBB22
 1412 0154 01       		.byte	0x1
 1413 0155 51       		.byte	0x51
 1414 0156 0F       		.uleb128 0xf
 1415 0157 1A010000 		.4byte	0x11a
 1416 015b 2A000000 		.4byte	.LBB24
 1417 015f 00000000 		.4byte	.Ldebug_ranges0+0
 1418 0163 01       		.byte	0x1
 1419 0164 55       		.byte	0x55
 1420 0165 10       		.uleb128 0x10
 1421 0166 00000000 		.4byte	.Ldebug_ranges0+0
 1422 016a 11       		.uleb128 0x11
 1423 016b 26010000 		.4byte	0x126
 1424 016f 00000000 		.4byte	.LLST0
 1425 0173 12       		.uleb128 0x12
 1426 0174 2E000000 		.4byte	.LVL0
 1427 0178 D3060000 		.4byte	0x6d3
 1428 017c 12       		.uleb128 0x12
 1429 017d 54000000 		.4byte	.LVL2
 1430 0181 DE060000 		.4byte	0x6de
 1431 0185 13       		.uleb128 0x13
 1432 0186 5A000000 		.4byte	.LVL3
 1433 018a E5060000 		.4byte	0x6e5
 1434 018e 14       		.uleb128 0x14
 1435 018f 01       		.uleb128 0x1
 1436 0190 50       		.byte	0x50
 1437 0191 02       		.uleb128 0x2
 1438 0192 74       		.byte	0x74
 1439 0193 00       		.sleb128 0
 1440 0194 00       		.byte	0
 1441 0195 00       		.byte	0
 1442 0196 00       		.byte	0
 1443 0197 00       		.byte	0
 1444 0198 15       		.uleb128 0x15
 1445 0199 BC000000 		.4byte	0xbc
 1446 019d 00000000 		.4byte	.LFB1
 1447 01a1 34000000 		.4byte	.LFE1-.LFB1
 1448 01a5 01       		.uleb128 0x1
 1449 01a6 9C       		.byte	0x9c
 1450 01a7 16       		.uleb128 0x16
 1451 01a8 1A010000 		.4byte	0x11a
 1452 01ac 00000000 		.4byte	.LFB2
 1453 01b0 40000000 		.4byte	.LFE2-.LFB2
 1454 01b4 01       		.uleb128 0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 56


 1455 01b5 9C       		.byte	0x9c
 1456 01b6 E6010000 		.4byte	0x1e6
 1457 01ba 11       		.uleb128 0x11
 1458 01bb 26010000 		.4byte	0x126
 1459 01bf 13000000 		.4byte	.LLST1
 1460 01c3 12       		.uleb128 0x12
 1461 01c4 06000000 		.4byte	.LVL5
 1462 01c8 D3060000 		.4byte	0x6d3
 1463 01cc 12       		.uleb128 0x12
 1464 01cd 2C000000 		.4byte	.LVL7
 1465 01d1 DE060000 		.4byte	0x6de
 1466 01d5 13       		.uleb128 0x13
 1467 01d6 32000000 		.4byte	.LVL8
 1468 01da E5060000 		.4byte	0x6e5
 1469 01de 14       		.uleb128 0x14
 1470 01df 01       		.uleb128 0x1
 1471 01e0 50       		.byte	0x50
 1472 01e1 02       		.uleb128 0x2
 1473 01e2 74       		.byte	0x74
 1474 01e3 00       		.sleb128 0
 1475 01e4 00       		.byte	0
 1476 01e5 00       		.byte	0
 1477 01e6 0D       		.uleb128 0xd
 1478 01e7 E4010000 		.4byte	.LASF25
 1479 01eb 01       		.byte	0x1
 1480 01ec F0       		.byte	0xf0
 1481 01ed 00000000 		.4byte	.LFB3
 1482 01f1 3C000000 		.4byte	.LFE3-.LFB3
 1483 01f5 01       		.uleb128 0x1
 1484 01f6 9C       		.byte	0x9c
 1485 01f7 2D020000 		.4byte	0x22d
 1486 01fb 17       		.uleb128 0x17
 1487 01fc AB040000 		.4byte	.LASF23
 1488 0200 01       		.byte	0x1
 1489 0201 F2       		.byte	0xf2
 1490 0202 6B000000 		.4byte	0x6b
 1491 0206 26000000 		.4byte	.LLST2
 1492 020a 12       		.uleb128 0x12
 1493 020b 06000000 		.4byte	.LVL10
 1494 020f D3060000 		.4byte	0x6d3
 1495 0213 12       		.uleb128 0x12
 1496 0214 16000000 		.4byte	.LVL12
 1497 0218 F6060000 		.4byte	0x6f6
 1498 021c 13       		.uleb128 0x13
 1499 021d 2E000000 		.4byte	.LVL13
 1500 0221 E5060000 		.4byte	0x6e5
 1501 0225 14       		.uleb128 0x14
 1502 0226 01       		.uleb128 0x1
 1503 0227 50       		.byte	0x50
 1504 0228 02       		.uleb128 0x2
 1505 0229 74       		.byte	0x74
 1506 022a 00       		.sleb128 0
 1507 022b 00       		.byte	0
 1508 022c 00       		.byte	0
 1509 022d 18       		.uleb128 0x18
 1510 022e 2B040000 		.4byte	.LASF44
 1511 0232 01       		.byte	0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 57


 1512 0233 2701     		.2byte	0x127
 1513 0235 6B000000 		.4byte	0x6b
 1514 0239 00000000 		.4byte	.LFB4
 1515 023d 04000000 		.4byte	.LFE4-.LFB4
 1516 0241 01       		.uleb128 0x1
 1517 0242 9C       		.byte	0x9c
 1518 0243 19       		.uleb128 0x19
 1519 0244 F8020000 		.4byte	.LASF26
 1520 0248 01       		.byte	0x1
 1521 0249 3F01     		.2byte	0x13f
 1522 024b 00000000 		.4byte	.LFB5
 1523 024f 02000000 		.4byte	.LFE5-.LFB5
 1524 0253 01       		.uleb128 0x1
 1525 0254 9C       		.byte	0x9c
 1526 0255 68020000 		.4byte	0x268
 1527 0259 1A       		.uleb128 0x1a
 1528 025a 5C010000 		.4byte	.LASF28
 1529 025e 01       		.byte	0x1
 1530 025f 3F01     		.2byte	0x13f
 1531 0261 6B000000 		.4byte	0x6b
 1532 0265 01       		.uleb128 0x1
 1533 0266 50       		.byte	0x50
 1534 0267 00       		.byte	0
 1535 0268 19       		.uleb128 0x19
 1536 0269 E1030000 		.4byte	.LASF27
 1537 026d 01       		.byte	0x1
 1538 026e 6701     		.2byte	0x167
 1539 0270 00000000 		.4byte	.LFB6
 1540 0274 0C000000 		.4byte	.LFE6-.LFB6
 1541 0278 01       		.uleb128 0x1
 1542 0279 9C       		.byte	0x9c
 1543 027a 8D020000 		.4byte	0x28d
 1544 027e 1A       		.uleb128 0x1a
 1545 027f 2B020000 		.4byte	.LASF29
 1546 0283 01       		.byte	0x1
 1547 0284 6701     		.2byte	0x167
 1548 0286 6B000000 		.4byte	0x6b
 1549 028a 01       		.uleb128 0x1
 1550 028b 50       		.byte	0x50
 1551 028c 00       		.byte	0
 1552 028d 16       		.uleb128 0x16
 1553 028e E2000000 		.4byte	0xe2
 1554 0292 00000000 		.4byte	.LFB7
 1555 0296 0C000000 		.4byte	.LFE7-.LFB7
 1556 029a 01       		.uleb128 0x1
 1557 029b 9C       		.byte	0x9c
 1558 029c A8020000 		.4byte	0x2a8
 1559 02a0 1B       		.uleb128 0x1b
 1560 02a1 F3000000 		.4byte	0xf3
 1561 02a5 01       		.uleb128 0x1
 1562 02a6 50       		.byte	0x50
 1563 02a7 00       		.byte	0
 1564 02a8 16       		.uleb128 0x16
 1565 02a9 C4000000 		.4byte	0xc4
 1566 02ad 00000000 		.4byte	.LFB8
 1567 02b1 10000000 		.4byte	.LFE8-.LFB8
 1568 02b5 01       		.uleb128 0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 58


 1569 02b6 9C       		.byte	0x9c
 1570 02b7 C8020000 		.4byte	0x2c8
 1571 02bb 1B       		.uleb128 0x1b
 1572 02bc D5000000 		.4byte	0xd5
 1573 02c0 06       		.uleb128 0x6
 1574 02c1 73       		.byte	0x73
 1575 02c2 00       		.sleb128 0
 1576 02c3 08       		.byte	0x8
 1577 02c4 7F       		.byte	0x7f
 1578 02c5 1A       		.byte	0x1a
 1579 02c6 9F       		.byte	0x9f
 1580 02c7 00       		.byte	0
 1581 02c8 1C       		.uleb128 0x1c
 1582 02c9 D8040000 		.4byte	.LASF31
 1583 02cd 01       		.byte	0x1
 1584 02ce 1402     		.2byte	0x214
 1585 02d0 6B000000 		.4byte	0x6b
 1586 02d4 00000000 		.4byte	.LFB9
 1587 02d8 28000000 		.4byte	.LFE9-.LFB9
 1588 02dc 01       		.uleb128 0x1
 1589 02dd 9C       		.byte	0x9c
 1590 02de 03030000 		.4byte	0x303
 1591 02e2 1D       		.uleb128 0x1d
 1592 02e3 48040000 		.4byte	.LASF20
 1593 02e7 01       		.byte	0x1
 1594 02e8 1602     		.2byte	0x216
 1595 02ea 6B000000 		.4byte	0x6b
 1596 02ee 39000000 		.4byte	.LLST3
 1597 02f2 1D       		.uleb128 0x1d
 1598 02f3 EF020000 		.4byte	.LASF30
 1599 02f7 01       		.byte	0x1
 1600 02f8 1702     		.2byte	0x217
 1601 02fa 6B000000 		.4byte	0x6b
 1602 02fe 58000000 		.4byte	.LLST4
 1603 0302 00       		.byte	0
 1604 0303 1C       		.uleb128 0x1c
 1605 0304 72020000 		.4byte	.LASF32
 1606 0308 01       		.byte	0x1
 1607 0309 7A02     		.2byte	0x27a
 1608 030b 77000000 		.4byte	0x77
 1609 030f 00000000 		.4byte	.LFB10
 1610 0313 1C000000 		.4byte	.LFE10-.LFB10
 1611 0317 01       		.uleb128 0x1
 1612 0318 9C       		.byte	0x9c
 1613 0319 63030000 		.4byte	0x363
 1614 031d 1E       		.uleb128 0x1e
 1615 031e C4000000 		.4byte	0xc4
 1616 0322 02000000 		.4byte	.LBB28
 1617 0326 18000000 		.4byte	.Ldebug_ranges0+0x18
 1618 032a 01       		.byte	0x1
 1619 032b 8602     		.2byte	0x286
 1620 032d 44030000 		.4byte	0x344
 1621 0331 10       		.uleb128 0x10
 1622 0332 18000000 		.4byte	.Ldebug_ranges0+0x18
 1623 0336 1B       		.uleb128 0x1b
 1624 0337 D5000000 		.4byte	0xd5
 1625 033b 06       		.uleb128 0x6
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 59


 1626 033c 73       		.byte	0x73
 1627 033d 00       		.sleb128 0
 1628 033e 08       		.byte	0x8
 1629 033f 7F       		.byte	0x7f
 1630 0340 1A       		.byte	0x1a
 1631 0341 9F       		.byte	0x9f
 1632 0342 00       		.byte	0
 1633 0343 00       		.byte	0
 1634 0344 1F       		.uleb128 0x1f
 1635 0345 E2000000 		.4byte	0xe2
 1636 0349 04000000 		.4byte	.LBB31
 1637 034d 30000000 		.4byte	.Ldebug_ranges0+0x30
 1638 0351 01       		.byte	0x1
 1639 0352 8602     		.2byte	0x286
 1640 0354 10       		.uleb128 0x10
 1641 0355 30000000 		.4byte	.Ldebug_ranges0+0x30
 1642 0359 1B       		.uleb128 0x1b
 1643 035a F3000000 		.4byte	0xf3
 1644 035e 01       		.uleb128 0x1
 1645 035f 52       		.byte	0x52
 1646 0360 00       		.byte	0
 1647 0361 00       		.byte	0
 1648 0362 00       		.byte	0
 1649 0363 1C       		.uleb128 0x1c
 1650 0364 FB010000 		.4byte	.LASF33
 1651 0368 01       		.byte	0x1
 1652 0369 AB02     		.2byte	0x2ab
 1653 036b 6B000000 		.4byte	0x6b
 1654 036f 00000000 		.4byte	.LFB11
 1655 0373 10000000 		.4byte	.LFE11-.LFB11
 1656 0377 01       		.uleb128 0x1
 1657 0378 9C       		.byte	0x9c
 1658 0379 8E030000 		.4byte	0x38e
 1659 037d 1D       		.uleb128 0x1d
 1660 037e CC010000 		.4byte	.LASF34
 1661 0382 01       		.byte	0x1
 1662 0383 AE02     		.2byte	0x2ae
 1663 0385 6B000000 		.4byte	0x6b
 1664 0389 6B000000 		.4byte	.LLST5
 1665 038d 00       		.byte	0
 1666 038e 19       		.uleb128 0x19
 1667 038f 59000000 		.4byte	.LASF35
 1668 0393 01       		.byte	0x1
 1669 0394 F502     		.2byte	0x2f5
 1670 0396 00000000 		.4byte	.LFB12
 1671 039a 24000000 		.4byte	.LFE12-.LFB12
 1672 039e 01       		.uleb128 0x1
 1673 039f 9C       		.byte	0x9c
 1674 03a0 C7030000 		.4byte	0x3c7
 1675 03a4 1D       		.uleb128 0x1d
 1676 03a5 AB040000 		.4byte	.LASF23
 1677 03a9 01       		.byte	0x1
 1678 03aa F702     		.2byte	0x2f7
 1679 03ac 6B000000 		.4byte	0x6b
 1680 03b0 87000000 		.4byte	.LLST6
 1681 03b4 12       		.uleb128 0x12
 1682 03b5 06000000 		.4byte	.LVL28
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 60


 1683 03b9 D3060000 		.4byte	0x6d3
 1684 03bd 12       		.uleb128 0x12
 1685 03be 1C000000 		.4byte	.LVL29
 1686 03c2 E5060000 		.4byte	0x6e5
 1687 03c6 00       		.byte	0
 1688 03c7 19       		.uleb128 0x19
 1689 03c8 BD030000 		.4byte	.LASF36
 1690 03cc 01       		.byte	0x1
 1691 03cd 2D03     		.2byte	0x32d
 1692 03cf 00000000 		.4byte	.LFB13
 1693 03d3 02000000 		.4byte	.LFE13-.LFB13
 1694 03d7 01       		.uleb128 0x1
 1695 03d8 9C       		.byte	0x9c
 1696 03d9 EC030000 		.4byte	0x3ec
 1697 03dd 1A       		.uleb128 0x1a
 1698 03de 1A010000 		.4byte	.LASF37
 1699 03e2 01       		.byte	0x1
 1700 03e3 2D03     		.2byte	0x32d
 1701 03e5 6B000000 		.4byte	0x6b
 1702 03e9 01       		.uleb128 0x1
 1703 03ea 50       		.byte	0x50
 1704 03eb 00       		.byte	0
 1705 03ec 19       		.uleb128 0x19
 1706 03ed FD030000 		.4byte	.LASF38
 1707 03f1 01       		.byte	0x1
 1708 03f2 5903     		.2byte	0x359
 1709 03f4 00000000 		.4byte	.LFB14
 1710 03f8 0C000000 		.4byte	.LFE14-.LFB14
 1711 03fc 01       		.uleb128 0x1
 1712 03fd 9C       		.byte	0x9c
 1713 03fe 11040000 		.4byte	0x411
 1714 0402 1A       		.uleb128 0x1a
 1715 0403 D4020000 		.4byte	.LASF39
 1716 0407 01       		.byte	0x1
 1717 0408 5903     		.2byte	0x359
 1718 040a 6B000000 		.4byte	0x6b
 1719 040e 01       		.uleb128 0x1
 1720 040f 50       		.byte	0x50
 1721 0410 00       		.byte	0
 1722 0411 19       		.uleb128 0x19
 1723 0412 14040000 		.4byte	.LASF40
 1724 0416 01       		.byte	0x1
 1725 0417 6D03     		.2byte	0x36d
 1726 0419 00000000 		.4byte	.LFB15
 1727 041d 0C000000 		.4byte	.LFE15-.LFB15
 1728 0421 01       		.uleb128 0x1
 1729 0422 9C       		.byte	0x9c
 1730 0423 36040000 		.4byte	0x436
 1731 0427 1A       		.uleb128 0x1a
 1732 0428 D4020000 		.4byte	.LASF39
 1733 042c 01       		.byte	0x1
 1734 042d 6D03     		.2byte	0x36d
 1735 042f 6B000000 		.4byte	0x6b
 1736 0433 01       		.uleb128 0x1
 1737 0434 50       		.byte	0x50
 1738 0435 00       		.byte	0
 1739 0436 19       		.uleb128 0x19
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 61


 1740 0437 E9040000 		.4byte	.LASF41
 1741 043b 01       		.byte	0x1
 1742 043c 8C03     		.2byte	0x38c
 1743 043e 00000000 		.4byte	.LFB16
 1744 0442 0C000000 		.4byte	.LFE16-.LFB16
 1745 0446 01       		.uleb128 0x1
 1746 0447 9C       		.byte	0x9c
 1747 0448 5B040000 		.4byte	0x45b
 1748 044c 1A       		.uleb128 0x1a
 1749 044d 2B020000 		.4byte	.LASF29
 1750 0451 01       		.byte	0x1
 1751 0452 8C03     		.2byte	0x38c
 1752 0454 6B000000 		.4byte	0x6b
 1753 0458 01       		.uleb128 0x1
 1754 0459 50       		.byte	0x50
 1755 045a 00       		.byte	0
 1756 045b 19       		.uleb128 0x19
 1757 045c C3040000 		.4byte	.LASF42
 1758 0460 01       		.byte	0x1
 1759 0461 AE03     		.2byte	0x3ae
 1760 0463 00000000 		.4byte	.LFB17
 1761 0467 18000000 		.4byte	.LFE17-.LFB17
 1762 046b 01       		.uleb128 0x1
 1763 046c 9C       		.byte	0x9c
 1764 046d 80040000 		.4byte	0x480
 1765 0471 1A       		.uleb128 0x1a
 1766 0472 1D000000 		.4byte	.LASF43
 1767 0476 01       		.byte	0x1
 1768 0477 AE03     		.2byte	0x3ae
 1769 0479 6B000000 		.4byte	0x6b
 1770 047d 01       		.uleb128 0x1
 1771 047e 50       		.byte	0x50
 1772 047f 00       		.byte	0
 1773 0480 18       		.uleb128 0x18
 1774 0481 4F040000 		.4byte	.LASF45
 1775 0485 01       		.byte	0x1
 1776 0486 EB03     		.2byte	0x3eb
 1777 0488 6B000000 		.4byte	0x6b
 1778 048c 00000000 		.4byte	.LFB18
 1779 0490 0C000000 		.4byte	.LFE18-.LFB18
 1780 0494 01       		.uleb128 0x1
 1781 0495 9C       		.byte	0x9c
 1782 0496 16       		.uleb128 0x16
 1783 0497 00010000 		.4byte	0x100
 1784 049b 00000000 		.4byte	.LFB19
 1785 049f 18000000 		.4byte	.LFE19-.LFB19
 1786 04a3 01       		.uleb128 0x1
 1787 04a4 9C       		.byte	0x9c
 1788 04a5 B1040000 		.4byte	0x4b1
 1789 04a9 20       		.uleb128 0x20
 1790 04aa 0D010000 		.4byte	0x10d
 1791 04ae 01       		.uleb128 0x1
 1792 04af 50       		.byte	0x50
 1793 04b0 00       		.byte	0
 1794 04b1 19       		.uleb128 0x19
 1795 04b2 2F000000 		.4byte	.LASF46
 1796 04b6 01       		.byte	0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 62


 1797 04b7 7904     		.2byte	0x479
 1798 04b9 00000000 		.4byte	.LFB20
 1799 04bd 38000000 		.4byte	.LFE20-.LFB20
 1800 04c1 01       		.uleb128 0x1
 1801 04c2 9C       		.byte	0x9c
 1802 04c3 FC040000 		.4byte	0x4fc
 1803 04c7 1A       		.uleb128 0x1a
 1804 04c8 28000000 		.4byte	.LASF47
 1805 04cc 01       		.byte	0x1
 1806 04cd 7904     		.2byte	0x479
 1807 04cf FC040000 		.4byte	0x4fc
 1808 04d3 01       		.uleb128 0x1
 1809 04d4 50       		.byte	0x50
 1810 04d5 1D       		.uleb128 0x1d
 1811 04d6 F2010000 		.4byte	.LASF48
 1812 04da 01       		.byte	0x1
 1813 04db 7B04     		.2byte	0x47b
 1814 04dd 77000000 		.4byte	0x77
 1815 04e1 9A000000 		.4byte	.LLST7
 1816 04e5 1F       		.uleb128 0x1f
 1817 04e6 00010000 		.4byte	0x100
 1818 04ea 12000000 		.4byte	.LBB36
 1819 04ee 48000000 		.4byte	.Ldebug_ranges0+0x48
 1820 04f2 01       		.byte	0x1
 1821 04f3 8304     		.2byte	0x483
 1822 04f5 21       		.uleb128 0x21
 1823 04f6 0D010000 		.4byte	0x10d
 1824 04fa 00       		.byte	0
 1825 04fb 00       		.byte	0
 1826 04fc 22       		.uleb128 0x22
 1827 04fd 04       		.byte	0x4
 1828 04fe 02050000 		.4byte	0x502
 1829 0502 23       		.uleb128 0x23
 1830 0503 91000000 		.4byte	0x91
 1831 0507 19       		.uleb128 0x19
 1832 0508 4A010000 		.4byte	.LASF49
 1833 050c 01       		.byte	0x1
 1834 050d A704     		.2byte	0x4a7
 1835 050f 00000000 		.4byte	.LFB21
 1836 0513 3C000000 		.4byte	.LFE21-.LFB21
 1837 0517 01       		.uleb128 0x1
 1838 0518 9C       		.byte	0x9c
 1839 0519 68050000 		.4byte	0x568
 1840 051d 24       		.uleb128 0x24
 1841 051e 28000000 		.4byte	.LASF47
 1842 0522 01       		.byte	0x1
 1843 0523 A704     		.2byte	0x4a7
 1844 0525 68050000 		.4byte	0x568
 1845 0529 B9000000 		.4byte	.LLST8
 1846 052d 24       		.uleb128 0x24
 1847 052e B2010000 		.4byte	.LASF50
 1848 0532 01       		.byte	0x1
 1849 0533 A704     		.2byte	0x4a7
 1850 0535 6B000000 		.4byte	0x6b
 1851 0539 DA000000 		.4byte	.LLST9
 1852 053d 1D       		.uleb128 0x1d
 1853 053e F2010000 		.4byte	.LASF48
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 63


 1854 0542 01       		.byte	0x1
 1855 0543 AA04     		.2byte	0x4aa
 1856 0545 6B000000 		.4byte	0x6b
 1857 0549 FB000000 		.4byte	.LLST10
 1858 054d 1F       		.uleb128 0x1f
 1859 054e 00010000 		.4byte	0x100
 1860 0552 0E000000 		.4byte	.LBB40
 1861 0556 60000000 		.4byte	.Ldebug_ranges0+0x60
 1862 055a 01       		.byte	0x1
 1863 055b B104     		.2byte	0x4b1
 1864 055d 25       		.uleb128 0x25
 1865 055e 0D010000 		.4byte	0x10d
 1866 0562 20010000 		.4byte	.LLST11
 1867 0566 00       		.byte	0
 1868 0567 00       		.byte	0
 1869 0568 22       		.uleb128 0x22
 1870 0569 04       		.byte	0x4
 1871 056a 6E050000 		.4byte	0x56e
 1872 056e 23       		.uleb128 0x23
 1873 056f 6B000000 		.4byte	0x6b
 1874 0573 19       		.uleb128 0x19
 1875 0574 8B020000 		.4byte	.LASF51
 1876 0578 01       		.byte	0x1
 1877 0579 CE04     		.2byte	0x4ce
 1878 057b 00000000 		.4byte	.LFB22
 1879 057f 44000000 		.4byte	.LFE22-.LFB22
 1880 0583 01       		.uleb128 0x1
 1881 0584 9C       		.byte	0x9c
 1882 0585 EA050000 		.4byte	0x5ea
 1883 0589 1A       		.uleb128 0x1a
 1884 058a 1D000000 		.4byte	.LASF43
 1885 058e 01       		.byte	0x1
 1886 058f CE04     		.2byte	0x4ce
 1887 0591 6B000000 		.4byte	0x6b
 1888 0595 01       		.uleb128 0x1
 1889 0596 50       		.byte	0x50
 1890 0597 1E       		.uleb128 0x1e
 1891 0598 00010000 		.4byte	0x100
 1892 059c 08000000 		.4byte	.LBB44
 1893 05a0 78000000 		.4byte	.Ldebug_ranges0+0x78
 1894 05a4 01       		.byte	0x1
 1895 05a5 D304     		.2byte	0x4d3
 1896 05a7 B1050000 		.4byte	0x5b1
 1897 05ab 21       		.uleb128 0x21
 1898 05ac 0D010000 		.4byte	0x10d
 1899 05b0 00       		.byte	0
 1900 05b1 1E       		.uleb128 0x1e
 1901 05b2 00010000 		.4byte	0x100
 1902 05b6 12000000 		.4byte	.LBB48
 1903 05ba 98000000 		.4byte	.Ldebug_ranges0+0x98
 1904 05be 01       		.byte	0x1
 1905 05bf D404     		.2byte	0x4d4
 1906 05c1 CF050000 		.4byte	0x5cf
 1907 05c5 25       		.uleb128 0x25
 1908 05c6 0D010000 		.4byte	0x10d
 1909 05ca 33010000 		.4byte	.LLST12
 1910 05ce 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 64


 1911 05cf 1F       		.uleb128 0x1f
 1912 05d0 00010000 		.4byte	0x100
 1913 05d4 24000000 		.4byte	.LBB57
 1914 05d8 C0000000 		.4byte	.Ldebug_ranges0+0xc0
 1915 05dc 01       		.byte	0x1
 1916 05dd D504     		.2byte	0x4d5
 1917 05df 25       		.uleb128 0x25
 1918 05e0 0D010000 		.4byte	0x10d
 1919 05e4 47010000 		.4byte	.LLST13
 1920 05e8 00       		.byte	0
 1921 05e9 00       		.byte	0
 1922 05ea 1C       		.uleb128 0x1c
 1923 05eb 92040000 		.4byte	.LASF52
 1924 05ef 01       		.byte	0x1
 1925 05f0 F904     		.2byte	0x4f9
 1926 05f2 6B000000 		.4byte	0x6b
 1927 05f6 00000000 		.4byte	.LFB23
 1928 05fa 20000000 		.4byte	.LFE23-.LFB23
 1929 05fe 01       		.uleb128 0x1
 1930 05ff 9C       		.byte	0x9c
 1931 0600 15060000 		.4byte	0x615
 1932 0604 1D       		.uleb128 0x1d
 1933 0605 CC010000 		.4byte	.LASF34
 1934 0609 01       		.byte	0x1
 1935 060a FC04     		.2byte	0x4fc
 1936 060c 6B000000 		.4byte	0x6b
 1937 0610 5B010000 		.4byte	.LLST14
 1938 0614 00       		.byte	0
 1939 0615 19       		.uleb128 0x19
 1940 0616 A5020000 		.4byte	.LASF53
 1941 061a 01       		.byte	0x1
 1942 061b 4A05     		.2byte	0x54a
 1943 061d 00000000 		.4byte	.LFB24
 1944 0621 24000000 		.4byte	.LFE24-.LFB24
 1945 0625 01       		.uleb128 0x1
 1946 0626 9C       		.byte	0x9c
 1947 0627 4E060000 		.4byte	0x64e
 1948 062b 1D       		.uleb128 0x1d
 1949 062c AB040000 		.4byte	.LASF23
 1950 0630 01       		.byte	0x1
 1951 0631 4C05     		.2byte	0x54c
 1952 0633 6B000000 		.4byte	0x6b
 1953 0637 84010000 		.4byte	.LLST15
 1954 063b 12       		.uleb128 0x12
 1955 063c 06000000 		.4byte	.LVL54
 1956 0640 D3060000 		.4byte	0x6d3
 1957 0644 12       		.uleb128 0x12
 1958 0645 1C000000 		.4byte	.LVL55
 1959 0649 E5060000 		.4byte	0x6e5
 1960 064d 00       		.byte	0
 1961 064e 19       		.uleb128 0x19
 1962 064f DC020000 		.4byte	.LASF54
 1963 0653 01       		.byte	0x1
 1964 0654 A005     		.2byte	0x5a0
 1965 0656 00000000 		.4byte	.LFB25
 1966 065a 68000000 		.4byte	.LFE25-.LFB25
 1967 065e 01       		.uleb128 0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 65


 1968 065f 9C       		.byte	0x9c
 1969 0660 9D060000 		.4byte	0x69d
 1970 0664 24       		.uleb128 0x24
 1971 0665 64010000 		.4byte	.LASF55
 1972 0669 01       		.byte	0x1
 1973 066a A005     		.2byte	0x5a0
 1974 066c 6B000000 		.4byte	0x6b
 1975 0670 97010000 		.4byte	.LLST16
 1976 0674 10       		.uleb128 0x10
 1977 0675 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 1978 0679 1D       		.uleb128 0x1d
 1979 067a 83020000 		.4byte	.LASF56
 1980 067e 01       		.byte	0x1
 1981 067f A805     		.2byte	0x5a8
 1982 0681 6B000000 		.4byte	0x6b
 1983 0685 C3010000 		.4byte	.LLST17
 1984 0689 26       		.uleb128 0x26
 1985 068a EA000000 		.4byte	.LASF57
 1986 068e 01       		.byte	0x1
 1987 068f D005     		.2byte	0x5d0
 1988 0691 6B000000 		.4byte	0x6b
 1989 0695 05       		.uleb128 0x5
 1990 0696 03       		.byte	0x3
 1991 0697 01000000 		.4byte	txPeriod.4852
 1992 069b 00       		.byte	0
 1993 069c 00       		.byte	0
 1994 069d 19       		.uleb128 0x19
 1995 069e 49020000 		.4byte	.LASF58
 1996 06a2 01       		.byte	0x1
 1997 06a3 2406     		.2byte	0x624
 1998 06a5 00000000 		.4byte	.LFB26
 1999 06a9 02000000 		.4byte	.LFE26-.LFB26
 2000 06ad 01       		.uleb128 0x1
 2001 06ae 9C       		.byte	0x9c
 2002 06af C2060000 		.4byte	0x6c2
 2003 06b3 1A       		.uleb128 0x1a
 2004 06b4 1A010000 		.4byte	.LASF37
 2005 06b8 01       		.byte	0x1
 2006 06b9 2406     		.2byte	0x624
 2007 06bb 6B000000 		.4byte	0x6b
 2008 06bf 01       		.uleb128 0x1
 2009 06c0 50       		.byte	0x50
 2010 06c1 00       		.byte	0
 2011 06c2 27       		.uleb128 0x27
 2012 06c3 F3000000 		.4byte	.LASF66
 2013 06c7 01       		.byte	0x1
 2014 06c8 1B       		.byte	0x1b
 2015 06c9 6B000000 		.4byte	0x6b
 2016 06cd 05       		.uleb128 0x5
 2017 06ce 03       		.byte	0x3
 2018 06cf 00000000 		.4byte	UART_Out_initVar
 2019 06d3 28       		.uleb128 0x28
 2020 06d4 14020000 		.4byte	.LASF67
 2021 06d8 04       		.byte	0x4
 2022 06d9 61       		.byte	0x61
 2023 06da 6B000000 		.4byte	0x6b
 2024 06de 29       		.uleb128 0x29
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 66


 2025 06df BC020000 		.4byte	.LASF60
 2026 06e3 03       		.byte	0x3
 2027 06e4 23       		.byte	0x23
 2028 06e5 2A       		.uleb128 0x2a
 2029 06e6 07000000 		.4byte	.LASF61
 2030 06ea 04       		.byte	0x4
 2031 06eb 62       		.byte	0x62
 2032 06ec F6060000 		.4byte	0x6f6
 2033 06f0 2B       		.uleb128 0x2b
 2034 06f1 6B000000 		.4byte	0x6b
 2035 06f5 00       		.byte	0
 2036 06f6 29       		.uleb128 0x29
 2037 06f7 32020000 		.4byte	.LASF62
 2038 06fb 03       		.byte	0x3
 2039 06fc 27       		.byte	0x27
 2040 06fd 00       		.byte	0
 2041              		.section	.debug_abbrev,"",%progbits
 2042              	.Ldebug_abbrev0:
 2043 0000 01       		.uleb128 0x1
 2044 0001 11       		.uleb128 0x11
 2045 0002 01       		.byte	0x1
 2046 0003 25       		.uleb128 0x25
 2047 0004 0E       		.uleb128 0xe
 2048 0005 13       		.uleb128 0x13
 2049 0006 0B       		.uleb128 0xb
 2050 0007 03       		.uleb128 0x3
 2051 0008 0E       		.uleb128 0xe
 2052 0009 1B       		.uleb128 0x1b
 2053 000a 0E       		.uleb128 0xe
 2054 000b 55       		.uleb128 0x55
 2055 000c 17       		.uleb128 0x17
 2056 000d 11       		.uleb128 0x11
 2057 000e 01       		.uleb128 0x1
 2058 000f 10       		.uleb128 0x10
 2059 0010 17       		.uleb128 0x17
 2060 0011 00       		.byte	0
 2061 0012 00       		.byte	0
 2062 0013 02       		.uleb128 0x2
 2063 0014 24       		.uleb128 0x24
 2064 0015 00       		.byte	0
 2065 0016 0B       		.uleb128 0xb
 2066 0017 0B       		.uleb128 0xb
 2067 0018 3E       		.uleb128 0x3e
 2068 0019 0B       		.uleb128 0xb
 2069 001a 03       		.uleb128 0x3
 2070 001b 0E       		.uleb128 0xe
 2071 001c 00       		.byte	0
 2072 001d 00       		.byte	0
 2073 001e 03       		.uleb128 0x3
 2074 001f 24       		.uleb128 0x24
 2075 0020 00       		.byte	0
 2076 0021 0B       		.uleb128 0xb
 2077 0022 0B       		.uleb128 0xb
 2078 0023 3E       		.uleb128 0x3e
 2079 0024 0B       		.uleb128 0xb
 2080 0025 03       		.uleb128 0x3
 2081 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 67


 2082 0027 00       		.byte	0
 2083 0028 00       		.byte	0
 2084 0029 04       		.uleb128 0x4
 2085 002a 16       		.uleb128 0x16
 2086 002b 00       		.byte	0
 2087 002c 03       		.uleb128 0x3
 2088 002d 0E       		.uleb128 0xe
 2089 002e 3A       		.uleb128 0x3a
 2090 002f 0B       		.uleb128 0xb
 2091 0030 3B       		.uleb128 0x3b
 2092 0031 05       		.uleb128 0x5
 2093 0032 49       		.uleb128 0x49
 2094 0033 13       		.uleb128 0x13
 2095 0034 00       		.byte	0
 2096 0035 00       		.byte	0
 2097 0036 05       		.uleb128 0x5
 2098 0037 35       		.uleb128 0x35
 2099 0038 00       		.byte	0
 2100 0039 49       		.uleb128 0x49
 2101 003a 13       		.uleb128 0x13
 2102 003b 00       		.byte	0
 2103 003c 00       		.byte	0
 2104 003d 06       		.uleb128 0x6
 2105 003e 2E       		.uleb128 0x2e
 2106 003f 00       		.byte	0
 2107 0040 3F       		.uleb128 0x3f
 2108 0041 19       		.uleb128 0x19
 2109 0042 03       		.uleb128 0x3
 2110 0043 0E       		.uleb128 0xe
 2111 0044 3A       		.uleb128 0x3a
 2112 0045 0B       		.uleb128 0xb
 2113 0046 3B       		.uleb128 0x3b
 2114 0047 0B       		.uleb128 0xb
 2115 0048 27       		.uleb128 0x27
 2116 0049 19       		.uleb128 0x19
 2117 004a 20       		.uleb128 0x20
 2118 004b 0B       		.uleb128 0xb
 2119 004c 00       		.byte	0
 2120 004d 00       		.byte	0
 2121 004e 07       		.uleb128 0x7
 2122 004f 2E       		.uleb128 0x2e
 2123 0050 01       		.byte	0x1
 2124 0051 3F       		.uleb128 0x3f
 2125 0052 19       		.uleb128 0x19
 2126 0053 03       		.uleb128 0x3
 2127 0054 0E       		.uleb128 0xe
 2128 0055 3A       		.uleb128 0x3a
 2129 0056 0B       		.uleb128 0xb
 2130 0057 3B       		.uleb128 0x3b
 2131 0058 05       		.uleb128 0x5
 2132 0059 27       		.uleb128 0x27
 2133 005a 19       		.uleb128 0x19
 2134 005b 49       		.uleb128 0x49
 2135 005c 13       		.uleb128 0x13
 2136 005d 20       		.uleb128 0x20
 2137 005e 0B       		.uleb128 0xb
 2138 005f 01       		.uleb128 0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 68


 2139 0060 13       		.uleb128 0x13
 2140 0061 00       		.byte	0
 2141 0062 00       		.byte	0
 2142 0063 08       		.uleb128 0x8
 2143 0064 34       		.uleb128 0x34
 2144 0065 00       		.byte	0
 2145 0066 03       		.uleb128 0x3
 2146 0067 0E       		.uleb128 0xe
 2147 0068 3A       		.uleb128 0x3a
 2148 0069 0B       		.uleb128 0xb
 2149 006a 3B       		.uleb128 0x3b
 2150 006b 05       		.uleb128 0x5
 2151 006c 49       		.uleb128 0x49
 2152 006d 13       		.uleb128 0x13
 2153 006e 00       		.byte	0
 2154 006f 00       		.byte	0
 2155 0070 09       		.uleb128 0x9
 2156 0071 2E       		.uleb128 0x2e
 2157 0072 01       		.byte	0x1
 2158 0073 3F       		.uleb128 0x3f
 2159 0074 19       		.uleb128 0x19
 2160 0075 03       		.uleb128 0x3
 2161 0076 0E       		.uleb128 0xe
 2162 0077 3A       		.uleb128 0x3a
 2163 0078 0B       		.uleb128 0xb
 2164 0079 3B       		.uleb128 0x3b
 2165 007a 05       		.uleb128 0x5
 2166 007b 27       		.uleb128 0x27
 2167 007c 19       		.uleb128 0x19
 2168 007d 20       		.uleb128 0x20
 2169 007e 0B       		.uleb128 0xb
 2170 007f 01       		.uleb128 0x1
 2171 0080 13       		.uleb128 0x13
 2172 0081 00       		.byte	0
 2173 0082 00       		.byte	0
 2174 0083 0A       		.uleb128 0xa
 2175 0084 05       		.uleb128 0x5
 2176 0085 00       		.byte	0
 2177 0086 03       		.uleb128 0x3
 2178 0087 0E       		.uleb128 0xe
 2179 0088 3A       		.uleb128 0x3a
 2180 0089 0B       		.uleb128 0xb
 2181 008a 3B       		.uleb128 0x3b
 2182 008b 05       		.uleb128 0x5
 2183 008c 49       		.uleb128 0x49
 2184 008d 13       		.uleb128 0x13
 2185 008e 00       		.byte	0
 2186 008f 00       		.byte	0
 2187 0090 0B       		.uleb128 0xb
 2188 0091 2E       		.uleb128 0x2e
 2189 0092 01       		.byte	0x1
 2190 0093 3F       		.uleb128 0x3f
 2191 0094 19       		.uleb128 0x19
 2192 0095 03       		.uleb128 0x3
 2193 0096 0E       		.uleb128 0xe
 2194 0097 3A       		.uleb128 0x3a
 2195 0098 0B       		.uleb128 0xb
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 69


 2196 0099 3B       		.uleb128 0x3b
 2197 009a 0B       		.uleb128 0xb
 2198 009b 27       		.uleb128 0x27
 2199 009c 19       		.uleb128 0x19
 2200 009d 20       		.uleb128 0x20
 2201 009e 0B       		.uleb128 0xb
 2202 009f 01       		.uleb128 0x1
 2203 00a0 13       		.uleb128 0x13
 2204 00a1 00       		.byte	0
 2205 00a2 00       		.byte	0
 2206 00a3 0C       		.uleb128 0xc
 2207 00a4 34       		.uleb128 0x34
 2208 00a5 00       		.byte	0
 2209 00a6 03       		.uleb128 0x3
 2210 00a7 0E       		.uleb128 0xe
 2211 00a8 3A       		.uleb128 0x3a
 2212 00a9 0B       		.uleb128 0xb
 2213 00aa 3B       		.uleb128 0x3b
 2214 00ab 0B       		.uleb128 0xb
 2215 00ac 49       		.uleb128 0x49
 2216 00ad 13       		.uleb128 0x13
 2217 00ae 00       		.byte	0
 2218 00af 00       		.byte	0
 2219 00b0 0D       		.uleb128 0xd
 2220 00b1 2E       		.uleb128 0x2e
 2221 00b2 01       		.byte	0x1
 2222 00b3 3F       		.uleb128 0x3f
 2223 00b4 19       		.uleb128 0x19
 2224 00b5 03       		.uleb128 0x3
 2225 00b6 0E       		.uleb128 0xe
 2226 00b7 3A       		.uleb128 0x3a
 2227 00b8 0B       		.uleb128 0xb
 2228 00b9 3B       		.uleb128 0x3b
 2229 00ba 0B       		.uleb128 0xb
 2230 00bb 27       		.uleb128 0x27
 2231 00bc 19       		.uleb128 0x19
 2232 00bd 11       		.uleb128 0x11
 2233 00be 01       		.uleb128 0x1
 2234 00bf 12       		.uleb128 0x12
 2235 00c0 06       		.uleb128 0x6
 2236 00c1 40       		.uleb128 0x40
 2237 00c2 18       		.uleb128 0x18
 2238 00c3 9742     		.uleb128 0x2117
 2239 00c5 19       		.uleb128 0x19
 2240 00c6 01       		.uleb128 0x1
 2241 00c7 13       		.uleb128 0x13
 2242 00c8 00       		.byte	0
 2243 00c9 00       		.byte	0
 2244 00ca 0E       		.uleb128 0xe
 2245 00cb 1D       		.uleb128 0x1d
 2246 00cc 00       		.byte	0
 2247 00cd 31       		.uleb128 0x31
 2248 00ce 13       		.uleb128 0x13
 2249 00cf 11       		.uleb128 0x11
 2250 00d0 01       		.uleb128 0x1
 2251 00d1 12       		.uleb128 0x12
 2252 00d2 06       		.uleb128 0x6
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 70


 2253 00d3 58       		.uleb128 0x58
 2254 00d4 0B       		.uleb128 0xb
 2255 00d5 59       		.uleb128 0x59
 2256 00d6 0B       		.uleb128 0xb
 2257 00d7 00       		.byte	0
 2258 00d8 00       		.byte	0
 2259 00d9 0F       		.uleb128 0xf
 2260 00da 1D       		.uleb128 0x1d
 2261 00db 01       		.byte	0x1
 2262 00dc 31       		.uleb128 0x31
 2263 00dd 13       		.uleb128 0x13
 2264 00de 52       		.uleb128 0x52
 2265 00df 01       		.uleb128 0x1
 2266 00e0 55       		.uleb128 0x55
 2267 00e1 17       		.uleb128 0x17
 2268 00e2 58       		.uleb128 0x58
 2269 00e3 0B       		.uleb128 0xb
 2270 00e4 59       		.uleb128 0x59
 2271 00e5 0B       		.uleb128 0xb
 2272 00e6 00       		.byte	0
 2273 00e7 00       		.byte	0
 2274 00e8 10       		.uleb128 0x10
 2275 00e9 0B       		.uleb128 0xb
 2276 00ea 01       		.byte	0x1
 2277 00eb 55       		.uleb128 0x55
 2278 00ec 17       		.uleb128 0x17
 2279 00ed 00       		.byte	0
 2280 00ee 00       		.byte	0
 2281 00ef 11       		.uleb128 0x11
 2282 00f0 34       		.uleb128 0x34
 2283 00f1 00       		.byte	0
 2284 00f2 31       		.uleb128 0x31
 2285 00f3 13       		.uleb128 0x13
 2286 00f4 02       		.uleb128 0x2
 2287 00f5 17       		.uleb128 0x17
 2288 00f6 00       		.byte	0
 2289 00f7 00       		.byte	0
 2290 00f8 12       		.uleb128 0x12
 2291 00f9 898201   		.uleb128 0x4109
 2292 00fc 00       		.byte	0
 2293 00fd 11       		.uleb128 0x11
 2294 00fe 01       		.uleb128 0x1
 2295 00ff 31       		.uleb128 0x31
 2296 0100 13       		.uleb128 0x13
 2297 0101 00       		.byte	0
 2298 0102 00       		.byte	0
 2299 0103 13       		.uleb128 0x13
 2300 0104 898201   		.uleb128 0x4109
 2301 0107 01       		.byte	0x1
 2302 0108 11       		.uleb128 0x11
 2303 0109 01       		.uleb128 0x1
 2304 010a 31       		.uleb128 0x31
 2305 010b 13       		.uleb128 0x13
 2306 010c 00       		.byte	0
 2307 010d 00       		.byte	0
 2308 010e 14       		.uleb128 0x14
 2309 010f 8A8201   		.uleb128 0x410a
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 71


 2310 0112 00       		.byte	0
 2311 0113 02       		.uleb128 0x2
 2312 0114 18       		.uleb128 0x18
 2313 0115 9142     		.uleb128 0x2111
 2314 0117 18       		.uleb128 0x18
 2315 0118 00       		.byte	0
 2316 0119 00       		.byte	0
 2317 011a 15       		.uleb128 0x15
 2318 011b 2E       		.uleb128 0x2e
 2319 011c 00       		.byte	0
 2320 011d 31       		.uleb128 0x31
 2321 011e 13       		.uleb128 0x13
 2322 011f 11       		.uleb128 0x11
 2323 0120 01       		.uleb128 0x1
 2324 0121 12       		.uleb128 0x12
 2325 0122 06       		.uleb128 0x6
 2326 0123 40       		.uleb128 0x40
 2327 0124 18       		.uleb128 0x18
 2328 0125 9742     		.uleb128 0x2117
 2329 0127 19       		.uleb128 0x19
 2330 0128 00       		.byte	0
 2331 0129 00       		.byte	0
 2332 012a 16       		.uleb128 0x16
 2333 012b 2E       		.uleb128 0x2e
 2334 012c 01       		.byte	0x1
 2335 012d 31       		.uleb128 0x31
 2336 012e 13       		.uleb128 0x13
 2337 012f 11       		.uleb128 0x11
 2338 0130 01       		.uleb128 0x1
 2339 0131 12       		.uleb128 0x12
 2340 0132 06       		.uleb128 0x6
 2341 0133 40       		.uleb128 0x40
 2342 0134 18       		.uleb128 0x18
 2343 0135 9742     		.uleb128 0x2117
 2344 0137 19       		.uleb128 0x19
 2345 0138 01       		.uleb128 0x1
 2346 0139 13       		.uleb128 0x13
 2347 013a 00       		.byte	0
 2348 013b 00       		.byte	0
 2349 013c 17       		.uleb128 0x17
 2350 013d 34       		.uleb128 0x34
 2351 013e 00       		.byte	0
 2352 013f 03       		.uleb128 0x3
 2353 0140 0E       		.uleb128 0xe
 2354 0141 3A       		.uleb128 0x3a
 2355 0142 0B       		.uleb128 0xb
 2356 0143 3B       		.uleb128 0x3b
 2357 0144 0B       		.uleb128 0xb
 2358 0145 49       		.uleb128 0x49
 2359 0146 13       		.uleb128 0x13
 2360 0147 02       		.uleb128 0x2
 2361 0148 17       		.uleb128 0x17
 2362 0149 00       		.byte	0
 2363 014a 00       		.byte	0
 2364 014b 18       		.uleb128 0x18
 2365 014c 2E       		.uleb128 0x2e
 2366 014d 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 72


 2367 014e 3F       		.uleb128 0x3f
 2368 014f 19       		.uleb128 0x19
 2369 0150 03       		.uleb128 0x3
 2370 0151 0E       		.uleb128 0xe
 2371 0152 3A       		.uleb128 0x3a
 2372 0153 0B       		.uleb128 0xb
 2373 0154 3B       		.uleb128 0x3b
 2374 0155 05       		.uleb128 0x5
 2375 0156 27       		.uleb128 0x27
 2376 0157 19       		.uleb128 0x19
 2377 0158 49       		.uleb128 0x49
 2378 0159 13       		.uleb128 0x13
 2379 015a 11       		.uleb128 0x11
 2380 015b 01       		.uleb128 0x1
 2381 015c 12       		.uleb128 0x12
 2382 015d 06       		.uleb128 0x6
 2383 015e 40       		.uleb128 0x40
 2384 015f 18       		.uleb128 0x18
 2385 0160 9742     		.uleb128 0x2117
 2386 0162 19       		.uleb128 0x19
 2387 0163 00       		.byte	0
 2388 0164 00       		.byte	0
 2389 0165 19       		.uleb128 0x19
 2390 0166 2E       		.uleb128 0x2e
 2391 0167 01       		.byte	0x1
 2392 0168 3F       		.uleb128 0x3f
 2393 0169 19       		.uleb128 0x19
 2394 016a 03       		.uleb128 0x3
 2395 016b 0E       		.uleb128 0xe
 2396 016c 3A       		.uleb128 0x3a
 2397 016d 0B       		.uleb128 0xb
 2398 016e 3B       		.uleb128 0x3b
 2399 016f 05       		.uleb128 0x5
 2400 0170 27       		.uleb128 0x27
 2401 0171 19       		.uleb128 0x19
 2402 0172 11       		.uleb128 0x11
 2403 0173 01       		.uleb128 0x1
 2404 0174 12       		.uleb128 0x12
 2405 0175 06       		.uleb128 0x6
 2406 0176 40       		.uleb128 0x40
 2407 0177 18       		.uleb128 0x18
 2408 0178 9742     		.uleb128 0x2117
 2409 017a 19       		.uleb128 0x19
 2410 017b 01       		.uleb128 0x1
 2411 017c 13       		.uleb128 0x13
 2412 017d 00       		.byte	0
 2413 017e 00       		.byte	0
 2414 017f 1A       		.uleb128 0x1a
 2415 0180 05       		.uleb128 0x5
 2416 0181 00       		.byte	0
 2417 0182 03       		.uleb128 0x3
 2418 0183 0E       		.uleb128 0xe
 2419 0184 3A       		.uleb128 0x3a
 2420 0185 0B       		.uleb128 0xb
 2421 0186 3B       		.uleb128 0x3b
 2422 0187 05       		.uleb128 0x5
 2423 0188 49       		.uleb128 0x49
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 73


 2424 0189 13       		.uleb128 0x13
 2425 018a 02       		.uleb128 0x2
 2426 018b 18       		.uleb128 0x18
 2427 018c 00       		.byte	0
 2428 018d 00       		.byte	0
 2429 018e 1B       		.uleb128 0x1b
 2430 018f 34       		.uleb128 0x34
 2431 0190 00       		.byte	0
 2432 0191 31       		.uleb128 0x31
 2433 0192 13       		.uleb128 0x13
 2434 0193 02       		.uleb128 0x2
 2435 0194 18       		.uleb128 0x18
 2436 0195 00       		.byte	0
 2437 0196 00       		.byte	0
 2438 0197 1C       		.uleb128 0x1c
 2439 0198 2E       		.uleb128 0x2e
 2440 0199 01       		.byte	0x1
 2441 019a 3F       		.uleb128 0x3f
 2442 019b 19       		.uleb128 0x19
 2443 019c 03       		.uleb128 0x3
 2444 019d 0E       		.uleb128 0xe
 2445 019e 3A       		.uleb128 0x3a
 2446 019f 0B       		.uleb128 0xb
 2447 01a0 3B       		.uleb128 0x3b
 2448 01a1 05       		.uleb128 0x5
 2449 01a2 27       		.uleb128 0x27
 2450 01a3 19       		.uleb128 0x19
 2451 01a4 49       		.uleb128 0x49
 2452 01a5 13       		.uleb128 0x13
 2453 01a6 11       		.uleb128 0x11
 2454 01a7 01       		.uleb128 0x1
 2455 01a8 12       		.uleb128 0x12
 2456 01a9 06       		.uleb128 0x6
 2457 01aa 40       		.uleb128 0x40
 2458 01ab 18       		.uleb128 0x18
 2459 01ac 9742     		.uleb128 0x2117
 2460 01ae 19       		.uleb128 0x19
 2461 01af 01       		.uleb128 0x1
 2462 01b0 13       		.uleb128 0x13
 2463 01b1 00       		.byte	0
 2464 01b2 00       		.byte	0
 2465 01b3 1D       		.uleb128 0x1d
 2466 01b4 34       		.uleb128 0x34
 2467 01b5 00       		.byte	0
 2468 01b6 03       		.uleb128 0x3
 2469 01b7 0E       		.uleb128 0xe
 2470 01b8 3A       		.uleb128 0x3a
 2471 01b9 0B       		.uleb128 0xb
 2472 01ba 3B       		.uleb128 0x3b
 2473 01bb 05       		.uleb128 0x5
 2474 01bc 49       		.uleb128 0x49
 2475 01bd 13       		.uleb128 0x13
 2476 01be 02       		.uleb128 0x2
 2477 01bf 17       		.uleb128 0x17
 2478 01c0 00       		.byte	0
 2479 01c1 00       		.byte	0
 2480 01c2 1E       		.uleb128 0x1e
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 74


 2481 01c3 1D       		.uleb128 0x1d
 2482 01c4 01       		.byte	0x1
 2483 01c5 31       		.uleb128 0x31
 2484 01c6 13       		.uleb128 0x13
 2485 01c7 52       		.uleb128 0x52
 2486 01c8 01       		.uleb128 0x1
 2487 01c9 55       		.uleb128 0x55
 2488 01ca 17       		.uleb128 0x17
 2489 01cb 58       		.uleb128 0x58
 2490 01cc 0B       		.uleb128 0xb
 2491 01cd 59       		.uleb128 0x59
 2492 01ce 05       		.uleb128 0x5
 2493 01cf 01       		.uleb128 0x1
 2494 01d0 13       		.uleb128 0x13
 2495 01d1 00       		.byte	0
 2496 01d2 00       		.byte	0
 2497 01d3 1F       		.uleb128 0x1f
 2498 01d4 1D       		.uleb128 0x1d
 2499 01d5 01       		.byte	0x1
 2500 01d6 31       		.uleb128 0x31
 2501 01d7 13       		.uleb128 0x13
 2502 01d8 52       		.uleb128 0x52
 2503 01d9 01       		.uleb128 0x1
 2504 01da 55       		.uleb128 0x55
 2505 01db 17       		.uleb128 0x17
 2506 01dc 58       		.uleb128 0x58
 2507 01dd 0B       		.uleb128 0xb
 2508 01de 59       		.uleb128 0x59
 2509 01df 05       		.uleb128 0x5
 2510 01e0 00       		.byte	0
 2511 01e1 00       		.byte	0
 2512 01e2 20       		.uleb128 0x20
 2513 01e3 05       		.uleb128 0x5
 2514 01e4 00       		.byte	0
 2515 01e5 31       		.uleb128 0x31
 2516 01e6 13       		.uleb128 0x13
 2517 01e7 02       		.uleb128 0x2
 2518 01e8 18       		.uleb128 0x18
 2519 01e9 00       		.byte	0
 2520 01ea 00       		.byte	0
 2521 01eb 21       		.uleb128 0x21
 2522 01ec 05       		.uleb128 0x5
 2523 01ed 00       		.byte	0
 2524 01ee 31       		.uleb128 0x31
 2525 01ef 13       		.uleb128 0x13
 2526 01f0 00       		.byte	0
 2527 01f1 00       		.byte	0
 2528 01f2 22       		.uleb128 0x22
 2529 01f3 0F       		.uleb128 0xf
 2530 01f4 00       		.byte	0
 2531 01f5 0B       		.uleb128 0xb
 2532 01f6 0B       		.uleb128 0xb
 2533 01f7 49       		.uleb128 0x49
 2534 01f8 13       		.uleb128 0x13
 2535 01f9 00       		.byte	0
 2536 01fa 00       		.byte	0
 2537 01fb 23       		.uleb128 0x23
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 75


 2538 01fc 26       		.uleb128 0x26
 2539 01fd 00       		.byte	0
 2540 01fe 49       		.uleb128 0x49
 2541 01ff 13       		.uleb128 0x13
 2542 0200 00       		.byte	0
 2543 0201 00       		.byte	0
 2544 0202 24       		.uleb128 0x24
 2545 0203 05       		.uleb128 0x5
 2546 0204 00       		.byte	0
 2547 0205 03       		.uleb128 0x3
 2548 0206 0E       		.uleb128 0xe
 2549 0207 3A       		.uleb128 0x3a
 2550 0208 0B       		.uleb128 0xb
 2551 0209 3B       		.uleb128 0x3b
 2552 020a 05       		.uleb128 0x5
 2553 020b 49       		.uleb128 0x49
 2554 020c 13       		.uleb128 0x13
 2555 020d 02       		.uleb128 0x2
 2556 020e 17       		.uleb128 0x17
 2557 020f 00       		.byte	0
 2558 0210 00       		.byte	0
 2559 0211 25       		.uleb128 0x25
 2560 0212 05       		.uleb128 0x5
 2561 0213 00       		.byte	0
 2562 0214 31       		.uleb128 0x31
 2563 0215 13       		.uleb128 0x13
 2564 0216 02       		.uleb128 0x2
 2565 0217 17       		.uleb128 0x17
 2566 0218 00       		.byte	0
 2567 0219 00       		.byte	0
 2568 021a 26       		.uleb128 0x26
 2569 021b 34       		.uleb128 0x34
 2570 021c 00       		.byte	0
 2571 021d 03       		.uleb128 0x3
 2572 021e 0E       		.uleb128 0xe
 2573 021f 3A       		.uleb128 0x3a
 2574 0220 0B       		.uleb128 0xb
 2575 0221 3B       		.uleb128 0x3b
 2576 0222 05       		.uleb128 0x5
 2577 0223 49       		.uleb128 0x49
 2578 0224 13       		.uleb128 0x13
 2579 0225 02       		.uleb128 0x2
 2580 0226 18       		.uleb128 0x18
 2581 0227 00       		.byte	0
 2582 0228 00       		.byte	0
 2583 0229 27       		.uleb128 0x27
 2584 022a 34       		.uleb128 0x34
 2585 022b 00       		.byte	0
 2586 022c 03       		.uleb128 0x3
 2587 022d 0E       		.uleb128 0xe
 2588 022e 3A       		.uleb128 0x3a
 2589 022f 0B       		.uleb128 0xb
 2590 0230 3B       		.uleb128 0x3b
 2591 0231 0B       		.uleb128 0xb
 2592 0232 49       		.uleb128 0x49
 2593 0233 13       		.uleb128 0x13
 2594 0234 3F       		.uleb128 0x3f
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 76


 2595 0235 19       		.uleb128 0x19
 2596 0236 02       		.uleb128 0x2
 2597 0237 18       		.uleb128 0x18
 2598 0238 00       		.byte	0
 2599 0239 00       		.byte	0
 2600 023a 28       		.uleb128 0x28
 2601 023b 2E       		.uleb128 0x2e
 2602 023c 00       		.byte	0
 2603 023d 3F       		.uleb128 0x3f
 2604 023e 19       		.uleb128 0x19
 2605 023f 03       		.uleb128 0x3
 2606 0240 0E       		.uleb128 0xe
 2607 0241 3A       		.uleb128 0x3a
 2608 0242 0B       		.uleb128 0xb
 2609 0243 3B       		.uleb128 0x3b
 2610 0244 0B       		.uleb128 0xb
 2611 0245 27       		.uleb128 0x27
 2612 0246 19       		.uleb128 0x19
 2613 0247 49       		.uleb128 0x49
 2614 0248 13       		.uleb128 0x13
 2615 0249 3C       		.uleb128 0x3c
 2616 024a 19       		.uleb128 0x19
 2617 024b 00       		.byte	0
 2618 024c 00       		.byte	0
 2619 024d 29       		.uleb128 0x29
 2620 024e 2E       		.uleb128 0x2e
 2621 024f 00       		.byte	0
 2622 0250 3F       		.uleb128 0x3f
 2623 0251 19       		.uleb128 0x19
 2624 0252 03       		.uleb128 0x3
 2625 0253 0E       		.uleb128 0xe
 2626 0254 3A       		.uleb128 0x3a
 2627 0255 0B       		.uleb128 0xb
 2628 0256 3B       		.uleb128 0x3b
 2629 0257 0B       		.uleb128 0xb
 2630 0258 27       		.uleb128 0x27
 2631 0259 19       		.uleb128 0x19
 2632 025a 3C       		.uleb128 0x3c
 2633 025b 19       		.uleb128 0x19
 2634 025c 00       		.byte	0
 2635 025d 00       		.byte	0
 2636 025e 2A       		.uleb128 0x2a
 2637 025f 2E       		.uleb128 0x2e
 2638 0260 01       		.byte	0x1
 2639 0261 3F       		.uleb128 0x3f
 2640 0262 19       		.uleb128 0x19
 2641 0263 03       		.uleb128 0x3
 2642 0264 0E       		.uleb128 0xe
 2643 0265 3A       		.uleb128 0x3a
 2644 0266 0B       		.uleb128 0xb
 2645 0267 3B       		.uleb128 0x3b
 2646 0268 0B       		.uleb128 0xb
 2647 0269 27       		.uleb128 0x27
 2648 026a 19       		.uleb128 0x19
 2649 026b 3C       		.uleb128 0x3c
 2650 026c 19       		.uleb128 0x19
 2651 026d 01       		.uleb128 0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 77


 2652 026e 13       		.uleb128 0x13
 2653 026f 00       		.byte	0
 2654 0270 00       		.byte	0
 2655 0271 2B       		.uleb128 0x2b
 2656 0272 05       		.uleb128 0x5
 2657 0273 00       		.byte	0
 2658 0274 49       		.uleb128 0x49
 2659 0275 13       		.uleb128 0x13
 2660 0276 00       		.byte	0
 2661 0277 00       		.byte	0
 2662 0278 00       		.byte	0
 2663              		.section	.debug_loc,"",%progbits
 2664              	.Ldebug_loc0:
 2665              	.LLST0:
 2666 0000 34000000 		.4byte	.LVL1
 2667 0004 5A000000 		.4byte	.LVL4
 2668 0008 0100     		.2byte	0x1
 2669 000a 54       		.byte	0x54
 2670 000b 00000000 		.4byte	0
 2671 000f 00000000 		.4byte	0
 2672              	.LLST1:
 2673 0013 0C000000 		.4byte	.LVL6
 2674 0017 32000000 		.4byte	.LVL9
 2675 001b 0100     		.2byte	0x1
 2676 001d 54       		.byte	0x54
 2677 001e 00000000 		.4byte	0
 2678 0022 00000000 		.4byte	0
 2679              	.LLST2:
 2680 0026 0C000000 		.4byte	.LVL11
 2681 002a 2E000000 		.4byte	.LVL14
 2682 002e 0100     		.2byte	0x1
 2683 0030 54       		.byte	0x54
 2684 0031 00000000 		.4byte	0
 2685 0035 00000000 		.4byte	0
 2686              	.LLST3:
 2687 0039 00000000 		.4byte	.LVL19
 2688 003d 10000000 		.4byte	.LVL21
 2689 0041 0200     		.2byte	0x2
 2690 0043 30       		.byte	0x30
 2691 0044 9F       		.byte	0x9f
 2692 0045 10000000 		.4byte	.LVL21
 2693 0049 28000000 		.4byte	.LFE9
 2694 004d 0100     		.2byte	0x1
 2695 004f 50       		.byte	0x50
 2696 0050 00000000 		.4byte	0
 2697 0054 00000000 		.4byte	0
 2698              	.LLST4:
 2699 0058 08000000 		.4byte	.LVL20
 2700 005c 14000000 		.4byte	.LVL22
 2701 0060 0100     		.2byte	0x1
 2702 0062 53       		.byte	0x53
 2703 0063 00000000 		.4byte	0
 2704 0067 00000000 		.4byte	0
 2705              	.LLST5:
 2706 006b 04000000 		.4byte	.LVL26
 2707 006f 06000000 		.4byte	.LVL27
 2708 0073 0A00     		.2byte	0xa
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 78


 2709 0075 70       		.byte	0x70
 2710 0076 00       		.sleb128 0
 2711 0077 08       		.byte	0x8
 2712 0078 20       		.byte	0x20
 2713 0079 1A       		.byte	0x1a
 2714 007a 48       		.byte	0x48
 2715 007b 24       		.byte	0x24
 2716 007c 30       		.byte	0x30
 2717 007d 2E       		.byte	0x2e
 2718 007e 9F       		.byte	0x9f
 2719 007f 00000000 		.4byte	0
 2720 0083 00000000 		.4byte	0
 2721              	.LLST6:
 2722 0087 06000000 		.4byte	.LVL28
 2723 008b 1B000000 		.4byte	.LVL29-1
 2724 008f 0100     		.2byte	0x1
 2725 0091 50       		.byte	0x50
 2726 0092 00000000 		.4byte	0
 2727 0096 00000000 		.4byte	0
 2728              	.LLST7:
 2729 009a 00000000 		.4byte	.LVL36
 2730 009e 18000000 		.4byte	.LVL37
 2731 00a2 0200     		.2byte	0x2
 2732 00a4 30       		.byte	0x30
 2733 00a5 9F       		.byte	0x9f
 2734 00a6 24000000 		.4byte	.LVL38
 2735 00aa 2A000000 		.4byte	.LVL39
 2736 00ae 0100     		.2byte	0x1
 2737 00b0 54       		.byte	0x54
 2738 00b1 00000000 		.4byte	0
 2739 00b5 00000000 		.4byte	0
 2740              	.LLST8:
 2741 00b9 00000000 		.4byte	.LVL40
 2742 00bd 1C000000 		.4byte	.LVL42
 2743 00c1 0100     		.2byte	0x1
 2744 00c3 50       		.byte	0x50
 2745 00c4 1C000000 		.4byte	.LVL42
 2746 00c8 3C000000 		.4byte	.LFE21
 2747 00cc 0400     		.2byte	0x4
 2748 00ce F3       		.byte	0xf3
 2749 00cf 01       		.uleb128 0x1
 2750 00d0 50       		.byte	0x50
 2751 00d1 9F       		.byte	0x9f
 2752 00d2 00000000 		.4byte	0
 2753 00d6 00000000 		.4byte	0
 2754              	.LLST9:
 2755 00da 00000000 		.4byte	.LVL40
 2756 00de 18000000 		.4byte	.LVL41
 2757 00e2 0100     		.2byte	0x1
 2758 00e4 51       		.byte	0x51
 2759 00e5 18000000 		.4byte	.LVL41
 2760 00e9 3C000000 		.4byte	.LFE21
 2761 00ed 0400     		.2byte	0x4
 2762 00ef F3       		.byte	0xf3
 2763 00f0 01       		.uleb128 0x1
 2764 00f1 51       		.byte	0x51
 2765 00f2 9F       		.byte	0x9f
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 79


 2766 00f3 00000000 		.4byte	0
 2767 00f7 00000000 		.4byte	0
 2768              	.LLST10:
 2769 00fb 00000000 		.4byte	.LVL40
 2770 00ff 1C000000 		.4byte	.LVL42
 2771 0103 0200     		.2byte	0x2
 2772 0105 30       		.byte	0x30
 2773 0106 9F       		.byte	0x9f
 2774 0107 1C000000 		.4byte	.LVL42
 2775 010b 26000000 		.4byte	.LVL44
 2776 010f 0700     		.2byte	0x7
 2777 0111 70       		.byte	0x70
 2778 0112 00       		.sleb128 0
 2779 0113 F3       		.byte	0xf3
 2780 0114 01       		.uleb128 0x1
 2781 0115 50       		.byte	0x50
 2782 0116 1C       		.byte	0x1c
 2783 0117 9F       		.byte	0x9f
 2784 0118 00000000 		.4byte	0
 2785 011c 00000000 		.4byte	0
 2786              	.LLST11:
 2787 0120 1E000000 		.4byte	.LVL43
 2788 0124 2C000000 		.4byte	.LVL45
 2789 0128 0100     		.2byte	0x1
 2790 012a 54       		.byte	0x54
 2791 012b 00000000 		.4byte	0
 2792 012f 00000000 		.4byte	0
 2793              	.LLST12:
 2794 0133 1A000000 		.4byte	.LVL47
 2795 0137 36000000 		.4byte	.LVL49
 2796 013b 0200     		.2byte	0x2
 2797 013d 3D       		.byte	0x3d
 2798 013e 9F       		.byte	0x9f
 2799 013f 00000000 		.4byte	0
 2800 0143 00000000 		.4byte	0
 2801              	.LLST13:
 2802 0147 28000000 		.4byte	.LVL48
 2803 014b 36000000 		.4byte	.LVL49
 2804 014f 0200     		.2byte	0x2
 2805 0151 3A       		.byte	0x3a
 2806 0152 9F       		.byte	0x9f
 2807 0153 00000000 		.4byte	0
 2808 0157 00000000 		.4byte	0
 2809              	.LLST14:
 2810 015b 08000000 		.4byte	.LVL50
 2811 015f 0C000000 		.4byte	.LVL51
 2812 0163 0100     		.2byte	0x1
 2813 0165 53       		.byte	0x53
 2814 0166 0C000000 		.4byte	.LVL51
 2815 016a 0E000000 		.4byte	.LVL52
 2816 016e 0100     		.2byte	0x1
 2817 0170 50       		.byte	0x50
 2818 0171 0E000000 		.4byte	.LVL52
 2819 0175 12000000 		.4byte	.LVL53
 2820 0179 0100     		.2byte	0x1
 2821 017b 53       		.byte	0x53
 2822 017c 00000000 		.4byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 80


 2823 0180 00000000 		.4byte	0
 2824              	.LLST15:
 2825 0184 06000000 		.4byte	.LVL54
 2826 0188 1B000000 		.4byte	.LVL55-1
 2827 018c 0100     		.2byte	0x1
 2828 018e 50       		.byte	0x50
 2829 018f 00000000 		.4byte	0
 2830 0193 00000000 		.4byte	0
 2831              	.LLST16:
 2832 0197 00000000 		.4byte	.LVL56
 2833 019b 34000000 		.4byte	.LVL59
 2834 019f 0100     		.2byte	0x1
 2835 01a1 50       		.byte	0x50
 2836 01a2 34000000 		.4byte	.LVL59
 2837 01a6 40000000 		.4byte	.LVL60
 2838 01aa 0400     		.2byte	0x4
 2839 01ac F3       		.byte	0xf3
 2840 01ad 01       		.uleb128 0x1
 2841 01ae 50       		.byte	0x50
 2842 01af 9F       		.byte	0x9f
 2843 01b0 40000000 		.4byte	.LVL60
 2844 01b4 68000000 		.4byte	.LFE25
 2845 01b8 0100     		.2byte	0x1
 2846 01ba 50       		.byte	0x50
 2847 01bb 00000000 		.4byte	0
 2848 01bf 00000000 		.4byte	0
 2849              	.LLST17:
 2850 01c3 24000000 		.4byte	.LVL57
 2851 01c7 2A000000 		.4byte	.LVL58
 2852 01cb 0100     		.2byte	0x1
 2853 01cd 53       		.byte	0x53
 2854 01ce 50000000 		.4byte	.LVL61
 2855 01d2 68000000 		.4byte	.LFE25
 2856 01d6 0100     		.2byte	0x1
 2857 01d8 53       		.byte	0x53
 2858 01d9 00000000 		.4byte	0
 2859 01dd 00000000 		.4byte	0
 2860              		.section	.debug_aranges,"",%progbits
 2861 0000 EC000000 		.4byte	0xec
 2862 0004 0200     		.2byte	0x2
 2863 0006 00000000 		.4byte	.Ldebug_info0
 2864 000a 04       		.byte	0x4
 2865 000b 00       		.byte	0
 2866 000c 0000     		.2byte	0
 2867 000e 0000     		.2byte	0
 2868 0010 00000000 		.4byte	.LFB0
 2869 0014 80000000 		.4byte	.LFE0-.LFB0
 2870 0018 00000000 		.4byte	.LFB1
 2871 001c 34000000 		.4byte	.LFE1-.LFB1
 2872 0020 00000000 		.4byte	.LFB2
 2873 0024 40000000 		.4byte	.LFE2-.LFB2
 2874 0028 00000000 		.4byte	.LFB3
 2875 002c 3C000000 		.4byte	.LFE3-.LFB3
 2876 0030 00000000 		.4byte	.LFB4
 2877 0034 04000000 		.4byte	.LFE4-.LFB4
 2878 0038 00000000 		.4byte	.LFB5
 2879 003c 02000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 81


 2880 0040 00000000 		.4byte	.LFB6
 2881 0044 0C000000 		.4byte	.LFE6-.LFB6
 2882 0048 00000000 		.4byte	.LFB7
 2883 004c 0C000000 		.4byte	.LFE7-.LFB7
 2884 0050 00000000 		.4byte	.LFB8
 2885 0054 10000000 		.4byte	.LFE8-.LFB8
 2886 0058 00000000 		.4byte	.LFB9
 2887 005c 28000000 		.4byte	.LFE9-.LFB9
 2888 0060 00000000 		.4byte	.LFB10
 2889 0064 1C000000 		.4byte	.LFE10-.LFB10
 2890 0068 00000000 		.4byte	.LFB11
 2891 006c 10000000 		.4byte	.LFE11-.LFB11
 2892 0070 00000000 		.4byte	.LFB12
 2893 0074 24000000 		.4byte	.LFE12-.LFB12
 2894 0078 00000000 		.4byte	.LFB13
 2895 007c 02000000 		.4byte	.LFE13-.LFB13
 2896 0080 00000000 		.4byte	.LFB14
 2897 0084 0C000000 		.4byte	.LFE14-.LFB14
 2898 0088 00000000 		.4byte	.LFB15
 2899 008c 0C000000 		.4byte	.LFE15-.LFB15
 2900 0090 00000000 		.4byte	.LFB16
 2901 0094 0C000000 		.4byte	.LFE16-.LFB16
 2902 0098 00000000 		.4byte	.LFB17
 2903 009c 18000000 		.4byte	.LFE17-.LFB17
 2904 00a0 00000000 		.4byte	.LFB18
 2905 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2906 00a8 00000000 		.4byte	.LFB19
 2907 00ac 18000000 		.4byte	.LFE19-.LFB19
 2908 00b0 00000000 		.4byte	.LFB20
 2909 00b4 38000000 		.4byte	.LFE20-.LFB20
 2910 00b8 00000000 		.4byte	.LFB21
 2911 00bc 3C000000 		.4byte	.LFE21-.LFB21
 2912 00c0 00000000 		.4byte	.LFB22
 2913 00c4 44000000 		.4byte	.LFE22-.LFB22
 2914 00c8 00000000 		.4byte	.LFB23
 2915 00cc 20000000 		.4byte	.LFE23-.LFB23
 2916 00d0 00000000 		.4byte	.LFB24
 2917 00d4 24000000 		.4byte	.LFE24-.LFB24
 2918 00d8 00000000 		.4byte	.LFB25
 2919 00dc 68000000 		.4byte	.LFE25-.LFB25
 2920 00e0 00000000 		.4byte	.LFB26
 2921 00e4 02000000 		.4byte	.LFE26-.LFB26
 2922 00e8 00000000 		.4byte	0
 2923 00ec 00000000 		.4byte	0
 2924              		.section	.debug_ranges,"",%progbits
 2925              	.Ldebug_ranges0:
 2926 0000 2A000000 		.4byte	.LBB24
 2927 0004 36000000 		.4byte	.LBE24
 2928 0008 36000000 		.4byte	.LBB27
 2929 000c 5A000000 		.4byte	.LBE27
 2930 0010 00000000 		.4byte	0
 2931 0014 00000000 		.4byte	0
 2932 0018 02000000 		.4byte	.LBB28
 2933 001c 04000000 		.4byte	.LBE28
 2934 0020 06000000 		.4byte	.LBB34
 2935 0024 08000000 		.4byte	.LBE34
 2936 0028 00000000 		.4byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 82


 2937 002c 00000000 		.4byte	0
 2938 0030 04000000 		.4byte	.LBB31
 2939 0034 06000000 		.4byte	.LBE31
 2940 0038 08000000 		.4byte	.LBB35
 2941 003c 0A000000 		.4byte	.LBE35
 2942 0040 00000000 		.4byte	0
 2943 0044 00000000 		.4byte	0
 2944 0048 12000000 		.4byte	.LBB36
 2945 004c 1E000000 		.4byte	.LBE36
 2946 0050 20000000 		.4byte	.LBB39
 2947 0054 22000000 		.4byte	.LBE39
 2948 0058 00000000 		.4byte	0
 2949 005c 00000000 		.4byte	0
 2950 0060 0E000000 		.4byte	.LBB40
 2951 0064 1C000000 		.4byte	.LBE40
 2952 0068 1E000000 		.4byte	.LBB43
 2953 006c 28000000 		.4byte	.LBE43
 2954 0070 00000000 		.4byte	0
 2955 0074 00000000 		.4byte	0
 2956 0078 08000000 		.4byte	.LBB44
 2957 007c 12000000 		.4byte	.LBE44
 2958 0080 14000000 		.4byte	.LBB53
 2959 0084 16000000 		.4byte	.LBE53
 2960 0088 18000000 		.4byte	.LBB55
 2961 008c 1A000000 		.4byte	.LBE55
 2962 0090 00000000 		.4byte	0
 2963 0094 00000000 		.4byte	0
 2964 0098 12000000 		.4byte	.LBB48
 2965 009c 14000000 		.4byte	.LBE48
 2966 00a0 16000000 		.4byte	.LBB54
 2967 00a4 18000000 		.4byte	.LBE54
 2968 00a8 1A000000 		.4byte	.LBB56
 2969 00ac 24000000 		.4byte	.LBE56
 2970 00b0 26000000 		.4byte	.LBB60
 2971 00b4 28000000 		.4byte	.LBE60
 2972 00b8 00000000 		.4byte	0
 2973 00bc 00000000 		.4byte	0
 2974 00c0 24000000 		.4byte	.LBB57
 2975 00c4 26000000 		.4byte	.LBE57
 2976 00c8 28000000 		.4byte	.LBB61
 2977 00cc 36000000 		.4byte	.LBE61
 2978 00d0 00000000 		.4byte	0
 2979 00d4 00000000 		.4byte	0
 2980 00d8 0A000000 		.4byte	.LBB62
 2981 00dc 3E000000 		.4byte	.LBE62
 2982 00e0 40000000 		.4byte	.LBB63
 2983 00e4 68000000 		.4byte	.LBE63
 2984 00e8 00000000 		.4byte	0
 2985 00ec 00000000 		.4byte	0
 2986 00f0 00000000 		.4byte	.LFB0
 2987 00f4 80000000 		.4byte	.LFE0
 2988 00f8 00000000 		.4byte	.LFB1
 2989 00fc 34000000 		.4byte	.LFE1
 2990 0100 00000000 		.4byte	.LFB2
 2991 0104 40000000 		.4byte	.LFE2
 2992 0108 00000000 		.4byte	.LFB3
 2993 010c 3C000000 		.4byte	.LFE3
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 83


 2994 0110 00000000 		.4byte	.LFB4
 2995 0114 04000000 		.4byte	.LFE4
 2996 0118 00000000 		.4byte	.LFB5
 2997 011c 02000000 		.4byte	.LFE5
 2998 0120 00000000 		.4byte	.LFB6
 2999 0124 0C000000 		.4byte	.LFE6
 3000 0128 00000000 		.4byte	.LFB7
 3001 012c 0C000000 		.4byte	.LFE7
 3002 0130 00000000 		.4byte	.LFB8
 3003 0134 10000000 		.4byte	.LFE8
 3004 0138 00000000 		.4byte	.LFB9
 3005 013c 28000000 		.4byte	.LFE9
 3006 0140 00000000 		.4byte	.LFB10
 3007 0144 1C000000 		.4byte	.LFE10
 3008 0148 00000000 		.4byte	.LFB11
 3009 014c 10000000 		.4byte	.LFE11
 3010 0150 00000000 		.4byte	.LFB12
 3011 0154 24000000 		.4byte	.LFE12
 3012 0158 00000000 		.4byte	.LFB13
 3013 015c 02000000 		.4byte	.LFE13
 3014 0160 00000000 		.4byte	.LFB14
 3015 0164 0C000000 		.4byte	.LFE14
 3016 0168 00000000 		.4byte	.LFB15
 3017 016c 0C000000 		.4byte	.LFE15
 3018 0170 00000000 		.4byte	.LFB16
 3019 0174 0C000000 		.4byte	.LFE16
 3020 0178 00000000 		.4byte	.LFB17
 3021 017c 18000000 		.4byte	.LFE17
 3022 0180 00000000 		.4byte	.LFB18
 3023 0184 0C000000 		.4byte	.LFE18
 3024 0188 00000000 		.4byte	.LFB19
 3025 018c 18000000 		.4byte	.LFE19
 3026 0190 00000000 		.4byte	.LFB20
 3027 0194 38000000 		.4byte	.LFE20
 3028 0198 00000000 		.4byte	.LFB21
 3029 019c 3C000000 		.4byte	.LFE21
 3030 01a0 00000000 		.4byte	.LFB22
 3031 01a4 44000000 		.4byte	.LFE22
 3032 01a8 00000000 		.4byte	.LFB23
 3033 01ac 20000000 		.4byte	.LFE23
 3034 01b0 00000000 		.4byte	.LFB24
 3035 01b4 24000000 		.4byte	.LFE24
 3036 01b8 00000000 		.4byte	.LFB25
 3037 01bc 68000000 		.4byte	.LFE25
 3038 01c0 00000000 		.4byte	.LFB26
 3039 01c4 02000000 		.4byte	.LFE26
 3040 01c8 00000000 		.4byte	0
 3041 01cc 00000000 		.4byte	0
 3042              		.section	.debug_line,"",%progbits
 3043              	.Ldebug_line0:
 3044 0000 A0030000 		.section	.debug_str,"MS",%progbits,1
 3044      02006900 
 3044      00000201 
 3044      FB0E0D00 
 3044      01010101 
 3045              	.LASF10:
 3046 0000 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 84


 3046      313600
 3047              	.LASF61:
 3048 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3048      69744372 
 3048      69746963 
 3048      616C5365 
 3048      6374696F 
 3049              	.LASF43:
 3050 001d 74784461 		.ascii	"txDataByte\000"
 3050      74614279 
 3050      746500
 3051              	.LASF47:
 3052 0028 73747269 		.ascii	"string\000"
 3052      6E6700
 3053              	.LASF46:
 3054 002f 55415254 		.ascii	"UART_Out_PutString\000"
 3054      5F4F7574 
 3054      5F507574 
 3054      53747269 
 3054      6E6700
 3055              	.LASF7:
 3056 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 3056      206C6F6E 
 3056      6720756E 
 3056      7369676E 
 3056      65642069 
 3057              	.LASF35:
 3058 0059 55415254 		.ascii	"UART_Out_ClearRxBuffer\000"
 3058      5F4F7574 
 3058      5F436C65 
 3058      61725278 
 3058      42756666 
 3059              	.LASF65:
 3060 0070 433A5C55 		.ascii	"C:\\Users\\faithc\\Box Sync\\Feniex Firmware Files\\"
 3060      73657273 
 3060      5C666169 
 3060      7468635C 
 3060      426F7820 
 3061 009f 414C425C 		.ascii	"ALB\\81-00022-01 ALB LED Driver\\81-00022-01.cydsn\000"
 3061      38312D30 
 3061      30303232 
 3061      2D303120 
 3061      414C4220 
 3062              	.LASF6:
 3063 00d0 6C6F6E67 		.ascii	"long long int\000"
 3063      206C6F6E 
 3063      6720696E 
 3063      7400
 3064              	.LASF0:
 3065 00de 7369676E 		.ascii	"signed char\000"
 3065      65642063 
 3065      68617200 
 3066              	.LASF57:
 3067 00ea 74785065 		.ascii	"txPeriod\000"
 3067      72696F64 
 3067      00
 3068              	.LASF66:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 85


 3069 00f3 55415254 		.ascii	"UART_Out_initVar\000"
 3069      5F4F7574 
 3069      5F696E69 
 3069      74566172 
 3069      00
 3070              	.LASF4:
 3071 0104 6C6F6E67 		.ascii	"long int\000"
 3071      20696E74 
 3071      00
 3072              	.LASF9:
 3073 010d 75696E74 		.ascii	"uint8\000"
 3073      3800
 3074              	.LASF12:
 3075 0113 646F7562 		.ascii	"double\000"
 3075      6C6500
 3076              	.LASF37:
 3077 011a 61646472 		.ascii	"addressMode\000"
 3077      6573734D 
 3077      6F646500 
 3078              	.LASF64:
 3079 0126 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_Out.c\000"
 3079      6E657261 
 3079      7465645F 
 3079      536F7572 
 3079      63655C50 
 3080              	.LASF49:
 3081 014a 55415254 		.ascii	"UART_Out_PutArray\000"
 3081      5F4F7574 
 3081      5F507574 
 3081      41727261 
 3081      7900
 3082              	.LASF28:
 3083 015c 636F6E74 		.ascii	"control\000"
 3083      726F6C00 
 3084              	.LASF55:
 3085 0164 7265744D 		.ascii	"retMode\000"
 3085      6F646500 
 3086              	.LASF8:
 3087 016c 756E7369 		.ascii	"unsigned int\000"
 3087      676E6564 
 3087      20696E74 
 3087      00
 3088              	.LASF17:
 3089 0179 55415254 		.ascii	"UART_Out_ReadRxStatus\000"
 3089      5F4F7574 
 3089      5F526561 
 3089      64527853 
 3089      74617475 
 3090              	.LASF5:
 3091 018f 6C6F6E67 		.ascii	"long unsigned int\000"
 3091      20756E73 
 3091      69676E65 
 3091      6420696E 
 3091      7400
 3092              	.LASF21:
 3093 01a1 55415254 		.ascii	"UART_Out_PutChar\000"
 3093      5F4F7574 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 86


 3093      5F507574 
 3093      43686172 
 3093      00
 3094              	.LASF50:
 3095 01b2 62797465 		.ascii	"byteCount\000"
 3095      436F756E 
 3095      7400
 3096              	.LASF22:
 3097 01bc 55415254 		.ascii	"UART_Out_Enable\000"
 3097      5F4F7574 
 3097      5F456E61 
 3097      626C6500 
 3098              	.LASF34:
 3099 01cc 73697A65 		.ascii	"size\000"
 3099      00
 3100              	.LASF3:
 3101 01d1 73686F72 		.ascii	"short unsigned int\000"
 3101      7420756E 
 3101      7369676E 
 3101      65642069 
 3101      6E7400
 3102              	.LASF25:
 3103 01e4 55415254 		.ascii	"UART_Out_Stop\000"
 3103      5F4F7574 
 3103      5F53746F 
 3103      7000
 3104              	.LASF48:
 3105 01f2 62756649 		.ascii	"bufIndex\000"
 3105      6E646578 
 3105      00
 3106              	.LASF33:
 3107 01fb 55415254 		.ascii	"UART_Out_GetRxBufferSize\000"
 3107      5F4F7574 
 3107      5F476574 
 3107      52784275 
 3107      66666572 
 3108              	.LASF67:
 3109 0214 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3109      74657243 
 3109      72697469 
 3109      63616C53 
 3109      65637469 
 3110              	.LASF29:
 3111 022b 696E7453 		.ascii	"intSrc\000"
 3111      726300
 3112              	.LASF62:
 3113 0232 55415254 		.ascii	"UART_Out_IntClock_Stop\000"
 3113      5F4F7574 
 3113      5F496E74 
 3113      436C6F63 
 3113      6B5F5374 
 3114              	.LASF58:
 3115 0249 55415254 		.ascii	"UART_Out_SetTxAddressMode\000"
 3115      5F4F7574 
 3115      5F536574 
 3115      54784164 
 3115      64726573 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 87


 3116              	.LASF24:
 3117 0263 55415254 		.ascii	"UART_Out_Start\000"
 3117      5F4F7574 
 3117      5F537461 
 3117      727400
 3118              	.LASF32:
 3119 0272 55415254 		.ascii	"UART_Out_GetByte\000"
 3119      5F4F7574 
 3119      5F476574 
 3119      42797465 
 3119      00
 3120              	.LASF56:
 3121 0283 746D7053 		.ascii	"tmpStat\000"
 3121      74617400 
 3122              	.LASF51:
 3123 028b 55415254 		.ascii	"UART_Out_PutCRLF\000"
 3123      5F4F7574 
 3123      5F507574 
 3123      43524C46 
 3123      00
 3124              	.LASF16:
 3125 029c 73697A65 		.ascii	"sizetype\000"
 3125      74797065 
 3125      00
 3126              	.LASF53:
 3127 02a5 55415254 		.ascii	"UART_Out_ClearTxBuffer\000"
 3127      5F4F7574 
 3127      5F436C65 
 3127      61725478 
 3127      42756666 
 3128              	.LASF60:
 3129 02bc 55415254 		.ascii	"UART_Out_IntClock_Start\000"
 3129      5F4F7574 
 3129      5F496E74 
 3129      436C6F63 
 3129      6B5F5374 
 3130              	.LASF39:
 3131 02d4 61646472 		.ascii	"address\000"
 3131      65737300 
 3132              	.LASF54:
 3133 02dc 55415254 		.ascii	"UART_Out_SendBreak\000"
 3133      5F4F7574 
 3133      5F53656E 
 3133      64427265 
 3133      616B00
 3134              	.LASF30:
 3135 02ef 72785374 		.ascii	"rxStatus\000"
 3135      61747573 
 3135      00
 3136              	.LASF26:
 3137 02f8 55415254 		.ascii	"UART_Out_WriteControlRegister\000"
 3137      5F4F7574 
 3137      5F577269 
 3137      7465436F 
 3137      6E74726F 
 3138              	.LASF11:
 3139 0316 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 88


 3139      7400
 3140              	.LASF63:
 3141 031c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3141      4320342E 
 3141      392E3320 
 3141      32303135 
 3141      30333033 
 3142 034f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3142      20726576 
 3142      6973696F 
 3142      6E203232 
 3142      31323230 
 3143 0382 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 3143      66756E63 
 3143      74696F6E 
 3143      2D736563 
 3143      74696F6E 
 3144              	.LASF15:
 3145 03aa 72656738 		.ascii	"reg8\000"
 3145      00
 3146              	.LASF1:
 3147 03af 756E7369 		.ascii	"unsigned char\000"
 3147      676E6564 
 3147      20636861 
 3147      7200
 3148              	.LASF36:
 3149 03bd 55415254 		.ascii	"UART_Out_SetRxAddressMode\000"
 3149      5F4F7574 
 3149      5F536574 
 3149      52784164 
 3149      64726573 
 3150              	.LASF2:
 3151 03d7 73686F72 		.ascii	"short int\000"
 3151      7420696E 
 3151      7400
 3152              	.LASF27:
 3153 03e1 55415254 		.ascii	"UART_Out_SetRxInterruptMode\000"
 3153      5F4F7574 
 3153      5F536574 
 3153      5278496E 
 3153      74657272 
 3154              	.LASF38:
 3155 03fd 55415254 		.ascii	"UART_Out_SetRxAddress1\000"
 3155      5F4F7574 
 3155      5F536574 
 3155      52784164 
 3155      64726573 
 3156              	.LASF40:
 3157 0414 55415254 		.ascii	"UART_Out_SetRxAddress2\000"
 3157      5F4F7574 
 3157      5F536574 
 3157      52784164 
 3157      64726573 
 3158              	.LASF44:
 3159 042b 55415254 		.ascii	"UART_Out_ReadControlRegister\000"
 3159      5F4F7574 
 3159      5F526561 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 89


 3159      64436F6E 
 3159      74726F6C 
 3160              	.LASF20:
 3161 0448 72784461 		.ascii	"rxData\000"
 3161      746100
 3162              	.LASF45:
 3163 044f 55415254 		.ascii	"UART_Out_ReadTxStatus\000"
 3163      5F4F7574 
 3163      5F526561 
 3163      64547853 
 3163      74617475 
 3164              	.LASF14:
 3165 0465 63686172 		.ascii	"char\000"
 3165      00
 3166              	.LASF13:
 3167 046a 63686172 		.ascii	"char8\000"
 3167      3800
 3168              	.LASF59:
 3169 0470 55415254 		.ascii	"UART_Out_Init\000"
 3169      5F4F7574 
 3169      5F496E69 
 3169      7400
 3170              	.LASF18:
 3171 047e 55415254 		.ascii	"UART_Out_ReadRxData\000"
 3171      5F4F7574 
 3171      5F526561 
 3171      64527844 
 3171      61746100 
 3172              	.LASF52:
 3173 0492 55415254 		.ascii	"UART_Out_GetTxBufferSize\000"
 3173      5F4F7574 
 3173      5F476574 
 3173      54784275 
 3173      66666572 
 3174              	.LASF23:
 3175 04ab 656E6162 		.ascii	"enableInterrupts\000"
 3175      6C65496E 
 3175      74657272 
 3175      75707473 
 3175      00
 3176              	.LASF19:
 3177 04bc 73746174 		.ascii	"status\000"
 3177      757300
 3178              	.LASF42:
 3179 04c3 55415254 		.ascii	"UART_Out_WriteTxData\000"
 3179      5F4F7574 
 3179      5F577269 
 3179      74655478 
 3179      44617461 
 3180              	.LASF31:
 3181 04d8 55415254 		.ascii	"UART_Out_GetChar\000"
 3181      5F4F7574 
 3181      5F476574 
 3181      43686172 
 3181      00
 3182              	.LASF41:
 3183 04e9 55415254 		.ascii	"UART_Out_SetTxInterruptMode\000"
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccax5gzl.s 			page 90


 3183      5F4F7574 
 3183      5F536574 
 3183      5478496E 
 3183      74657272 
 3184              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
