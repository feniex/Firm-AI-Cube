ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_Seq_initVar
  18              		.bss
  19              		.type	ADC_SAR_Seq_initVar, %object
  20              		.size	ADC_SAR_Seq_initVar, 1
  21              	ADC_SAR_Seq_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_Seq_offset,8,4
  24              		.comm	ADC_SAR_Seq_countsPer10Volt,16,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_Seq_channelsConfig, %object
  28              		.size	ADC_SAR_Seq_channelsConfig, 16
  29              	ADC_SAR_Seq_channelsConfig:
  30 0000 00040000 		.word	1024
  31 0004 00040000 		.word	1024
  32 0008 00040000 		.word	1024
  33 000c 00340000 		.word	13312
  34              		.section	.text.ADC_SAR_Seq_Start,"ax",%progbits
  35              		.align	2
  36              		.global	ADC_SAR_Seq_Start
  37              		.code	16
  38              		.thumb_func
  39              		.type	ADC_SAR_Seq_Start, %function
  40              	ADC_SAR_Seq_Start:
  41              	.LFB0:
  42              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * File Name: ADC_SAR_Seq.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 2


  16:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #include "ADC_SAR_Seq.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** uint8 ADC_SAR_Seq_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** volatile int16 ADC_SAR_Seq_offset[ADC_SAR_Seq_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** volatile int32 ADC_SAR_Seq_countsPer10Volt[ADC_SAR_Seq_TOTAL_CHANNELS_NUM];   /* Gain compensation 
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** static const uint32 CYCODE ADC_SAR_Seq_channelsConfig[] = { 0x00000400u, 0x00000400u, 0x00000400u, 
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  The ADC_SAR_Seq_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  to zero before call of ADC_SAR_Seq_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Init() and ADC_SAR_Seq_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
  43              		.loc 1 64 0
  44              		.cfi_startproc
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 00AF     		add	r7, sp, #0
  50              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 3


  65:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if(ADC_SAR_Seq_initVar == 0u)
  51              		.loc 1 66 0
  52 0004 064B     		ldr	r3, .L3
  53 0006 1B78     		ldrb	r3, [r3]
  54 0008 002B     		cmp	r3, #0
  55 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_Init();
  56              		.loc 1 68 0
  57 000c FFF7FEFF 		bl	ADC_SAR_Seq_Init
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_initVar = 1u;
  58              		.loc 1 69 0
  59 0010 034B     		ldr	r3, .L3
  60 0012 0122     		mov	r2, #1
  61 0014 1A70     		strb	r2, [r3]
  62              	.L2:
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_Enable();
  63              		.loc 1 71 0
  64 0016 FFF7FEFF 		bl	ADC_SAR_Seq_Enable
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
  65              		.loc 1 72 0
  66 001a BD46     		mov	sp, r7
  67              		@ sp needed
  68 001c 80BD     		pop	{r7, pc}
  69              	.L4:
  70 001e C046     		.align	2
  71              	.L3:
  72 0020 00000000 		.word	ADC_SAR_Seq_initVar
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	ADC_SAR_Seq_Start, .-ADC_SAR_Seq_Start
  76              		.global	__aeabi_idiv
  77              		.section	.text.ADC_SAR_Seq_Init,"ax",%progbits
  78              		.align	2
  79              		.global	ADC_SAR_Seq_Init
  80              		.code	16
  81              		.thumb_func
  82              		.type	ADC_SAR_Seq_Init, %function
  83              	ADC_SAR_Seq_Init:
  84              	.LFB1:
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 4


  88:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  90:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  The ADC_SAR_Seq_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
  85              		.loc 1 95 0
  86              		.cfi_startproc
  87 0000 80B5     		push	{r7, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 84B0     		sub	sp, sp, #16
  92              		.cfi_def_cfa_offset 24
  93 0004 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         static const uint8 CYCODE ADC_SAR_Seq_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****              (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 8u */
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 5


 135:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CyIntSetPriority(ADC_SAR_Seq_INTC_NUMBER, ADC_SAR_Seq_INTC_PRIOR_NUMBER);
  95              		.loc 1 172 0
  96 0006 0E20     		mov	r0, #14
  97 0008 0321     		mov	r1, #3
  98 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         (void)CyIntSetVector(ADC_SAR_Seq_INTC_NUMBER, &ADC_SAR_Seq_ISR);
  99              		.loc 1 173 0
 100 000e 744B     		ldr	r3, .L19
 101 0010 0E20     		mov	r0, #14
 102 0012 191C     		mov	r1, r3
 103 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif   /* End ADC_SAR_Seq_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CHAN_EN_REG = ADC_SAR_Seq_DEFAULT_EN_CHANNELS;
 104              		.loc 1 177 0
 105 0018 724B     		ldr	r3, .L19+4
 106 001a 0722     		mov	r2, #7
 107 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 6


 179:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         (((ADC_SAR_Seq_PUMP_CTRL_REG & ADC_SAR_Seq_PUMP_CTRL_ENABLED) != 0u) ? 
 108              		.loc 1 180 0
 109 001e 724B     		ldr	r3, .L19+8
 110 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0
 112 0022 002B     		cmp	r3, #0
 113 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 178 0 is_stmt 0 discriminator 1
 115 0026 7149     		ldr	r1, .L19+12
 116 0028 00E0     		b	.L7
 117              	.L6:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 2
 119 002a 7149     		ldr	r1, .L19+16
 120              	.L7:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 121              		.loc 1 178 0 discriminator 4
 122 002c 714B     		ldr	r3, .L19+20
 123 002e 714A     		ldr	r2, .L19+20
 124 0030 1268     		ldr	r2, [r2]
 125 0032 0A43     		orr	r2, r1
 126 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_CTRL_REG_CFG;
 127              		.loc 1 182 0 is_stmt 1 discriminator 4
 128 0036 704B     		ldr	r3, .L19+24
 129 0038 704A     		ldr	r2, .L19+28
 130 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG = ADC_SAR_Seq_DEFAULT_RANGE_THRES_REG_CFG;
 131              		.loc 1 183 0 discriminator 4
 132 003c 704B     		ldr	r3, .L19+32
 133 003e 714A     		ldr	r2, .L19+36
 134 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_COND_REG  = ADC_SAR_Seq_COMPARE_MODE;
 135              		.loc 1 184 0 discriminator 4
 136 0042 714B     		ldr	r3, .L19+40
 137 0044 8022     		mov	r2, #128
 138 0046 D205     		lsl	r2, r2, #23
 139 0048 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_TIME01_REG_CFG;
 140              		.loc 1 185 0 discriminator 4
 141 004a 704B     		ldr	r3, .L19+44
 142 004c 704A     		ldr	r2, .L19+48
 143 004e 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_TIME23_REG_CFG;
 144              		.loc 1 186 0 discriminator 4
 145 0050 704B     		ldr	r3, .L19+52
 146 0052 714A     		ldr	r2, .L19+56
 147 0054 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_MUX_SWITCH0_REG |= ADC_SAR_Seq_DEFAULT_MUX_SWITCH0;
 148              		.loc 1 190 0 discriminator 4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 7


 149 0056 714B     		ldr	r3, .L19+60
 150 0058 704A     		ldr	r2, .L19+60
 151 005a 1268     		ldr	r2, [r2]
 152 005c 8021     		mov	r1, #128
 153 005e 4902     		lsl	r1, r1, #9
 154 0060 0A43     		orr	r2, r1
 155 0062 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ADC_SAR_Seq_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_DEFAULT_MUX_SWITCH0;
 156              		.loc 1 193 0 discriminator 4
 157 0064 6E4B     		ldr	r3, .L19+64
 158 0066 6E4A     		ldr	r2, .L19+64
 159 0068 1268     		ldr	r2, [r2]
 160 006a 8021     		mov	r1, #128
 161 006c 4902     		lsl	r1, r1, #9
 162 006e 0A43     		orr	r2, r1
 163 0070 1A60     		str	r2, [r3]
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /*ADC_SAR_Seq_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG = 0u;
 164              		.loc 1 197 0 discriminator 4
 165 0072 6C4B     		ldr	r3, .L19+68
 166 0074 0022     		mov	r2, #0
 167 0076 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG = 0u;
 168              		.loc 1 198 0 discriminator 4
 169 0078 6B4B     		ldr	r3, .L19+72
 170 007a 0022     		mov	r2, #0
 171 007c 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_INTR_MASK_REG = ADC_SAR_Seq_SAR_INTR_MASK;
 172              		.loc 1 199 0 discriminator 4
 173 007e 6B4B     		ldr	r3, .L19+76
 174 0080 1122     		mov	r2, #17
 175 0082 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_ANA_TRIM_REG = ADC_SAR_Seq_TRIM_COEF;
 176              		.loc 1 202 0 discriminator 4
 177 0084 6A4B     		ldr	r3, .L19+80
 178 0086 0222     		mov	r2, #2
 179 0088 1A60     		str	r2, [r3]
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     tmpRegVal = ADC_SAR_Seq_SAR_DFT_CTRL_REG;
 180              		.loc 1 206 0 discriminator 4
 181 008a 6A4B     		ldr	r3, .L19+84
 182 008c 1B68     		ldr	r3, [r3]
 183 008e 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_DCEN;
 184              		.loc 1 207 0 discriminator 4
 185 0090 7B68     		ldr	r3, [r7, #4]
 186 0092 694A     		ldr	r2, .L19+88
 187 0094 1340     		and	r3, r2
 188 0096 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 8


 208:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DLY_INC;
 189              		.loc 1 213 0 discriminator 4
 190 0098 7B68     		ldr	r3, [r7, #4]
 191 009a 0122     		mov	r2, #1
 192 009c 1343     		orr	r3, r2
 193 009e 7B60     		str	r3, [r7, #4]
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if ((ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****              (ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DCEN;
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ((ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                    (ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_DFT_CTRL_REG = tmpRegVal;
 194              		.loc 1 226 0 discriminator 4
 195 00a0 644B     		ldr	r3, .L19+84
 196 00a2 7A68     		ldr	r2, [r7, #4]
 197 00a4 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_WOUNDING_REG = ADC_SAR_Seq_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_TOTAL_CHANNELS_NUM; chNum++)
 198              		.loc 1 232 0 discriminator 4
 199 00a6 0023     		mov	r3, #0
 200 00a8 FB60     		str	r3, [r7, #12]
 201 00aa 92E0     		b	.L8
 202              	.L18:
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         tmpRegVal = (ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_CHANNEL_CONFIG_MASK);
 203              		.loc 1 234 0
 204 00ac 634B     		ldr	r3, .L19+92
 205 00ae FA68     		ldr	r2, [r7, #12]
 206 00b0 9200     		lsl	r2, r2, #2
 207 00b2 D258     		ldr	r2, [r2, r3]
 208 00b4 DC23     		mov	r3, #220
 209 00b6 9B01     		lsl	r3, r3, #6
 210 00b8 1340     		and	r3, r2
 211 00ba 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_InputsPlacement[chNum];
 212              		.loc 1 236 0
 213 00bc 604A     		ldr	r2, .L19+96
 214 00be FB68     		ldr	r3, [r7, #12]
 215 00c0 D318     		add	r3, r2, r3
 216 00c2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 9


 217 00c4 1A1C     		mov	r2, r3
 218 00c6 7B68     		ldr	r3, [r7, #4]
 219 00c8 1343     		orr	r3, r2
 220 00ca 7B60     		str	r3, [r7, #4]
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if((ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (ADC_SAR_Seq_ALT_WOUNDING == ADC_SAR_Seq_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if(chNum < ADC_SAR_Seq_SEQUENCED_CHANNELS_NUM)
 221              		.loc 1 250 0
 222 00cc FB68     		ldr	r3, [r7, #12]
 223 00ce 022B     		cmp	r3, #2
 224 00d0 29D8     		bhi	.L9
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegV
 225              		.loc 1 253 0
 226 00d2 FB68     		ldr	r3, [r7, #12]
 227 00d4 9B00     		lsl	r3, r3, #2
 228 00d6 5B4A     		ldr	r2, .L19+100
 229 00d8 9446     		mov	ip, r2
 230 00da 6344     		add	r3, r3, ip
 231 00dc 7A68     		ldr	r2, [r7, #4]
 232 00de 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_SATURATE_EN_MASK) != 0u)
 233              		.loc 1 255 0
 234 00e0 564B     		ldr	r3, .L19+92
 235 00e2 FA68     		ldr	r2, [r7, #12]
 236 00e4 9200     		lsl	r2, r2, #2
 237 00e6 D358     		ldr	r3, [r2, r3]
 238 00e8 0122     		mov	r2, #1
 239 00ea 1340     		and	r3, r2
 240 00ec 09D0     		beq	.L10
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 241              		.loc 1 257 0
 242 00ee 4D4B     		ldr	r3, .L19+68
 243 00f0 4C4A     		ldr	r2, .L19+68
 244 00f2 1268     		ldr	r2, [r2]
 245 00f4 F968     		ldr	r1, [r7, #12]
 246 00f6 0120     		mov	r0, #1
 247 00f8 8840     		lsl	r0, r0, r1
 248 00fa 011C     		mov	r1, r0
 249 00fc 89B2     		uxth	r1, r1
 250 00fe 0A43     		orr	r2, r1
 251 0100 1A60     		str	r2, [r3]
 252              	.L10:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 10


 258:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_RANGE_CTRL_EN_MASK) != 0u)
 253              		.loc 1 260 0
 254 0102 4E4B     		ldr	r3, .L19+92
 255 0104 FA68     		ldr	r2, [r7, #12]
 256 0106 9200     		lsl	r2, r2, #2
 257 0108 D358     		ldr	r3, [r2, r3]
 258 010a 0222     		mov	r2, #2
 259 010c 1340     		and	r3, r2
 260 010e 2AD0     		beq	.L12
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 261              		.loc 1 262 0
 262 0110 454B     		ldr	r3, .L19+72
 263 0112 454A     		ldr	r2, .L19+72
 264 0114 1268     		ldr	r2, [r2]
 265 0116 F968     		ldr	r1, [r7, #12]
 266 0118 0120     		mov	r0, #1
 267 011a 8840     		lsl	r0, r0, r1
 268 011c 011C     		mov	r1, r0
 269 011e 89B2     		uxth	r1, r1
 270 0120 0A43     		orr	r2, r1
 271 0122 1A60     		str	r2, [r3]
 272 0124 1FE0     		b	.L12
 273              	.L9:
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 CY_SET_REG32(ADC_SAR_Seq_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_INJ_TAILG
 274              		.loc 1 268 0
 275 0126 484B     		ldr	r3, .L19+104
 276 0128 7A68     		ldr	r2, [r7, #4]
 277 012a 8021     		mov	r1, #128
 278 012c C905     		lsl	r1, r1, #23
 279 012e 0A43     		orr	r2, r1
 280 0130 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_SATURATE_EN_MASK) != 0u)
 281              		.loc 1 270 0
 282 0132 424B     		ldr	r3, .L19+92
 283 0134 FA68     		ldr	r2, [r7, #12]
 284 0136 9200     		lsl	r2, r2, #2
 285 0138 D358     		ldr	r3, [r2, r3]
 286 013a 0122     		mov	r2, #1
 287 013c 1340     		and	r3, r2
 288 013e 05D0     		beq	.L13
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                     ADC_SAR_Seq_SAR_INTR_MASK_REG |= ADC_SAR_Seq_INJ_SATURATE_MASK;
 289              		.loc 1 272 0
 290 0140 3A4B     		ldr	r3, .L19+76
 291 0142 3A4A     		ldr	r2, .L19+76
 292 0144 1268     		ldr	r2, [r2]
 293 0146 2021     		mov	r1, #32
 294 0148 0A43     		orr	r2, r1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 11


 295 014a 1A60     		str	r2, [r3]
 296              	.L13:
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_RANGE_CTRL_EN_MASK) != 0u)
 297              		.loc 1 275 0
 298 014c 3B4B     		ldr	r3, .L19+92
 299 014e FA68     		ldr	r2, [r7, #12]
 300 0150 9200     		lsl	r2, r2, #2
 301 0152 D358     		ldr	r3, [r2, r3]
 302 0154 0222     		mov	r2, #2
 303 0156 1340     		and	r3, r2
 304 0158 05D0     		beq	.L12
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                     ADC_SAR_Seq_SAR_INTR_MASK_REG |= ADC_SAR_Seq_INJ_RANGE_MASK;
 305              		.loc 1 277 0
 306 015a 344B     		ldr	r3, .L19+76
 307 015c 334A     		ldr	r2, .L19+76
 308 015e 1268     		ldr	r2, [r2]
 309 0160 4021     		mov	r1, #64
 310 0162 0A43     		orr	r2, r1
 311 0164 1A60     		str	r2, [r3]
 312              	.L12:
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_ALT_RESOLUTION_ON) != 0u)
 313              		.loc 1 282 0
 314 0166 354B     		ldr	r3, .L19+92
 315 0168 FA68     		ldr	r2, [r7, #12]
 316 016a 9200     		lsl	r2, r2, #2
 317 016c D258     		ldr	r2, [r2, r3]
 318 016e 8023     		mov	r3, #128
 319 0170 9B00     		lsl	r3, r3, #2
 320 0172 1340     		and	r3, r2
 321 0174 03D0     		beq	.L14
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                counts = (int32)ADC_SAR_Seq_DEFAULT_MAX_WRK_ALT;
 322              		.loc 1 284 0
 323 0176 8023     		mov	r3, #128
 324 0178 5B00     		lsl	r3, r3, #1
 325 017a BB60     		str	r3, [r7, #8]
 326 017c 02E0     		b	.L15
 327              	.L14:
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                counts = (int32)ADC_SAR_Seq_SAR_WRK_MAX_12BIT;
 328              		.loc 1 288 0
 329 017e 8023     		mov	r3, #128
 330 0180 5B01     		lsl	r3, r3, #5
 331 0182 BB60     		str	r3, [r7, #8]
 332              	.L15:
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_DIFFERENTIAL_EN) == 0u)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 12


 333              		.loc 1 291 0
 334 0184 2D4B     		ldr	r3, .L19+92
 335 0186 FA68     		ldr	r2, [r7, #12]
 336 0188 9200     		lsl	r2, r2, #2
 337 018a D258     		ldr	r2, [r2, r3]
 338 018c 8023     		mov	r3, #128
 339 018e 5B00     		lsl	r3, r3, #1
 340 0190 1340     		and	r3, r2
 341 0192 05D1     		bne	.L16
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if((ADC_SAR_Seq_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 (ADC_SAR_Seq_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = 0;
 342              		.loc 1 298 0
 343 0194 2D4B     		ldr	r3, .L19+108
 344 0196 FA68     		ldr	r2, [r7, #12]
 345 0198 5200     		lsl	r2, r2, #1
 346 019a 0021     		mov	r1, #0
 347 019c D152     		strh	r1, [r2, r3]
 348 019e 04E0     		b	.L17
 349              	.L16:
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = 0;
 350              		.loc 1 307 0
 351 01a0 2A4B     		ldr	r3, .L19+108
 352 01a2 FA68     		ldr	r2, [r7, #12]
 353 01a4 5200     		lsl	r2, r2, #1
 354 01a6 0021     		mov	r1, #0
 355 01a8 D152     		strh	r1, [r2, r3]
 356              	.L17:
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* end ADC_SAR_Seq_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_10MV_COUNTS) +
 357              		.loc 1 311 0 discriminator 2
 358 01aa BB68     		ldr	r3, [r7, #8]
 359 01ac 284A     		ldr	r2, .L19+112
 360 01ae 5343     		mul	r3, r2
 361 01b0 284A     		ldr	r2, .L19+116
 362 01b2 9446     		mov	ip, r2
 363 01b4 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                             ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE
 364              		.loc 1 312 0 discriminator 2
 365 01b6 181C     		mov	r0, r3
 366 01b8 2549     		ldr	r1, .L19+112
 367 01ba FFF7FEFF 		bl	__aeabi_idiv
 368 01be 031C     		mov	r3, r0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 13


 311:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                             ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE
 369              		.loc 1 311 0 discriminator 2
 370 01c0 9BB2     		uxth	r3, r3
 371 01c2 19B2     		sxth	r1, r3
 372 01c4 244B     		ldr	r3, .L19+120
 373 01c6 FA68     		ldr	r2, [r7, #12]
 374 01c8 9200     		lsl	r2, r2, #2
 375 01ca D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 376              		.loc 1 232 0 discriminator 2
 377 01cc FB68     		ldr	r3, [r7, #12]
 378 01ce 0133     		add	r3, r3, #1
 379 01d0 FB60     		str	r3, [r7, #12]
 380              	.L8:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 381              		.loc 1 232 0 is_stmt 0 discriminator 1
 382 01d2 FB68     		ldr	r3, [r7, #12]
 383 01d4 032B     		cmp	r3, #3
 384 01d6 00D8     		bhi	.LCB310
 385 01d8 68E7     		b	.L18	@long jump
 386              	.LCB310:
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 387              		.loc 1 314 0 is_stmt 1
 388 01da BD46     		mov	sp, r7
 389 01dc 04B0     		add	sp, sp, #16
 390              		@ sp needed
 391 01de 80BD     		pop	{r7, pc}
 392              	.L20:
 393              		.align	2
 394              	.L19:
 395 01e0 00000000 		.word	ADC_SAR_Seq_ISR
 396 01e4 20001A40 		.word	1075445792
 397 01e8 80031A40 		.word	1075446656
 398 01ec 70201010 		.word	269492336
 399 01f0 70200010 		.word	268443760
 400 01f4 00001A40 		.word	1075445760
 401 01f8 04001A40 		.word	1075445764
 402 01fc FC000080 		.word	-2147483396
 403 0200 18001A40 		.word	1075445784
 404 0204 0000FF0F 		.word	268369920
 405 0208 1C001A40 		.word	1075445788
 406 020c 10001A40 		.word	1075445776
 407 0210 02000200 		.word	131074
 408 0214 14001A40 		.word	1075445780
 409 0218 02002D00 		.word	2949122
 410 021c 00031A40 		.word	1075446528
 411 0220 40031A40 		.word	1075446592
 412 0224 28021A40 		.word	1075446312
 413 0228 38021A40 		.word	1075446328
 414 022c 18021A40 		.word	1075446296
 415 0230 000F1A40 		.word	1075449600
 416 0234 30001A40 		.word	1075445808
 417 0238 FFFFFFDF 		.word	-536870913
 418 023c 00000000 		.word	ADC_SAR_Seq_channelsConfig
 419 0240 10000000 		.word	ADC_SAR_Seq_InputsPlacement.4744
 420 0244 80001A40 		.word	1075445888
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 14


 421 0248 80021A40 		.word	1075446400
 422 024c 00000000 		.word	ADC_SAR_Seq_offset
 423 0250 10270000 		.word	10000
 424 0254 88130000 		.word	5000
 425 0258 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 426              		.cfi_endproc
 427              	.LFE1:
 428              		.size	ADC_SAR_Seq_Init, .-ADC_SAR_Seq_Init
 429              		.section	.text.ADC_SAR_Seq_Enable,"ax",%progbits
 430              		.align	2
 431              		.global	ADC_SAR_Seq_Enable
 432              		.code	16
 433              		.thumb_func
 434              		.type	ADC_SAR_Seq_Enable, %function
 435              	ADC_SAR_Seq_Enable:
 436              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 437              		.loc 1 331 0
 438              		.cfi_startproc
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if (0u == (ADC_SAR_Seq_SAR_CTRL_REG & ADC_SAR_Seq_ENABLE))
 445              		.loc 1 332 0
 446 0004 074B     		ldr	r3, .L23
 447 0006 1B68     		ldr	r3, [r3]
 448 0008 002B     		cmp	r3, #0
 449 000a 09DB     		blt	.L21
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_CY_SAR_IP_VER != ADC_SAR_Seq_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             while (0u != (ADC_SAR_Seq_SAR_STATUS_REG & ADC_SAR_Seq_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER != ADC_SAR_Seq_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_ENABLE;
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 15


 450              		.loc 1 342 0
 451 000c 054B     		ldr	r3, .L23
 452 000e 054A     		ldr	r2, .L23
 453 0010 1268     		ldr	r2, [r2]
 454 0012 8021     		mov	r1, #128
 455 0014 0906     		lsl	r1, r1, #24
 456 0016 0A43     		orr	r2, r1
 457 0018 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CyDelayUs(ADC_SAR_Seq_10US_DELAY);         
 458              		.loc 1 345 0
 459 001a 0A20     		mov	r0, #10
 460 001c FFF7FEFF 		bl	CyDelayUs
 461              	.L21:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 462              		.loc 1 347 0
 463 0020 BD46     		mov	sp, r7
 464              		@ sp needed
 465 0022 80BD     		pop	{r7, pc}
 466              	.L24:
 467              		.align	2
 468              	.L23:
 469 0024 00001A40 		.word	1075445760
 470              		.cfi_endproc
 471              	.LFE2:
 472              		.size	ADC_SAR_Seq_Enable, .-ADC_SAR_Seq_Enable
 473              		.section	.text.ADC_SAR_Seq_Stop,"ax",%progbits
 474              		.align	2
 475              		.global	ADC_SAR_Seq_Stop
 476              		.code	16
 477              		.thumb_func
 478              		.type	ADC_SAR_Seq_Stop, %function
 479              	ADC_SAR_Seq_Stop:
 480              	.LFB3:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 481              		.loc 1 366 0
 482              		.cfi_startproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 16


 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_ENABLE;
 489              		.loc 1 367 0
 490 0004 034B     		ldr	r3, .L26
 491 0006 034A     		ldr	r2, .L26
 492 0008 1268     		ldr	r2, [r2]
 493 000a 5200     		lsl	r2, r2, #1
 494 000c 5208     		lsr	r2, r2, #1
 495 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 496              		.loc 1 368 0
 497 0010 BD46     		mov	sp, r7
 498              		@ sp needed
 499 0012 80BD     		pop	{r7, pc}
 500              	.L27:
 501              		.align	2
 502              	.L26:
 503 0014 00001A40 		.word	1075445760
 504              		.cfi_endproc
 505              	.LFE3:
 506              		.size	ADC_SAR_Seq_Stop, .-ADC_SAR_Seq_Stop
 507              		.section	.text.ADC_SAR_Seq_StartConvert,"ax",%progbits
 508              		.align	2
 509              		.global	ADC_SAR_Seq_StartConvert
 510              		.code	16
 511              		.thumb_func
 512              		.type	ADC_SAR_Seq_StartConvert, %function
 513              	ADC_SAR_Seq_StartConvert:
 514              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_StartConvert(void)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 17


 392:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 515              		.loc 1 392 0
 516              		.cfi_startproc
 517 0000 80B5     		push	{r7, lr}
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 00AF     		add	r7, sp, #0
 522              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_CONTINUOUS_EN;
 523              		.loc 1 394 0
 524 0004 044B     		ldr	r3, .L29
 525 0006 044A     		ldr	r2, .L29
 526 0008 1268     		ldr	r2, [r2]
 527 000a 8021     		mov	r1, #128
 528 000c 4902     		lsl	r1, r1, #9
 529 000e 0A43     		orr	r2, r1
 530 0010 1A60     		str	r2, [r3]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_START_CTRL_REG = ADC_SAR_Seq_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* End ADC_SAR_Seq_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 531              		.loc 1 399 0
 532 0012 BD46     		mov	sp, r7
 533              		@ sp needed
 534 0014 80BD     		pop	{r7, pc}
 535              	.L30:
 536 0016 C046     		.align	2
 537              	.L29:
 538 0018 04001A40 		.word	1075445764
 539              		.cfi_endproc
 540              	.LFE4:
 541              		.size	ADC_SAR_Seq_StartConvert, .-ADC_SAR_Seq_StartConvert
 542              		.section	.text.ADC_SAR_Seq_StopConvert,"ax",%progbits
 543              		.align	2
 544              		.global	ADC_SAR_Seq_StopConvert
 545              		.code	16
 546              		.thumb_func
 547              		.type	ADC_SAR_Seq_StopConvert, %function
 548              	ADC_SAR_Seq_StopConvert:
 549              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 18


 414:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 550              		.loc 1 417 0
 551              		.cfi_startproc
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_CONTINUOUS_EN);
 558              		.loc 1 419 0
 559 0004 034B     		ldr	r3, .L32
 560 0006 034A     		ldr	r2, .L32
 561 0008 1268     		ldr	r2, [r2]
 562 000a 0349     		ldr	r1, .L32+4
 563 000c 0A40     		and	r2, r1
 564 000e 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 565              		.loc 1 421 0
 566 0010 BD46     		mov	sp, r7
 567              		@ sp needed
 568 0012 80BD     		pop	{r7, pc}
 569              	.L33:
 570              		.align	2
 571              	.L32:
 572 0014 04001A40 		.word	1075445764
 573 0018 FFFFFEFF 		.word	-65537
 574              		.cfi_endproc
 575              	.LFE5:
 576              		.size	ADC_SAR_Seq_StopConvert, .-ADC_SAR_Seq_StopConvert
 577              		.section	.text.ADC_SAR_Seq_IsEndConversion,"ax",%progbits
 578              		.align	2
 579              		.global	ADC_SAR_Seq_IsEndConversion
 580              		.code	16
 581              		.thumb_func
 582              		.type	ADC_SAR_Seq_IsEndConversion, %function
 583              	ADC_SAR_Seq_IsEndConversion:
 584              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  completed.
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 19


 436:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** uint32 ADC_SAR_Seq_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 585              		.loc 1 451 0
 586              		.cfi_startproc
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 84B0     		sub	sp, sp, #16
 592              		.cfi_def_cfa_offset 24
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 status = 0u;
 596              		.loc 1 452 0
 597 0008 0023     		mov	r3, #0
 598 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if((retMode & (ADC_SAR_Seq_RETURN_STATUS | ADC_SAR_Seq_WAIT_FOR_RESULT)) != 0u)
 599              		.loc 1 454 0
 600 000c 7B68     		ldr	r3, [r7, #4]
 601 000e 0322     		mov	r2, #3
 602 0010 1340     		and	r3, r2
 603 0012 11D0     		beq	.L35
 604              	.L37:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             status = ADC_SAR_Seq_SAR_INTR_REG & ADC_SAR_Seq_EOS_MASK;
 605              		.loc 1 458 0 discriminator 2
 606 0014 184B     		ldr	r3, .L42
 607 0016 1B68     		ldr	r3, [r3]
 608 0018 0122     		mov	r2, #1
 609 001a 1340     		and	r3, r2
 610 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_WAIT_FOR_RESULT) != 0u));
 611              		.loc 1 459 0 discriminator 2
 612 001e FB68     		ldr	r3, [r7, #12]
 613 0020 002B     		cmp	r3, #0
 614 0022 03D1     		bne	.L36
 615              		.loc 1 459 0 is_stmt 0 discriminator 1
 616 0024 7B68     		ldr	r3, [r7, #4]
 617 0026 0222     		mov	r2, #2
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 20


 618 0028 1340     		and	r3, r2
 619 002a F3D1     		bne	.L37
 620              	.L36:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if(status != 0u)
 621              		.loc 1 461 0 is_stmt 1
 622 002c FB68     		ldr	r3, [r7, #12]
 623 002e 002B     		cmp	r3, #0
 624 0030 02D0     		beq	.L35
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ADC_SAR_Seq_SAR_INTR_REG = ADC_SAR_Seq_EOS_MASK;
 625              		.loc 1 464 0
 626 0032 114B     		ldr	r3, .L42
 627 0034 0122     		mov	r2, #1
 628 0036 1A60     		str	r2, [r3]
 629              	.L35:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((retMode & (ADC_SAR_Seq_RETURN_STATUS_INJ | ADC_SAR_Seq_WAIT_FOR_RESULT_INJ)) != 0u)
 630              		.loc 1 469 0
 631 0038 7B68     		ldr	r3, [r7, #4]
 632 003a 0C22     		mov	r2, #12
 633 003c 1340     		and	r3, r2
 634 003e 15D0     		beq	.L38
 635              	.L40:
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 status |= ADC_SAR_Seq_SAR_INTR_REG & ADC_SAR_Seq_INJ_EOC_MASK;
 636              		.loc 1 473 0
 637 0040 0D4B     		ldr	r3, .L42
 638 0042 1B68     		ldr	r3, [r3]
 639 0044 1022     		mov	r2, #16
 640 0046 1340     		and	r3, r2
 641 0048 FA68     		ldr	r2, [r7, #12]
 642 004a 1343     		orr	r3, r2
 643 004c FB60     		str	r3, [r7, #12]
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }while(((status & ADC_SAR_Seq_INJ_EOC_MASK) == 0u) &&
 644              		.loc 1 474 0
 645 004e FB68     		ldr	r3, [r7, #12]
 646 0050 1022     		mov	r2, #16
 647 0052 1340     		and	r3, r2
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                    ((retMode & ADC_SAR_Seq_WAIT_FOR_RESULT_INJ) != 0u));
 648              		.loc 1 475 0
 649 0054 03D1     		bne	.L39
 650              		.loc 1 475 0 is_stmt 0 discriminator 1
 651 0056 7B68     		ldr	r3, [r7, #4]
 652 0058 0822     		mov	r2, #8
 653 005a 1340     		and	r3, r2
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }while(((status & ADC_SAR_Seq_INJ_EOC_MASK) == 0u) &&
 654              		.loc 1 474 0 is_stmt 1 discriminator 1
 655 005c F0D1     		bne	.L40
 656              	.L39:
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 21


 477:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((status & ADC_SAR_Seq_INJ_EOC_MASK) != 0u)
 657              		.loc 1 477 0
 658 005e FB68     		ldr	r3, [r7, #12]
 659 0060 1022     		mov	r2, #16
 660 0062 1340     		and	r3, r2
 661 0064 02D0     		beq	.L38
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_INTR_REG = ADC_SAR_Seq_INJ_EOC_MASK;
 662              		.loc 1 480 0
 663 0066 044B     		ldr	r3, .L42
 664 0068 1022     		mov	r2, #16
 665 006a 1A60     		str	r2, [r3]
 666              	.L38:
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     return (status);
 667              		.loc 1 485 0
 668 006c FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 669              		.loc 1 486 0
 670 006e 181C     		mov	r0, r3
 671 0070 BD46     		mov	sp, r7
 672 0072 04B0     		add	sp, sp, #16
 673              		@ sp needed
 674 0074 80BD     		pop	{r7, pc}
 675              	.L43:
 676 0076 C046     		.align	2
 677              	.L42:
 678 0078 10021A40 		.word	1075446288
 679              		.cfi_endproc
 680              	.LFE6:
 681              		.size	ADC_SAR_Seq_IsEndConversion, .-ADC_SAR_Seq_IsEndConversion
 682              		.section	.text.ADC_SAR_Seq_GetResult16,"ax",%progbits
 683              		.align	2
 684              		.global	ADC_SAR_Seq_GetResult16
 685              		.code	16
 686              		.thumb_func
 687              		.type	ADC_SAR_Seq_GetResult16, %function
 688              	ADC_SAR_Seq_GetResult16:
 689              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 22


 501:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** int16 ADC_SAR_Seq_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 690              		.loc 1 505 0
 691              		.cfi_startproc
 692 0000 80B5     		push	{r7, lr}
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
 696 0002 84B0     		sub	sp, sp, #16
 697              		.cfi_def_cfa_offset 24
 698 0004 00AF     		add	r7, sp, #0
 699              		.cfi_def_cfa_register 7
 700 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if(chan < ADC_SAR_Seq_SEQUENCED_CHANNELS_NUM)
 701              		.loc 1 511 0
 702 0008 7B68     		ldr	r3, [r7, #4]
 703 000a 022B     		cmp	r3, #2
 704 000c 09D8     		bhi	.L45
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 705              		.loc 1 513 0
 706 000e 7B68     		ldr	r3, [r7, #4]
 707 0010 9B00     		lsl	r3, r3, #2
 708 0012 0A4A     		ldr	r2, .L48
 709 0014 9446     		mov	ip, r2
 710 0016 6344     		add	r3, r3, ip
 711 0018 1B68     		ldr	r3, [r3]
 712 001a 1B04     		lsl	r3, r3, #16
 713 001c 1B0C     		lsr	r3, r3, #16
 714 001e FB60     		str	r3, [r7, #12]
 715 0020 04E0     		b	.L46
 716              	.L45:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             result = ADC_SAR_Seq_SAR_INJ_RESULT_REG & ADC_SAR_Seq_RESULT_MASK;
 717              		.loc 1 519 0
 718 0022 074B     		ldr	r3, .L48+4
 719 0024 1B68     		ldr	r3, [r3]
 720 0026 1B04     		lsl	r3, r3, #16
 721 0028 1B0C     		lsr	r3, r3, #16
 722 002a FB60     		str	r3, [r7, #12]
 723              	.L46:
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             result = 0u;
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 23


 524:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     return ( (int16)result );
 724              		.loc 1 525 0
 725 002c FB68     		ldr	r3, [r7, #12]
 726 002e 9BB2     		uxth	r3, r3
 727 0030 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 728              		.loc 1 526 0
 729 0032 181C     		mov	r0, r3
 730 0034 BD46     		mov	sp, r7
 731 0036 04B0     		add	sp, sp, #16
 732              		@ sp needed
 733 0038 80BD     		pop	{r7, pc}
 734              	.L49:
 735 003a C046     		.align	2
 736              	.L48:
 737 003c 80011A40 		.word	1075446144
 738 0040 90021A40 		.word	1075446416
 739              		.cfi_endproc
 740              	.LFE7:
 741              		.size	ADC_SAR_Seq_GetResult16, .-ADC_SAR_Seq_GetResult16
 742              		.section	.text.ADC_SAR_Seq_SetChanMask,"ax",%progbits
 743              		.align	2
 744              		.global	ADC_SAR_Seq_SetChanMask
 745              		.code	16
 746              		.thumb_func
 747              		.type	ADC_SAR_Seq_SetChanMask, %function
 748              	ADC_SAR_Seq_SetChanMask:
 749              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 750              		.loc 1 550 0
 751              		.cfi_startproc
 752 0000 80B5     		push	{r7, lr}
 753              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 24


 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 82B0     		sub	sp, sp, #8
 757              		.cfi_def_cfa_offset 16
 758 0004 00AF     		add	r7, sp, #0
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 761              		.loc 1 551 0
 762 0008 034B     		ldr	r3, .L51
 763 000a 7A68     		ldr	r2, [r7, #4]
 764 000c 0721     		mov	r1, #7
 765 000e 0A40     		and	r2, r1
 766 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 767              		.loc 1 552 0
 768 0012 BD46     		mov	sp, r7
 769 0014 02B0     		add	sp, sp, #8
 770              		@ sp needed
 771 0016 80BD     		pop	{r7, pc}
 772              	.L52:
 773              		.align	2
 774              	.L51:
 775 0018 20001A40 		.word	1075445792
 776              		.cfi_endproc
 777              	.LFE8:
 778              		.size	ADC_SAR_Seq_SetChanMask, .-ADC_SAR_Seq_SetChanMask
 779              		.section	.text.ADC_SAR_Seq_EnableInjection,"ax",%progbits
 780              		.align	2
 781              		.global	ADC_SAR_Seq_EnableInjection
 782              		.code	16
 783              		.thumb_func
 784              		.type	ADC_SAR_Seq_EnableInjection, %function
 785              	ADC_SAR_Seq_EnableInjection:
 786              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     void ADC_SAR_Seq_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 787              		.loc 1 572 0
 788              		.cfi_startproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 25


 789 0000 80B5     		push	{r7, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_INJ_CHAN_EN;
 795              		.loc 1 573 0
 796 0004 044B     		ldr	r3, .L54
 797 0006 044A     		ldr	r2, .L54
 798 0008 1268     		ldr	r2, [r2]
 799 000a 8021     		mov	r1, #128
 800 000c 0906     		lsl	r1, r1, #24
 801 000e 0A43     		orr	r2, r1
 802 0010 1A60     		str	r2, [r3]
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 803              		.loc 1 574 0
 804 0012 BD46     		mov	sp, r7
 805              		@ sp needed
 806 0014 80BD     		pop	{r7, pc}
 807              	.L55:
 808 0016 C046     		.align	2
 809              	.L54:
 810 0018 80021A40 		.word	1075446400
 811              		.cfi_endproc
 812              	.LFE9:
 813              		.size	ADC_SAR_Seq_EnableInjection, .-ADC_SAR_Seq_EnableInjection
 814              		.section	.text.ADC_SAR_Seq_SetLowLimit,"ax",%progbits
 815              		.align	2
 816              		.global	ADC_SAR_Seq_SetLowLimit
 817              		.code	16
 818              		.thumb_func
 819              		.type	ADC_SAR_Seq_SetLowLimit, %function
 820              	ADC_SAR_Seq_SetLowLimit:
 821              	.LFB10:
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 822              		.loc 1 594 0
 823              		.cfi_startproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 26


 824 0000 80B5     		push	{r7, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 82B0     		sub	sp, sp, #8
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 832 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_RANGE_LOW_MASK);
 833              		.loc 1 595 0
 834 0008 084B     		ldr	r3, .L57
 835 000a 084A     		ldr	r2, .L57
 836 000c 1268     		ldr	r2, [r2]
 837 000e 120C     		lsr	r2, r2, #16
 838 0010 1204     		lsl	r2, r2, #16
 839 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_RANGE_LOW_MASK;
 840              		.loc 1 596 0
 841 0014 054B     		ldr	r3, .L57
 842 0016 054A     		ldr	r2, .L57
 843 0018 1168     		ldr	r1, [r2]
 844 001a 7A68     		ldr	r2, [r7, #4]
 845 001c 1204     		lsl	r2, r2, #16
 846 001e 120C     		lsr	r2, r2, #16
 847 0020 0A43     		orr	r2, r1
 848 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 849              		.loc 1 597 0
 850 0024 BD46     		mov	sp, r7
 851 0026 02B0     		add	sp, sp, #8
 852              		@ sp needed
 853 0028 80BD     		pop	{r7, pc}
 854              	.L58:
 855 002a C046     		.align	2
 856              	.L57:
 857 002c 18001A40 		.word	1075445784
 858              		.cfi_endproc
 859              	.LFE10:
 860              		.size	ADC_SAR_Seq_SetLowLimit, .-ADC_SAR_Seq_SetLowLimit
 861              		.section	.text.ADC_SAR_Seq_SetHighLimit,"ax",%progbits
 862              		.align	2
 863              		.global	ADC_SAR_Seq_SetHighLimit
 864              		.code	16
 865              		.thumb_func
 866              		.type	ADC_SAR_Seq_SetHighLimit, %function
 867              	ADC_SAR_Seq_SetHighLimit:
 868              	.LFB11:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 27


 607:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 869              		.loc 1 615 0
 870              		.cfi_startproc
 871 0000 80B5     		push	{r7, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 82B0     		sub	sp, sp, #8
 876              		.cfi_def_cfa_offset 16
 877 0004 00AF     		add	r7, sp, #0
 878              		.cfi_def_cfa_register 7
 879 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_RANGE_HIGH_MASK);
 880              		.loc 1 616 0
 881 0008 074B     		ldr	r3, .L60
 882 000a 074A     		ldr	r2, .L60
 883 000c 1268     		ldr	r2, [r2]
 884 000e 1204     		lsl	r2, r2, #16
 885 0010 120C     		lsr	r2, r2, #16
 886 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_RANGE_HIGH_OFFSET);
 887              		.loc 1 617 0
 888 0014 044B     		ldr	r3, .L60
 889 0016 044A     		ldr	r2, .L60
 890 0018 1168     		ldr	r1, [r2]
 891 001a 7A68     		ldr	r2, [r7, #4]
 892 001c 1204     		lsl	r2, r2, #16
 893 001e 0A43     		orr	r2, r1
 894 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 895              		.loc 1 618 0
 896 0022 BD46     		mov	sp, r7
 897 0024 02B0     		add	sp, sp, #8
 898              		@ sp needed
 899 0026 80BD     		pop	{r7, pc}
 900              	.L61:
 901              		.align	2
 902              	.L60:
 903 0028 18001A40 		.word	1075445784
 904              		.cfi_endproc
 905              	.LFE11:
 906              		.size	ADC_SAR_Seq_SetHighLimit, .-ADC_SAR_Seq_SetHighLimit
 907              		.section	.text.ADC_SAR_Seq_SetLimitMask,"ax",%progbits
 908              		.align	2
 909              		.global	ADC_SAR_Seq_SetLimitMask
 910              		.code	16
 911              		.thumb_func
 912              		.type	ADC_SAR_Seq_SetLimitMask, %function
 913              	ADC_SAR_Seq_SetLimitMask:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 28


 914              	.LFB12:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 915              		.loc 1 639 0
 916              		.cfi_startproc
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 82B0     		sub	sp, sp, #8
 922              		.cfi_def_cfa_offset 16
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 926              		.loc 1 640 0
 927 0008 034B     		ldr	r3, .L63
 928 000a 7A68     		ldr	r2, [r7, #4]
 929 000c 0721     		mov	r1, #7
 930 000e 0A40     		and	r2, r1
 931 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 932              		.loc 1 641 0
 933 0012 BD46     		mov	sp, r7
 934 0014 02B0     		add	sp, sp, #8
 935              		@ sp needed
 936 0016 80BD     		pop	{r7, pc}
 937              	.L64:
 938              		.align	2
 939              	.L63:
 940 0018 38021A40 		.word	1075446328
 941              		.cfi_endproc
 942              	.LFE12:
 943              		.size	ADC_SAR_Seq_SetLimitMask, .-ADC_SAR_Seq_SetLimitMask
 944              		.section	.text.ADC_SAR_Seq_SetSatMask,"ax",%progbits
 945              		.align	2
 946              		.global	ADC_SAR_Seq_SetSatMask
 947              		.code	16
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 29


 948              		.thumb_func
 949              		.type	ADC_SAR_Seq_SetSatMask, %function
 950              	ADC_SAR_Seq_SetSatMask:
 951              	.LFB13:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 952              		.loc 1 662 0
 953              		.cfi_startproc
 954 0000 80B5     		push	{r7, lr}
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
 961              		.cfi_def_cfa_register 7
 962 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 963              		.loc 1 663 0
 964 0008 034B     		ldr	r3, .L66
 965 000a 7A68     		ldr	r2, [r7, #4]
 966 000c 0721     		mov	r1, #7
 967 000e 0A40     		and	r2, r1
 968 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 969              		.loc 1 664 0
 970 0012 BD46     		mov	sp, r7
 971 0014 02B0     		add	sp, sp, #8
 972              		@ sp needed
 973 0016 80BD     		pop	{r7, pc}
 974              	.L67:
 975              		.align	2
 976              	.L66:
 977 0018 28021A40 		.word	1075446312
 978              		.cfi_endproc
 979              	.LFE13:
 980              		.size	ADC_SAR_Seq_SetSatMask, .-ADC_SAR_Seq_SetSatMask
 981              		.section	.text.ADC_SAR_Seq_SetOffset,"ax",%progbits
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 30


 982              		.align	2
 983              		.global	ADC_SAR_Seq_SetOffset
 984              		.code	16
 985              		.thumb_func
 986              		.type	ADC_SAR_Seq_SetOffset, %function
 987              	ADC_SAR_Seq_SetOffset:
 988              	.LFB14:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 989              		.loc 1 690 0
 990              		.cfi_startproc
 991 0000 80B5     		push	{r7, lr}
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 82B0     		sub	sp, sp, #8
 996              		.cfi_def_cfa_offset 16
 997 0004 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 0006 7860     		str	r0, [r7, #4]
 1000 0008 0A1C     		mov	r2, r1
 1001 000a BB1C     		add	r3, r7, #2
 1002 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_offset[chan] = offset;
 1003              		.loc 1 694 0
 1004 000e 044B     		ldr	r3, .L69
 1005 0010 7A68     		ldr	r2, [r7, #4]
 1006 0012 5200     		lsl	r2, r2, #1
 1007 0014 B91C     		add	r1, r7, #2
 1008 0016 0988     		ldrh	r1, [r1]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 31


 1009 0018 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 1010              		.loc 1 695 0
 1011 001a BD46     		mov	sp, r7
 1012 001c 02B0     		add	sp, sp, #8
 1013              		@ sp needed
 1014 001e 80BD     		pop	{r7, pc}
 1015              	.L70:
 1016              		.align	2
 1017              	.L69:
 1018 0020 00000000 		.word	ADC_SAR_Seq_offset
 1019              		.cfi_endproc
 1020              	.LFE14:
 1021              		.size	ADC_SAR_Seq_SetOffset, .-ADC_SAR_Seq_SetOffset
 1022              		.section	.text.ADC_SAR_Seq_SetGain,"ax",%progbits
 1023              		.align	2
 1024              		.global	ADC_SAR_Seq_SetGain
 1025              		.code	16
 1026              		.thumb_func
 1027              		.type	ADC_SAR_Seq_SetGain, %function
 1028              	ADC_SAR_Seq_SetGain:
 1029              	.LFB15:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 1030              		.loc 1 724 0
 1031              		.cfi_startproc
 1032 0000 80B5     		push	{r7, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 32


 1036 0002 82B0     		sub	sp, sp, #8
 1037              		.cfi_def_cfa_offset 16
 1038 0004 00AF     		add	r7, sp, #0
 1039              		.cfi_def_cfa_register 7
 1040 0006 7860     		str	r0, [r7, #4]
 1041 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_countsPer10Volt[chan] = adcGain;
 1042              		.loc 1 728 0
 1043 000a 044B     		ldr	r3, .L72
 1044 000c 7A68     		ldr	r2, [r7, #4]
 1045 000e 9200     		lsl	r2, r2, #2
 1046 0010 3968     		ldr	r1, [r7]
 1047 0012 D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 1048              		.loc 1 729 0
 1049 0014 BD46     		mov	sp, r7
 1050 0016 02B0     		add	sp, sp, #8
 1051              		@ sp needed
 1052 0018 80BD     		pop	{r7, pc}
 1053              	.L73:
 1054 001a C046     		.align	2
 1055              	.L72:
 1056 001c 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1057              		.cfi_endproc
 1058              	.LFE15:
 1059              		.size	ADC_SAR_Seq_SetGain, .-ADC_SAR_Seq_SetGain
 1060              		.section	.text.ADC_SAR_Seq_CountsTo_mVolts,"ax",%progbits
 1061              		.align	2
 1062              		.global	ADC_SAR_Seq_CountsTo_mVolts
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	ADC_SAR_Seq_CountsTo_mVolts, %function
 1066              	ADC_SAR_Seq_CountsTo_mVolts:
 1067              	.LFB16:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #if(ADC_SAR_Seq_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 33


 750:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int16 ADC_SAR_Seq_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 1068              		.loc 1 757 0
 1069              		.cfi_startproc
 1070 0000 80B5     		push	{r7, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 84B0     		sub	sp, sp, #16
 1075              		.cfi_def_cfa_offset 24
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 1079 0008 0A1C     		mov	r2, r1
 1080 000a BB1C     		add	r3, r7, #2
 1081 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1082              		.loc 1 772 0
 1083 000e 1F4B     		ldr	r3, .L80
 1084 0010 7A68     		ldr	r2, [r7, #4]
 1085 0012 5200     		lsl	r2, r2, #1
 1086 0014 D35A     		ldrh	r3, [r2, r3]
 1087 0016 99B2     		uxth	r1, r3
 1088 0018 BB1C     		add	r3, r7, #2
 1089 001a 1A88     		ldrh	r2, [r3]
 1090 001c 8BB2     		uxth	r3, r1
 1091 001e D31A     		sub	r3, r2, r3
 1092 0020 9AB2     		uxth	r2, r3
 1093 0022 BB1C     		add	r3, r7, #2
 1094 0024 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_10MV_COUNTS) + ( (adcCounts > 0) ?
 1095              		.loc 1 774 0
 1096 0026 BB1C     		add	r3, r7, #2
 1097 0028 0022     		mov	r2, #0
 1098 002a 9B5E     		ldrsh	r3, [r3, r2]
 1099 002c 184A     		ldr	r2, .L80+4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 34


 1100 002e 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 1101              		.loc 1 775 0
 1102 0030 BB1C     		add	r3, r7, #2
 1103 0032 0021     		mov	r1, #0
 1104 0034 5B5E     		ldrsh	r3, [r3, r1]
 1105 0036 002B     		cmp	r3, #0
 1106 0038 08DD     		ble	.L75
 1107              		.loc 1 775 0 is_stmt 0 discriminator 1
 1108 003a 164B     		ldr	r3, .L80+8
 1109 003c 7968     		ldr	r1, [r7, #4]
 1110 003e 8900     		lsl	r1, r1, #2
 1111 0040 CB58     		ldr	r3, [r1, r3]
 1112 0042 002B     		cmp	r3, #0
 1113 0044 00DA     		bge	.L76
 1114 0046 0133     		add	r3, r3, #1
 1115              	.L76:
 1116 0048 5B10     		asr	r3, r3, #1
 1117 004a 08E0     		b	.L77
 1118              	.L75:
 1119              		.loc 1 775 0 discriminator 2
 1120 004c 114B     		ldr	r3, .L80+8
 1121 004e 7968     		ldr	r1, [r7, #4]
 1122 0050 8900     		lsl	r1, r1, #2
 1123 0052 CB58     		ldr	r3, [r1, r3]
 1124 0054 002B     		cmp	r3, #0
 1125 0056 00DA     		bge	.L78
 1126 0058 0133     		add	r3, r3, #1
 1127              	.L78:
 1128 005a 5B10     		asr	r3, r3, #1
 1129 005c 5B42     		neg	r3, r3
 1130              	.L77:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 1131              		.loc 1 774 0 is_stmt 1
 1132 005e D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  / ADC_SAR_Seq_countsPer10Volt[chan]);
 1133              		.loc 1 776 0
 1134 0060 0C4B     		ldr	r3, .L80+8
 1135 0062 7A68     		ldr	r2, [r7, #4]
 1136 0064 9200     		lsl	r2, r2, #2
 1137 0066 D358     		ldr	r3, [r2, r3]
 1138 0068 081C     		mov	r0, r1
 1139 006a 191C     		mov	r1, r3
 1140 006c FFF7FEFF 		bl	__aeabi_idiv
 1141 0070 031C     		mov	r3, r0
 1142 0072 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 1143              		.loc 1 774 0
 1144 0074 0E23     		mov	r3, #14
 1145 0076 FB18     		add	r3, r7, r3
 1146 0078 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( mVolts );
 1147              		.loc 1 778 0
 1148 007a 0E23     		mov	r3, #14
 1149 007c FB18     		add	r3, r7, r3
 1150 007e 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 35


 1151 0080 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1152              		.loc 1 779 0
 1153 0082 181C     		mov	r0, r3
 1154 0084 BD46     		mov	sp, r7
 1155 0086 04B0     		add	sp, sp, #16
 1156              		@ sp needed
 1157 0088 80BD     		pop	{r7, pc}
 1158              	.L81:
 1159 008a C046     		.align	2
 1160              	.L80:
 1161 008c 00000000 		.word	ADC_SAR_Seq_offset
 1162 0090 10270000 		.word	10000
 1163 0094 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1164              		.cfi_endproc
 1165              	.LFE16:
 1166              		.size	ADC_SAR_Seq_CountsTo_mVolts, .-ADC_SAR_Seq_CountsTo_mVolts
 1167              		.global	__aeabi_lmul
 1168              		.global	__aeabi_ldivmod
 1169              		.section	.text.ADC_SAR_Seq_CountsTo_uVolts,"ax",%progbits
 1170              		.align	2
 1171              		.global	ADC_SAR_Seq_CountsTo_uVolts
 1172              		.code	16
 1173              		.thumb_func
 1174              		.type	ADC_SAR_Seq_CountsTo_uVolts, %function
 1175              	ADC_SAR_Seq_CountsTo_uVolts:
 1176              	.LFB17:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 36


 810:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int32 ADC_SAR_Seq_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 1177              		.loc 1 811 0
 1178              		.cfi_startproc
 1179 0000 B0B5     		push	{r4, r5, r7, lr}
 1180              		.cfi_def_cfa_offset 16
 1181              		.cfi_offset 4, -16
 1182              		.cfi_offset 5, -12
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 86B0     		sub	sp, sp, #24
 1186              		.cfi_def_cfa_offset 40
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0006 F860     		str	r0, [r7, #12]
 1190 0008 0A1C     		mov	r2, r1
 1191 000a 0A23     		mov	r3, #10
 1192 000c FB18     		add	r3, r7, r3
 1193 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1194              		.loc 1 826 0
 1195 0010 194B     		ldr	r3, .L84
 1196 0012 FA68     		ldr	r2, [r7, #12]
 1197 0014 5200     		lsl	r2, r2, #1
 1198 0016 D35A     		ldrh	r3, [r2, r3]
 1199 0018 99B2     		uxth	r1, r3
 1200 001a 0A23     		mov	r3, #10
 1201 001c FB18     		add	r3, r7, r3
 1202 001e 1A88     		ldrh	r2, [r3]
 1203 0020 8BB2     		uxth	r3, r1
 1204 0022 D31A     		sub	r3, r2, r3
 1205 0024 9AB2     		uxth	r2, r3
 1206 0026 0A23     		mov	r3, #10
 1207 0028 FB18     		add	r3, r7, r3
 1208 002a 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_10UV_COUNTS) / ADC_SAR_Seq_countsPer10Volt[chan];
 1209              		.loc 1 828 0
 1210 002c 0A23     		mov	r3, #10
 1211 002e FB18     		add	r3, r7, r3
 1212 0030 1B88     		ldrh	r3, [r3]
 1213 0032 1BB2     		sxth	r3, r3
 1214 0034 3B60     		str	r3, [r7]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 37


 1215 0036 DB17     		asr	r3, r3, #31
 1216 0038 7B60     		str	r3, [r7, #4]
 1217 003a 3868     		ldr	r0, [r7]
 1218 003c 7968     		ldr	r1, [r7, #4]
 1219 003e 0F4A     		ldr	r2, .L84+4
 1220 0040 0023     		mov	r3, #0
 1221 0042 FFF7FEFF 		bl	__aeabi_lmul
 1222 0046 021C     		mov	r2, r0
 1223 0048 0B1C     		mov	r3, r1
 1224 004a 101C     		mov	r0, r2
 1225 004c 191C     		mov	r1, r3
 1226 004e 0C4B     		ldr	r3, .L84+8
 1227 0050 FA68     		ldr	r2, [r7, #12]
 1228 0052 9200     		lsl	r2, r2, #2
 1229 0054 D358     		ldr	r3, [r2, r3]
 1230 0056 1C1C     		mov	r4, r3
 1231 0058 DB17     		asr	r3, r3, #31
 1232 005a 1D1C     		mov	r5, r3
 1233 005c 221C     		mov	r2, r4
 1234 005e 2B1C     		mov	r3, r5
 1235 0060 FFF7FEFF 		bl	__aeabi_ldivmod
 1236 0064 031C     		mov	r3, r0
 1237 0066 0C1C     		mov	r4, r1
 1238 0068 3B61     		str	r3, [r7, #16]
 1239 006a 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( (int32)uVolts );
 1240              		.loc 1 830 0
 1241 006c 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1242              		.loc 1 831 0
 1243 006e 181C     		mov	r0, r3
 1244 0070 BD46     		mov	sp, r7
 1245 0072 06B0     		add	sp, sp, #24
 1246              		@ sp needed
 1247 0074 B0BD     		pop	{r4, r5, r7, pc}
 1248              	.L85:
 1249 0076 C046     		.align	2
 1250              	.L84:
 1251 0078 00000000 		.word	ADC_SAR_Seq_offset
 1252 007c 80969800 		.word	10000000
 1253 0080 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1254              		.cfi_endproc
 1255              	.LFE17:
 1256              		.size	ADC_SAR_Seq_CountsTo_uVolts, .-ADC_SAR_Seq_CountsTo_uVolts
 1257              		.global	__aeabi_i2f
 1258              		.global	__aeabi_fmul
 1259              		.global	__aeabi_fdiv
 1260              		.section	.text.ADC_SAR_Seq_CountsTo_Volts,"ax",%progbits
 1261              		.align	2
 1262              		.global	ADC_SAR_Seq_CountsTo_Volts
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	ADC_SAR_Seq_CountsTo_Volts, %function
 1266              	ADC_SAR_Seq_CountsTo_Volts:
 1267              	.LFB18:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 38


 833:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     float32 ADC_SAR_Seq_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 1268              		.loc 1 856 0
 1269              		.cfi_startproc
 1270 0000 90B5     		push	{r4, r7, lr}
 1271              		.cfi_def_cfa_offset 12
 1272              		.cfi_offset 4, -12
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 85B0     		sub	sp, sp, #20
 1276              		.cfi_def_cfa_offset 32
 1277 0004 00AF     		add	r7, sp, #0
 1278              		.cfi_def_cfa_register 7
 1279 0006 7860     		str	r0, [r7, #4]
 1280 0008 0A1C     		mov	r2, r1
 1281 000a BB1C     		add	r3, r7, #2
 1282 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1283              		.loc 1 871 0
 1284 000e 164B     		ldr	r3, .L88
 1285 0010 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 39


 1286 0012 5200     		lsl	r2, r2, #1
 1287 0014 D35A     		ldrh	r3, [r2, r3]
 1288 0016 99B2     		uxth	r1, r3
 1289 0018 BB1C     		add	r3, r7, #2
 1290 001a 1A88     		ldrh	r2, [r3]
 1291 001c 8BB2     		uxth	r3, r1
 1292 001e D31A     		sub	r3, r2, r3
 1293 0020 9AB2     		uxth	r2, r3
 1294 0022 BB1C     		add	r3, r7, #2
 1295 0024 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_10V_COUNTS) / (float32)ADC_SAR_Seq_countsPer10Vol
 1296              		.loc 1 873 0
 1297 0026 BB1C     		add	r3, r7, #2
 1298 0028 0022     		mov	r2, #0
 1299 002a 9B5E     		ldrsh	r3, [r3, r2]
 1300 002c 181C     		mov	r0, r3
 1301 002e FFF7FEFF 		bl	__aeabi_i2f
 1302 0032 031C     		add	r3, r0, #0
 1303 0034 181C     		add	r0, r3, #0
 1304 0036 0D49     		ldr	r1, .L88+4
 1305 0038 FFF7FEFF 		bl	__aeabi_fmul
 1306 003c 031C     		add	r3, r0, #0
 1307 003e 1C1C     		add	r4, r3, #0
 1308 0040 0B4B     		ldr	r3, .L88+8
 1309 0042 7A68     		ldr	r2, [r7, #4]
 1310 0044 9200     		lsl	r2, r2, #2
 1311 0046 D358     		ldr	r3, [r2, r3]
 1312 0048 181C     		mov	r0, r3
 1313 004a FFF7FEFF 		bl	__aeabi_i2f
 1314 004e 031C     		add	r3, r0, #0
 1315 0050 201C     		add	r0, r4, #0
 1316 0052 191C     		add	r1, r3, #0
 1317 0054 FFF7FEFF 		bl	__aeabi_fdiv
 1318 0058 031C     		add	r3, r0, #0
 1319 005a FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( volts );
 1320              		.loc 1 875 0
 1321 005c FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1322              		.loc 1 876 0
 1323 005e 181C     		add	r0, r3, #0
 1324 0060 BD46     		mov	sp, r7
 1325 0062 05B0     		add	sp, sp, #20
 1326              		@ sp needed
 1327 0064 90BD     		pop	{r4, r7, pc}
 1328              	.L89:
 1329 0066 C046     		.align	2
 1330              	.L88:
 1331 0068 00000000 		.word	ADC_SAR_Seq_offset
 1332 006c 00002041 		.word	1092616192
 1333 0070 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1334              		.cfi_endproc
 1335              	.LFE18:
 1336              		.size	ADC_SAR_Seq_CountsTo_Volts, .-ADC_SAR_Seq_CountsTo_Volts
 1337              		.section	.rodata
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 40


 1338              		.align	2
 1339              		.type	ADC_SAR_Seq_InputsPlacement.4744, %object
 1340              		.size	ADC_SAR_Seq_InputsPlacement.4744, 4
 1341              	ADC_SAR_Seq_InputsPlacement.4744:
 1342 0010 06       		.byte	6
 1343 0011 07       		.byte	7
 1344 0012 05       		.byte	5
 1345 0013 70       		.byte	112
 1346              		.text
 1347              	.Letext0:
 1348              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1349              		.section	.debug_info,"",%progbits
 1350              	.Ldebug_info0:
 1351 0000 AF040000 		.4byte	0x4af
 1352 0004 0400     		.2byte	0x4
 1353 0006 00000000 		.4byte	.Ldebug_abbrev0
 1354 000a 04       		.byte	0x4
 1355 000b 01       		.uleb128 0x1
 1356 000c B8030000 		.4byte	.LASF61
 1357 0010 01       		.byte	0x1
 1358 0011 F2020000 		.4byte	.LASF62
 1359 0015 2A030000 		.4byte	.LASF63
 1360 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1361 001d 00000000 		.4byte	0
 1362 0021 00000000 		.4byte	.Ldebug_line0
 1363 0025 02       		.uleb128 0x2
 1364 0026 01       		.byte	0x1
 1365 0027 06       		.byte	0x6
 1366 0028 DA000000 		.4byte	.LASF0
 1367 002c 02       		.uleb128 0x2
 1368 002d 01       		.byte	0x1
 1369 002e 08       		.byte	0x8
 1370 002f 74020000 		.4byte	.LASF1
 1371 0033 02       		.uleb128 0x2
 1372 0034 02       		.byte	0x2
 1373 0035 05       		.byte	0x5
 1374 0036 82020000 		.4byte	.LASF2
 1375 003a 02       		.uleb128 0x2
 1376 003b 02       		.byte	0x2
 1377 003c 07       		.byte	0x7
 1378 003d 91010000 		.4byte	.LASF3
 1379 0041 02       		.uleb128 0x2
 1380 0042 04       		.byte	0x4
 1381 0043 05       		.byte	0x5
 1382 0044 EC000000 		.4byte	.LASF4
 1383 0048 02       		.uleb128 0x2
 1384 0049 04       		.byte	0x4
 1385 004a 07       		.byte	0x7
 1386 004b 53010000 		.4byte	.LASF5
 1387 004f 02       		.uleb128 0x2
 1388 0050 08       		.byte	0x8
 1389 0051 05       		.byte	0x5
 1390 0052 CC000000 		.4byte	.LASF6
 1391 0056 02       		.uleb128 0x2
 1392 0057 08       		.byte	0x8
 1393 0058 07       		.byte	0x7
 1394 0059 99000000 		.4byte	.LASF7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 41


 1395 005d 03       		.uleb128 0x3
 1396 005e 04       		.byte	0x4
 1397 005f 05       		.byte	0x5
 1398 0060 696E7400 		.ascii	"int\000"
 1399 0064 02       		.uleb128 0x2
 1400 0065 04       		.byte	0x4
 1401 0066 07       		.byte	0x7
 1402 0067 27010000 		.4byte	.LASF8
 1403 006b 04       		.uleb128 0x4
 1404 006c F5000000 		.4byte	.LASF9
 1405 0070 02       		.byte	0x2
 1406 0071 3801     		.2byte	0x138
 1407 0073 2C000000 		.4byte	0x2c
 1408 0077 04       		.uleb128 0x4
 1409 0078 1B000000 		.4byte	.LASF10
 1410 007c 02       		.byte	0x2
 1411 007d 3901     		.2byte	0x139
 1412 007f 3A000000 		.4byte	0x3a
 1413 0083 04       		.uleb128 0x4
 1414 0084 02010000 		.4byte	.LASF11
 1415 0088 02       		.byte	0x2
 1416 0089 3A01     		.2byte	0x13a
 1417 008b 48000000 		.4byte	0x48
 1418 008f 04       		.uleb128 0x4
 1419 0090 B2030000 		.4byte	.LASF12
 1420 0094 02       		.byte	0x2
 1421 0095 3C01     		.2byte	0x13c
 1422 0097 33000000 		.4byte	0x33
 1423 009b 04       		.uleb128 0x4
 1424 009c E6000000 		.4byte	.LASF13
 1425 00a0 02       		.byte	0x2
 1426 00a1 3D01     		.2byte	0x13d
 1427 00a3 41000000 		.4byte	0x41
 1428 00a7 04       		.uleb128 0x4
 1429 00a8 F7010000 		.4byte	.LASF14
 1430 00ac 02       		.byte	0x2
 1431 00ad 3E01     		.2byte	0x13e
 1432 00af B3000000 		.4byte	0xb3
 1433 00b3 02       		.uleb128 0x2
 1434 00b4 04       		.byte	0x4
 1435 00b5 04       		.byte	0x4
 1436 00b6 30020000 		.4byte	.LASF15
 1437 00ba 02       		.uleb128 0x2
 1438 00bb 08       		.byte	0x8
 1439 00bc 04       		.byte	0x4
 1440 00bd FB000000 		.4byte	.LASF16
 1441 00c1 04       		.uleb128 0x4
 1442 00c2 2A020000 		.4byte	.LASF17
 1443 00c6 02       		.byte	0x2
 1444 00c7 4301     		.2byte	0x143
 1445 00c9 4F000000 		.4byte	0x4f
 1446 00cd 02       		.uleb128 0x2
 1447 00ce 01       		.byte	0x1
 1448 00cf 08       		.byte	0x8
 1449 00d0 ED020000 		.4byte	.LASF18
 1450 00d4 04       		.uleb128 0x4
 1451 00d5 D6010000 		.4byte	.LASF19
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 42


 1452 00d9 02       		.byte	0x2
 1453 00da E401     		.2byte	0x1e4
 1454 00dc E0000000 		.4byte	0xe0
 1455 00e0 05       		.uleb128 0x5
 1456 00e1 83000000 		.4byte	0x83
 1457 00e5 02       		.uleb128 0x2
 1458 00e6 04       		.byte	0x4
 1459 00e7 07       		.byte	0x7
 1460 00e8 FF010000 		.4byte	.LASF20
 1461 00ec 06       		.uleb128 0x6
 1462 00ed 8C020000 		.4byte	.LASF25
 1463 00f1 01       		.byte	0x1
 1464 00f2 3F       		.byte	0x3f
 1465 00f3 00000000 		.4byte	.LFB0
 1466 00f7 24000000 		.4byte	.LFE0-.LFB0
 1467 00fb 01       		.uleb128 0x1
 1468 00fc 9C       		.byte	0x9c
 1469 00fd 07       		.uleb128 0x7
 1470 00fe 09010000 		.4byte	.LASF36
 1471 0102 01       		.byte	0x1
 1472 0103 5E       		.byte	0x5e
 1473 0104 00000000 		.4byte	.LFB1
 1474 0108 5C020000 		.4byte	.LFE1-.LFB1
 1475 010c 01       		.uleb128 0x1
 1476 010d 9C       		.byte	0x9c
 1477 010e 4E010000 		.4byte	0x14e
 1478 0112 08       		.uleb128 0x8
 1479 0113 B5020000 		.4byte	.LASF21
 1480 0117 01       		.byte	0x1
 1481 0118 60       		.byte	0x60
 1482 0119 83000000 		.4byte	0x83
 1483 011d 02       		.uleb128 0x2
 1484 011e 91       		.byte	0x91
 1485 011f 74       		.sleb128 -12
 1486 0120 08       		.uleb128 0x8
 1487 0121 6B010000 		.4byte	.LASF22
 1488 0125 01       		.byte	0x1
 1489 0126 61       		.byte	0x61
 1490 0127 83000000 		.4byte	0x83
 1491 012b 02       		.uleb128 0x2
 1492 012c 91       		.byte	0x91
 1493 012d 6C       		.sleb128 -20
 1494 012e 08       		.uleb128 0x8
 1495 012f 46000000 		.4byte	.LASF23
 1496 0133 01       		.byte	0x1
 1497 0134 62       		.byte	0x62
 1498 0135 9B000000 		.4byte	0x9b
 1499 0139 02       		.uleb128 0x2
 1500 013a 91       		.byte	0x91
 1501 013b 70       		.sleb128 -16
 1502 013c 08       		.uleb128 0x8
 1503 013d 36020000 		.4byte	.LASF24
 1504 0141 01       		.byte	0x1
 1505 0142 65       		.byte	0x65
 1506 0143 5E010000 		.4byte	0x15e
 1507 0147 05       		.uleb128 0x5
 1508 0148 03       		.byte	0x3
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 43


 1509 0149 10000000 		.4byte	ADC_SAR_Seq_InputsPlacement.4744
 1510 014d 00       		.byte	0
 1511 014e 09       		.uleb128 0x9
 1512 014f 6B000000 		.4byte	0x6b
 1513 0153 5E010000 		.4byte	0x15e
 1514 0157 0A       		.uleb128 0xa
 1515 0158 E5000000 		.4byte	0xe5
 1516 015c 03       		.byte	0x3
 1517 015d 00       		.byte	0
 1518 015e 0B       		.uleb128 0xb
 1519 015f 4E010000 		.4byte	0x14e
 1520 0163 0C       		.uleb128 0xc
 1521 0164 9F030000 		.4byte	.LASF26
 1522 0168 01       		.byte	0x1
 1523 0169 4A01     		.2byte	0x14a
 1524 016b 00000000 		.4byte	.LFB2
 1525 016f 28000000 		.4byte	.LFE2-.LFB2
 1526 0173 01       		.uleb128 0x1
 1527 0174 9C       		.byte	0x9c
 1528 0175 0D       		.uleb128 0xd
 1529 0176 87030000 		.4byte	.LASF27
 1530 017a 01       		.byte	0x1
 1531 017b 6D01     		.2byte	0x16d
 1532 017d 00000000 		.4byte	.LFB3
 1533 0181 18000000 		.4byte	.LFE3-.LFB3
 1534 0185 01       		.uleb128 0x1
 1535 0186 9C       		.byte	0x9c
 1536 0187 0D       		.uleb128 0xd
 1537 0188 11020000 		.4byte	.LASF28
 1538 018c 01       		.byte	0x1
 1539 018d 8701     		.2byte	0x187
 1540 018f 00000000 		.4byte	.LFB4
 1541 0193 1C000000 		.4byte	.LFE4-.LFB4
 1542 0197 01       		.uleb128 0x1
 1543 0198 9C       		.byte	0x9c
 1544 0199 0D       		.uleb128 0xd
 1545 019a B7010000 		.4byte	.LASF29
 1546 019e 01       		.byte	0x1
 1547 019f A001     		.2byte	0x1a0
 1548 01a1 00000000 		.4byte	.LFB5
 1549 01a5 1C000000 		.4byte	.LFE5-.LFB5
 1550 01a9 01       		.uleb128 0x1
 1551 01aa 9C       		.byte	0x9c
 1552 01ab 0E       		.uleb128 0xe
 1553 01ac 61000000 		.4byte	.LASF31
 1554 01b0 01       		.byte	0x1
 1555 01b1 C201     		.2byte	0x1c2
 1556 01b3 83000000 		.4byte	0x83
 1557 01b7 00000000 		.4byte	.LFB6
 1558 01bb 7C000000 		.4byte	.LFE6-.LFB6
 1559 01bf 01       		.uleb128 0x1
 1560 01c0 9C       		.byte	0x9c
 1561 01c1 E4010000 		.4byte	0x1e4
 1562 01c5 0F       		.uleb128 0xf
 1563 01c6 1F010000 		.4byte	.LASF33
 1564 01ca 01       		.byte	0x1
 1565 01cb C201     		.2byte	0x1c2
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 44


 1566 01cd 83000000 		.4byte	0x83
 1567 01d1 02       		.uleb128 0x2
 1568 01d2 91       		.byte	0x91
 1569 01d3 6C       		.sleb128 -20
 1570 01d4 10       		.uleb128 0x10
 1571 01d5 98030000 		.4byte	.LASF30
 1572 01d9 01       		.byte	0x1
 1573 01da C401     		.2byte	0x1c4
 1574 01dc 83000000 		.4byte	0x83
 1575 01e0 02       		.uleb128 0x2
 1576 01e1 91       		.byte	0x91
 1577 01e2 74       		.sleb128 -12
 1578 01e3 00       		.byte	0
 1579 01e4 0E       		.uleb128 0xe
 1580 01e5 34010000 		.4byte	.LASF32
 1581 01e9 01       		.byte	0x1
 1582 01ea F801     		.2byte	0x1f8
 1583 01ec 8F000000 		.4byte	0x8f
 1584 01f0 00000000 		.4byte	.LFB7
 1585 01f4 44000000 		.4byte	.LFE7-.LFB7
 1586 01f8 01       		.uleb128 0x1
 1587 01f9 9C       		.byte	0x9c
 1588 01fa 1D020000 		.4byte	0x21d
 1589 01fe 0F       		.uleb128 0xf
 1590 01ff E8020000 		.4byte	.LASF34
 1591 0203 01       		.byte	0x1
 1592 0204 F801     		.2byte	0x1f8
 1593 0206 83000000 		.4byte	0x83
 1594 020a 02       		.uleb128 0x2
 1595 020b 91       		.byte	0x91
 1596 020c 6C       		.sleb128 -20
 1597 020d 10       		.uleb128 0x10
 1598 020e 5F040000 		.4byte	.LASF35
 1599 0212 01       		.byte	0x1
 1600 0213 FA01     		.2byte	0x1fa
 1601 0215 83000000 		.4byte	0x83
 1602 0219 02       		.uleb128 0x2
 1603 021a 91       		.byte	0x91
 1604 021b 74       		.sleb128 -12
 1605 021c 00       		.byte	0
 1606 021d 11       		.uleb128 0x11
 1607 021e 5C020000 		.4byte	.LASF37
 1608 0222 01       		.byte	0x1
 1609 0223 2502     		.2byte	0x225
 1610 0225 00000000 		.4byte	.LFB8
 1611 0229 1C000000 		.4byte	.LFE8-.LFB8
 1612 022d 01       		.uleb128 0x1
 1613 022e 9C       		.byte	0x9c
 1614 022f 43020000 		.4byte	0x243
 1615 0233 0F       		.uleb128 0xf
 1616 0234 1A010000 		.4byte	.LASF38
 1617 0238 01       		.byte	0x1
 1618 0239 2502     		.2byte	0x225
 1619 023b 83000000 		.4byte	0x83
 1620 023f 02       		.uleb128 0x2
 1621 0240 91       		.byte	0x91
 1622 0241 74       		.sleb128 -12
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 45


 1623 0242 00       		.byte	0
 1624 0243 0D       		.uleb128 0xd
 1625 0244 22000000 		.4byte	.LASF39
 1626 0248 01       		.byte	0x1
 1627 0249 3B02     		.2byte	0x23b
 1628 024b 00000000 		.4byte	.LFB9
 1629 024f 1C000000 		.4byte	.LFE9-.LFB9
 1630 0253 01       		.uleb128 0x1
 1631 0254 9C       		.byte	0x9c
 1632 0255 11       		.uleb128 0x11
 1633 0256 66040000 		.4byte	.LASF40
 1634 025a 01       		.byte	0x1
 1635 025b 5102     		.2byte	0x251
 1636 025d 00000000 		.4byte	.LFB10
 1637 0261 30000000 		.4byte	.LFE10-.LFB10
 1638 0265 01       		.uleb128 0x1
 1639 0266 9C       		.byte	0x9c
 1640 0267 7B020000 		.4byte	0x27b
 1641 026b 0F       		.uleb128 0xf
 1642 026c 08020000 		.4byte	.LASF41
 1643 0270 01       		.byte	0x1
 1644 0271 5102     		.2byte	0x251
 1645 0273 83000000 		.4byte	0x83
 1646 0277 02       		.uleb128 0x2
 1647 0278 91       		.byte	0x91
 1648 0279 74       		.sleb128 -12
 1649 027a 00       		.byte	0
 1650 027b 11       		.uleb128 0x11
 1651 027c 46040000 		.4byte	.LASF42
 1652 0280 01       		.byte	0x1
 1653 0281 6602     		.2byte	0x266
 1654 0283 00000000 		.4byte	.LFB11
 1655 0287 2C000000 		.4byte	.LFE11-.LFB11
 1656 028b 01       		.uleb128 0x1
 1657 028c 9C       		.byte	0x9c
 1658 028d A1020000 		.4byte	0x2a1
 1659 0291 0F       		.uleb128 0xf
 1660 0292 52020000 		.4byte	.LASF43
 1661 0296 01       		.byte	0x1
 1662 0297 6602     		.2byte	0x266
 1663 0299 83000000 		.4byte	0x83
 1664 029d 02       		.uleb128 0x2
 1665 029e 91       		.byte	0x91
 1666 029f 74       		.sleb128 -12
 1667 02a0 00       		.byte	0
 1668 02a1 11       		.uleb128 0x11
 1669 02a2 CF020000 		.4byte	.LASF44
 1670 02a6 01       		.byte	0x1
 1671 02a7 7E02     		.2byte	0x27e
 1672 02a9 00000000 		.4byte	.LFB12
 1673 02ad 1C000000 		.4byte	.LFE12-.LFB12
 1674 02b1 01       		.uleb128 0x1
 1675 02b2 9C       		.byte	0x9c
 1676 02b3 C7020000 		.4byte	0x2c7
 1677 02b7 0F       		.uleb128 0xf
 1678 02b8 1A010000 		.4byte	.LASF38
 1679 02bc 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 46


 1680 02bd 7E02     		.2byte	0x27e
 1681 02bf 83000000 		.4byte	0x83
 1682 02c3 02       		.uleb128 0x2
 1683 02c4 91       		.byte	0x91
 1684 02c5 74       		.sleb128 -12
 1685 02c6 00       		.byte	0
 1686 02c7 11       		.uleb128 0x11
 1687 02c8 9E020000 		.4byte	.LASF45
 1688 02cc 01       		.byte	0x1
 1689 02cd 9502     		.2byte	0x295
 1690 02cf 00000000 		.4byte	.LFB13
 1691 02d3 1C000000 		.4byte	.LFE13-.LFB13
 1692 02d7 01       		.uleb128 0x1
 1693 02d8 9C       		.byte	0x9c
 1694 02d9 ED020000 		.4byte	0x2ed
 1695 02dd 0F       		.uleb128 0xf
 1696 02de 1A010000 		.4byte	.LASF38
 1697 02e2 01       		.byte	0x1
 1698 02e3 9502     		.2byte	0x295
 1699 02e5 83000000 		.4byte	0x83
 1700 02e9 02       		.uleb128 0x2
 1701 02ea 91       		.byte	0x91
 1702 02eb 74       		.sleb128 -12
 1703 02ec 00       		.byte	0
 1704 02ed 11       		.uleb128 0x11
 1705 02ee 7E040000 		.4byte	.LASF46
 1706 02f2 01       		.byte	0x1
 1707 02f3 B102     		.2byte	0x2b1
 1708 02f5 00000000 		.4byte	.LFB14
 1709 02f9 24000000 		.4byte	.LFE14-.LFB14
 1710 02fd 01       		.uleb128 0x1
 1711 02fe 9C       		.byte	0x9c
 1712 02ff 22030000 		.4byte	0x322
 1713 0303 0F       		.uleb128 0xf
 1714 0304 E8020000 		.4byte	.LASF34
 1715 0308 01       		.byte	0x1
 1716 0309 B102     		.2byte	0x2b1
 1717 030b 83000000 		.4byte	0x83
 1718 030f 02       		.uleb128 0x2
 1719 0310 91       		.byte	0x91
 1720 0311 74       		.sleb128 -12
 1721 0312 0F       		.uleb128 0xf
 1722 0313 19030000 		.4byte	.LASF47
 1723 0317 01       		.byte	0x1
 1724 0318 B102     		.2byte	0x2b1
 1725 031a 8F000000 		.4byte	0x8f
 1726 031e 02       		.uleb128 0x2
 1727 031f 91       		.byte	0x91
 1728 0320 72       		.sleb128 -14
 1729 0321 00       		.byte	0
 1730 0322 11       		.uleb128 0x11
 1731 0323 4D000000 		.4byte	.LASF48
 1732 0327 01       		.byte	0x1
 1733 0328 D302     		.2byte	0x2d3
 1734 032a 00000000 		.4byte	.LFB15
 1735 032e 20000000 		.4byte	.LFE15-.LFB15
 1736 0332 01       		.uleb128 0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 47


 1737 0333 9C       		.byte	0x9c
 1738 0334 57030000 		.4byte	0x357
 1739 0338 0F       		.uleb128 0xf
 1740 0339 E8020000 		.4byte	.LASF34
 1741 033d 01       		.byte	0x1
 1742 033e D302     		.2byte	0x2d3
 1743 0340 83000000 		.4byte	0x83
 1744 0344 02       		.uleb128 0x2
 1745 0345 91       		.byte	0x91
 1746 0346 74       		.sleb128 -12
 1747 0347 0F       		.uleb128 0xf
 1748 0348 3E000000 		.4byte	.LASF49
 1749 034c 01       		.byte	0x1
 1750 034d D302     		.2byte	0x2d3
 1751 034f 9B000000 		.4byte	0x9b
 1752 0353 02       		.uleb128 0x2
 1753 0354 91       		.byte	0x91
 1754 0355 70       		.sleb128 -16
 1755 0356 00       		.byte	0
 1756 0357 12       		.uleb128 0x12
 1757 0358 B0000000 		.4byte	.LASF50
 1758 035c 01       		.byte	0x1
 1759 035d F402     		.2byte	0x2f4
 1760 035f 8F000000 		.4byte	0x8f
 1761 0363 00000000 		.4byte	.LFB16
 1762 0367 98000000 		.4byte	.LFE16-.LFB16
 1763 036b 01       		.uleb128 0x1
 1764 036c 9C       		.byte	0x9c
 1765 036d 9F030000 		.4byte	0x39f
 1766 0371 0F       		.uleb128 0xf
 1767 0372 E8020000 		.4byte	.LASF34
 1768 0376 01       		.byte	0x1
 1769 0377 F402     		.2byte	0x2f4
 1770 0379 83000000 		.4byte	0x83
 1771 037d 02       		.uleb128 0x2
 1772 037e 91       		.byte	0x91
 1773 037f 6C       		.sleb128 -20
 1774 0380 0F       		.uleb128 0xf
 1775 0381 20030000 		.4byte	.LASF51
 1776 0385 01       		.byte	0x1
 1777 0386 F402     		.2byte	0x2f4
 1778 0388 8F000000 		.4byte	0x8f
 1779 038c 02       		.uleb128 0x2
 1780 038d 91       		.byte	0x91
 1781 038e 6A       		.sleb128 -22
 1782 038f 10       		.uleb128 0x10
 1783 0390 CF010000 		.4byte	.LASF52
 1784 0394 01       		.byte	0x1
 1785 0395 F602     		.2byte	0x2f6
 1786 0397 8F000000 		.4byte	0x8f
 1787 039b 02       		.uleb128 0x2
 1788 039c 91       		.byte	0x91
 1789 039d 76       		.sleb128 -10
 1790 039e 00       		.byte	0
 1791 039f 12       		.uleb128 0x12
 1792 03a0 7D000000 		.4byte	.LASF53
 1793 03a4 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 48


 1794 03a5 2A03     		.2byte	0x32a
 1795 03a7 9B000000 		.4byte	0x9b
 1796 03ab 00000000 		.4byte	.LFB17
 1797 03af 84000000 		.4byte	.LFE17-.LFB17
 1798 03b3 01       		.uleb128 0x1
 1799 03b4 9C       		.byte	0x9c
 1800 03b5 E7030000 		.4byte	0x3e7
 1801 03b9 0F       		.uleb128 0xf
 1802 03ba E8020000 		.4byte	.LASF34
 1803 03be 01       		.byte	0x1
 1804 03bf 2A03     		.2byte	0x32a
 1805 03c1 83000000 		.4byte	0x83
 1806 03c5 02       		.uleb128 0x2
 1807 03c6 91       		.byte	0x91
 1808 03c7 64       		.sleb128 -28
 1809 03c8 0F       		.uleb128 0xf
 1810 03c9 20030000 		.4byte	.LASF51
 1811 03cd 01       		.byte	0x1
 1812 03ce 2A03     		.2byte	0x32a
 1813 03d0 8F000000 		.4byte	0x8f
 1814 03d4 02       		.uleb128 0x2
 1815 03d5 91       		.byte	0x91
 1816 03d6 62       		.sleb128 -30
 1817 03d7 10       		.uleb128 0x10
 1818 03d8 4C010000 		.4byte	.LASF54
 1819 03dc 01       		.byte	0x1
 1820 03dd 2C03     		.2byte	0x32c
 1821 03df C1000000 		.4byte	0xc1
 1822 03e3 02       		.uleb128 0x2
 1823 03e4 91       		.byte	0x91
 1824 03e5 68       		.sleb128 -24
 1825 03e6 00       		.byte	0
 1826 03e7 12       		.uleb128 0x12
 1827 03e8 00000000 		.4byte	.LASF55
 1828 03ec 01       		.byte	0x1
 1829 03ed 5703     		.2byte	0x357
 1830 03ef A7000000 		.4byte	0xa7
 1831 03f3 00000000 		.4byte	.LFB18
 1832 03f7 74000000 		.4byte	.LFE18-.LFB18
 1833 03fb 01       		.uleb128 0x1
 1834 03fc 9C       		.byte	0x9c
 1835 03fd 2F040000 		.4byte	0x42f
 1836 0401 0F       		.uleb128 0xf
 1837 0402 E8020000 		.4byte	.LASF34
 1838 0406 01       		.byte	0x1
 1839 0407 5703     		.2byte	0x357
 1840 0409 83000000 		.4byte	0x83
 1841 040d 02       		.uleb128 0x2
 1842 040e 91       		.byte	0x91
 1843 040f 64       		.sleb128 -28
 1844 0410 0F       		.uleb128 0xf
 1845 0411 20030000 		.4byte	.LASF51
 1846 0415 01       		.byte	0x1
 1847 0416 5703     		.2byte	0x357
 1848 0418 8F000000 		.4byte	0x8f
 1849 041c 02       		.uleb128 0x2
 1850 041d 91       		.byte	0x91
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 49


 1851 041e 62       		.sleb128 -30
 1852 041f 10       		.uleb128 0x10
 1853 0420 65010000 		.4byte	.LASF56
 1854 0424 01       		.byte	0x1
 1855 0425 5903     		.2byte	0x359
 1856 0427 A7000000 		.4byte	0xa7
 1857 042b 02       		.uleb128 0x2
 1858 042c 91       		.byte	0x91
 1859 042d 6C       		.sleb128 -20
 1860 042e 00       		.byte	0
 1861 042f 09       		.uleb128 0x9
 1862 0430 83000000 		.4byte	0x83
 1863 0434 3F040000 		.4byte	0x43f
 1864 0438 0A       		.uleb128 0xa
 1865 0439 E5000000 		.4byte	0xe5
 1866 043d 03       		.byte	0x3
 1867 043e 00       		.byte	0
 1868 043f 08       		.uleb128 0x8
 1869 0440 DC010000 		.4byte	.LASF57
 1870 0444 01       		.byte	0x1
 1871 0445 21       		.byte	0x21
 1872 0446 50040000 		.4byte	0x450
 1873 044a 05       		.uleb128 0x5
 1874 044b 03       		.byte	0x3
 1875 044c 00000000 		.4byte	ADC_SAR_Seq_channelsConfig
 1876 0450 0B       		.uleb128 0xb
 1877 0451 2F040000 		.4byte	0x42f
 1878 0455 13       		.uleb128 0x13
 1879 0456 BB020000 		.4byte	.LASF58
 1880 045a 01       		.byte	0x1
 1881 045b 18       		.byte	0x18
 1882 045c 6B000000 		.4byte	0x6b
 1883 0460 05       		.uleb128 0x5
 1884 0461 03       		.byte	0x3
 1885 0462 00000000 		.4byte	ADC_SAR_Seq_initVar
 1886 0466 09       		.uleb128 0x9
 1887 0467 8F000000 		.4byte	0x8f
 1888 046b 76040000 		.4byte	0x476
 1889 046f 0A       		.uleb128 0xa
 1890 0470 E5000000 		.4byte	0xe5
 1891 0474 03       		.byte	0x3
 1892 0475 00       		.byte	0
 1893 0476 13       		.uleb128 0x13
 1894 0477 A4010000 		.4byte	.LASF59
 1895 047b 01       		.byte	0x1
 1896 047c 19       		.byte	0x19
 1897 047d 87040000 		.4byte	0x487
 1898 0481 05       		.uleb128 0x5
 1899 0482 03       		.byte	0x3
 1900 0483 00000000 		.4byte	ADC_SAR_Seq_offset
 1901 0487 05       		.uleb128 0x5
 1902 0488 66040000 		.4byte	0x466
 1903 048c 09       		.uleb128 0x9
 1904 048d 9B000000 		.4byte	0x9b
 1905 0491 9C040000 		.4byte	0x49c
 1906 0495 0A       		.uleb128 0xa
 1907 0496 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 50


 1908 049a 03       		.byte	0x3
 1909 049b 00       		.byte	0
 1910 049c 13       		.uleb128 0x13
 1911 049d 75010000 		.4byte	.LASF60
 1912 04a1 01       		.byte	0x1
 1913 04a2 1A       		.byte	0x1a
 1914 04a3 AD040000 		.4byte	0x4ad
 1915 04a7 05       		.uleb128 0x5
 1916 04a8 03       		.byte	0x3
 1917 04a9 00000000 		.4byte	ADC_SAR_Seq_countsPer10Volt
 1918 04ad 05       		.uleb128 0x5
 1919 04ae 8C040000 		.4byte	0x48c
 1920 04b2 00       		.byte	0
 1921              		.section	.debug_abbrev,"",%progbits
 1922              	.Ldebug_abbrev0:
 1923 0000 01       		.uleb128 0x1
 1924 0001 11       		.uleb128 0x11
 1925 0002 01       		.byte	0x1
 1926 0003 25       		.uleb128 0x25
 1927 0004 0E       		.uleb128 0xe
 1928 0005 13       		.uleb128 0x13
 1929 0006 0B       		.uleb128 0xb
 1930 0007 03       		.uleb128 0x3
 1931 0008 0E       		.uleb128 0xe
 1932 0009 1B       		.uleb128 0x1b
 1933 000a 0E       		.uleb128 0xe
 1934 000b 55       		.uleb128 0x55
 1935 000c 17       		.uleb128 0x17
 1936 000d 11       		.uleb128 0x11
 1937 000e 01       		.uleb128 0x1
 1938 000f 10       		.uleb128 0x10
 1939 0010 17       		.uleb128 0x17
 1940 0011 00       		.byte	0
 1941 0012 00       		.byte	0
 1942 0013 02       		.uleb128 0x2
 1943 0014 24       		.uleb128 0x24
 1944 0015 00       		.byte	0
 1945 0016 0B       		.uleb128 0xb
 1946 0017 0B       		.uleb128 0xb
 1947 0018 3E       		.uleb128 0x3e
 1948 0019 0B       		.uleb128 0xb
 1949 001a 03       		.uleb128 0x3
 1950 001b 0E       		.uleb128 0xe
 1951 001c 00       		.byte	0
 1952 001d 00       		.byte	0
 1953 001e 03       		.uleb128 0x3
 1954 001f 24       		.uleb128 0x24
 1955 0020 00       		.byte	0
 1956 0021 0B       		.uleb128 0xb
 1957 0022 0B       		.uleb128 0xb
 1958 0023 3E       		.uleb128 0x3e
 1959 0024 0B       		.uleb128 0xb
 1960 0025 03       		.uleb128 0x3
 1961 0026 08       		.uleb128 0x8
 1962 0027 00       		.byte	0
 1963 0028 00       		.byte	0
 1964 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 51


 1965 002a 16       		.uleb128 0x16
 1966 002b 00       		.byte	0
 1967 002c 03       		.uleb128 0x3
 1968 002d 0E       		.uleb128 0xe
 1969 002e 3A       		.uleb128 0x3a
 1970 002f 0B       		.uleb128 0xb
 1971 0030 3B       		.uleb128 0x3b
 1972 0031 05       		.uleb128 0x5
 1973 0032 49       		.uleb128 0x49
 1974 0033 13       		.uleb128 0x13
 1975 0034 00       		.byte	0
 1976 0035 00       		.byte	0
 1977 0036 05       		.uleb128 0x5
 1978 0037 35       		.uleb128 0x35
 1979 0038 00       		.byte	0
 1980 0039 49       		.uleb128 0x49
 1981 003a 13       		.uleb128 0x13
 1982 003b 00       		.byte	0
 1983 003c 00       		.byte	0
 1984 003d 06       		.uleb128 0x6
 1985 003e 2E       		.uleb128 0x2e
 1986 003f 00       		.byte	0
 1987 0040 3F       		.uleb128 0x3f
 1988 0041 19       		.uleb128 0x19
 1989 0042 03       		.uleb128 0x3
 1990 0043 0E       		.uleb128 0xe
 1991 0044 3A       		.uleb128 0x3a
 1992 0045 0B       		.uleb128 0xb
 1993 0046 3B       		.uleb128 0x3b
 1994 0047 0B       		.uleb128 0xb
 1995 0048 27       		.uleb128 0x27
 1996 0049 19       		.uleb128 0x19
 1997 004a 11       		.uleb128 0x11
 1998 004b 01       		.uleb128 0x1
 1999 004c 12       		.uleb128 0x12
 2000 004d 06       		.uleb128 0x6
 2001 004e 40       		.uleb128 0x40
 2002 004f 18       		.uleb128 0x18
 2003 0050 9642     		.uleb128 0x2116
 2004 0052 19       		.uleb128 0x19
 2005 0053 00       		.byte	0
 2006 0054 00       		.byte	0
 2007 0055 07       		.uleb128 0x7
 2008 0056 2E       		.uleb128 0x2e
 2009 0057 01       		.byte	0x1
 2010 0058 3F       		.uleb128 0x3f
 2011 0059 19       		.uleb128 0x19
 2012 005a 03       		.uleb128 0x3
 2013 005b 0E       		.uleb128 0xe
 2014 005c 3A       		.uleb128 0x3a
 2015 005d 0B       		.uleb128 0xb
 2016 005e 3B       		.uleb128 0x3b
 2017 005f 0B       		.uleb128 0xb
 2018 0060 27       		.uleb128 0x27
 2019 0061 19       		.uleb128 0x19
 2020 0062 11       		.uleb128 0x11
 2021 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 52


 2022 0064 12       		.uleb128 0x12
 2023 0065 06       		.uleb128 0x6
 2024 0066 40       		.uleb128 0x40
 2025 0067 18       		.uleb128 0x18
 2026 0068 9642     		.uleb128 0x2116
 2027 006a 19       		.uleb128 0x19
 2028 006b 01       		.uleb128 0x1
 2029 006c 13       		.uleb128 0x13
 2030 006d 00       		.byte	0
 2031 006e 00       		.byte	0
 2032 006f 08       		.uleb128 0x8
 2033 0070 34       		.uleb128 0x34
 2034 0071 00       		.byte	0
 2035 0072 03       		.uleb128 0x3
 2036 0073 0E       		.uleb128 0xe
 2037 0074 3A       		.uleb128 0x3a
 2038 0075 0B       		.uleb128 0xb
 2039 0076 3B       		.uleb128 0x3b
 2040 0077 0B       		.uleb128 0xb
 2041 0078 49       		.uleb128 0x49
 2042 0079 13       		.uleb128 0x13
 2043 007a 02       		.uleb128 0x2
 2044 007b 18       		.uleb128 0x18
 2045 007c 00       		.byte	0
 2046 007d 00       		.byte	0
 2047 007e 09       		.uleb128 0x9
 2048 007f 01       		.uleb128 0x1
 2049 0080 01       		.byte	0x1
 2050 0081 49       		.uleb128 0x49
 2051 0082 13       		.uleb128 0x13
 2052 0083 01       		.uleb128 0x1
 2053 0084 13       		.uleb128 0x13
 2054 0085 00       		.byte	0
 2055 0086 00       		.byte	0
 2056 0087 0A       		.uleb128 0xa
 2057 0088 21       		.uleb128 0x21
 2058 0089 00       		.byte	0
 2059 008a 49       		.uleb128 0x49
 2060 008b 13       		.uleb128 0x13
 2061 008c 2F       		.uleb128 0x2f
 2062 008d 0B       		.uleb128 0xb
 2063 008e 00       		.byte	0
 2064 008f 00       		.byte	0
 2065 0090 0B       		.uleb128 0xb
 2066 0091 26       		.uleb128 0x26
 2067 0092 00       		.byte	0
 2068 0093 49       		.uleb128 0x49
 2069 0094 13       		.uleb128 0x13
 2070 0095 00       		.byte	0
 2071 0096 00       		.byte	0
 2072 0097 0C       		.uleb128 0xc
 2073 0098 2E       		.uleb128 0x2e
 2074 0099 00       		.byte	0
 2075 009a 3F       		.uleb128 0x3f
 2076 009b 19       		.uleb128 0x19
 2077 009c 03       		.uleb128 0x3
 2078 009d 0E       		.uleb128 0xe
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 53


 2079 009e 3A       		.uleb128 0x3a
 2080 009f 0B       		.uleb128 0xb
 2081 00a0 3B       		.uleb128 0x3b
 2082 00a1 05       		.uleb128 0x5
 2083 00a2 27       		.uleb128 0x27
 2084 00a3 19       		.uleb128 0x19
 2085 00a4 11       		.uleb128 0x11
 2086 00a5 01       		.uleb128 0x1
 2087 00a6 12       		.uleb128 0x12
 2088 00a7 06       		.uleb128 0x6
 2089 00a8 40       		.uleb128 0x40
 2090 00a9 18       		.uleb128 0x18
 2091 00aa 9642     		.uleb128 0x2116
 2092 00ac 19       		.uleb128 0x19
 2093 00ad 00       		.byte	0
 2094 00ae 00       		.byte	0
 2095 00af 0D       		.uleb128 0xd
 2096 00b0 2E       		.uleb128 0x2e
 2097 00b1 00       		.byte	0
 2098 00b2 3F       		.uleb128 0x3f
 2099 00b3 19       		.uleb128 0x19
 2100 00b4 03       		.uleb128 0x3
 2101 00b5 0E       		.uleb128 0xe
 2102 00b6 3A       		.uleb128 0x3a
 2103 00b7 0B       		.uleb128 0xb
 2104 00b8 3B       		.uleb128 0x3b
 2105 00b9 05       		.uleb128 0x5
 2106 00ba 27       		.uleb128 0x27
 2107 00bb 19       		.uleb128 0x19
 2108 00bc 11       		.uleb128 0x11
 2109 00bd 01       		.uleb128 0x1
 2110 00be 12       		.uleb128 0x12
 2111 00bf 06       		.uleb128 0x6
 2112 00c0 40       		.uleb128 0x40
 2113 00c1 18       		.uleb128 0x18
 2114 00c2 9742     		.uleb128 0x2117
 2115 00c4 19       		.uleb128 0x19
 2116 00c5 00       		.byte	0
 2117 00c6 00       		.byte	0
 2118 00c7 0E       		.uleb128 0xe
 2119 00c8 2E       		.uleb128 0x2e
 2120 00c9 01       		.byte	0x1
 2121 00ca 3F       		.uleb128 0x3f
 2122 00cb 19       		.uleb128 0x19
 2123 00cc 03       		.uleb128 0x3
 2124 00cd 0E       		.uleb128 0xe
 2125 00ce 3A       		.uleb128 0x3a
 2126 00cf 0B       		.uleb128 0xb
 2127 00d0 3B       		.uleb128 0x3b
 2128 00d1 05       		.uleb128 0x5
 2129 00d2 27       		.uleb128 0x27
 2130 00d3 19       		.uleb128 0x19
 2131 00d4 49       		.uleb128 0x49
 2132 00d5 13       		.uleb128 0x13
 2133 00d6 11       		.uleb128 0x11
 2134 00d7 01       		.uleb128 0x1
 2135 00d8 12       		.uleb128 0x12
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 54


 2136 00d9 06       		.uleb128 0x6
 2137 00da 40       		.uleb128 0x40
 2138 00db 18       		.uleb128 0x18
 2139 00dc 9742     		.uleb128 0x2117
 2140 00de 19       		.uleb128 0x19
 2141 00df 01       		.uleb128 0x1
 2142 00e0 13       		.uleb128 0x13
 2143 00e1 00       		.byte	0
 2144 00e2 00       		.byte	0
 2145 00e3 0F       		.uleb128 0xf
 2146 00e4 05       		.uleb128 0x5
 2147 00e5 00       		.byte	0
 2148 00e6 03       		.uleb128 0x3
 2149 00e7 0E       		.uleb128 0xe
 2150 00e8 3A       		.uleb128 0x3a
 2151 00e9 0B       		.uleb128 0xb
 2152 00ea 3B       		.uleb128 0x3b
 2153 00eb 05       		.uleb128 0x5
 2154 00ec 49       		.uleb128 0x49
 2155 00ed 13       		.uleb128 0x13
 2156 00ee 02       		.uleb128 0x2
 2157 00ef 18       		.uleb128 0x18
 2158 00f0 00       		.byte	0
 2159 00f1 00       		.byte	0
 2160 00f2 10       		.uleb128 0x10
 2161 00f3 34       		.uleb128 0x34
 2162 00f4 00       		.byte	0
 2163 00f5 03       		.uleb128 0x3
 2164 00f6 0E       		.uleb128 0xe
 2165 00f7 3A       		.uleb128 0x3a
 2166 00f8 0B       		.uleb128 0xb
 2167 00f9 3B       		.uleb128 0x3b
 2168 00fa 05       		.uleb128 0x5
 2169 00fb 49       		.uleb128 0x49
 2170 00fc 13       		.uleb128 0x13
 2171 00fd 02       		.uleb128 0x2
 2172 00fe 18       		.uleb128 0x18
 2173 00ff 00       		.byte	0
 2174 0100 00       		.byte	0
 2175 0101 11       		.uleb128 0x11
 2176 0102 2E       		.uleb128 0x2e
 2177 0103 01       		.byte	0x1
 2178 0104 3F       		.uleb128 0x3f
 2179 0105 19       		.uleb128 0x19
 2180 0106 03       		.uleb128 0x3
 2181 0107 0E       		.uleb128 0xe
 2182 0108 3A       		.uleb128 0x3a
 2183 0109 0B       		.uleb128 0xb
 2184 010a 3B       		.uleb128 0x3b
 2185 010b 05       		.uleb128 0x5
 2186 010c 27       		.uleb128 0x27
 2187 010d 19       		.uleb128 0x19
 2188 010e 11       		.uleb128 0x11
 2189 010f 01       		.uleb128 0x1
 2190 0110 12       		.uleb128 0x12
 2191 0111 06       		.uleb128 0x6
 2192 0112 40       		.uleb128 0x40
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 55


 2193 0113 18       		.uleb128 0x18
 2194 0114 9742     		.uleb128 0x2117
 2195 0116 19       		.uleb128 0x19
 2196 0117 01       		.uleb128 0x1
 2197 0118 13       		.uleb128 0x13
 2198 0119 00       		.byte	0
 2199 011a 00       		.byte	0
 2200 011b 12       		.uleb128 0x12
 2201 011c 2E       		.uleb128 0x2e
 2202 011d 01       		.byte	0x1
 2203 011e 3F       		.uleb128 0x3f
 2204 011f 19       		.uleb128 0x19
 2205 0120 03       		.uleb128 0x3
 2206 0121 0E       		.uleb128 0xe
 2207 0122 3A       		.uleb128 0x3a
 2208 0123 0B       		.uleb128 0xb
 2209 0124 3B       		.uleb128 0x3b
 2210 0125 05       		.uleb128 0x5
 2211 0126 27       		.uleb128 0x27
 2212 0127 19       		.uleb128 0x19
 2213 0128 49       		.uleb128 0x49
 2214 0129 13       		.uleb128 0x13
 2215 012a 11       		.uleb128 0x11
 2216 012b 01       		.uleb128 0x1
 2217 012c 12       		.uleb128 0x12
 2218 012d 06       		.uleb128 0x6
 2219 012e 40       		.uleb128 0x40
 2220 012f 18       		.uleb128 0x18
 2221 0130 9642     		.uleb128 0x2116
 2222 0132 19       		.uleb128 0x19
 2223 0133 01       		.uleb128 0x1
 2224 0134 13       		.uleb128 0x13
 2225 0135 00       		.byte	0
 2226 0136 00       		.byte	0
 2227 0137 13       		.uleb128 0x13
 2228 0138 34       		.uleb128 0x34
 2229 0139 00       		.byte	0
 2230 013a 03       		.uleb128 0x3
 2231 013b 0E       		.uleb128 0xe
 2232 013c 3A       		.uleb128 0x3a
 2233 013d 0B       		.uleb128 0xb
 2234 013e 3B       		.uleb128 0x3b
 2235 013f 0B       		.uleb128 0xb
 2236 0140 49       		.uleb128 0x49
 2237 0141 13       		.uleb128 0x13
 2238 0142 3F       		.uleb128 0x3f
 2239 0143 19       		.uleb128 0x19
 2240 0144 02       		.uleb128 0x2
 2241 0145 18       		.uleb128 0x18
 2242 0146 00       		.byte	0
 2243 0147 00       		.byte	0
 2244 0148 00       		.byte	0
 2245              		.section	.debug_aranges,"",%progbits
 2246 0000 AC000000 		.4byte	0xac
 2247 0004 0200     		.2byte	0x2
 2248 0006 00000000 		.4byte	.Ldebug_info0
 2249 000a 04       		.byte	0x4
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 56


 2250 000b 00       		.byte	0
 2251 000c 0000     		.2byte	0
 2252 000e 0000     		.2byte	0
 2253 0010 00000000 		.4byte	.LFB0
 2254 0014 24000000 		.4byte	.LFE0-.LFB0
 2255 0018 00000000 		.4byte	.LFB1
 2256 001c 5C020000 		.4byte	.LFE1-.LFB1
 2257 0020 00000000 		.4byte	.LFB2
 2258 0024 28000000 		.4byte	.LFE2-.LFB2
 2259 0028 00000000 		.4byte	.LFB3
 2260 002c 18000000 		.4byte	.LFE3-.LFB3
 2261 0030 00000000 		.4byte	.LFB4
 2262 0034 1C000000 		.4byte	.LFE4-.LFB4
 2263 0038 00000000 		.4byte	.LFB5
 2264 003c 1C000000 		.4byte	.LFE5-.LFB5
 2265 0040 00000000 		.4byte	.LFB6
 2266 0044 7C000000 		.4byte	.LFE6-.LFB6
 2267 0048 00000000 		.4byte	.LFB7
 2268 004c 44000000 		.4byte	.LFE7-.LFB7
 2269 0050 00000000 		.4byte	.LFB8
 2270 0054 1C000000 		.4byte	.LFE8-.LFB8
 2271 0058 00000000 		.4byte	.LFB9
 2272 005c 1C000000 		.4byte	.LFE9-.LFB9
 2273 0060 00000000 		.4byte	.LFB10
 2274 0064 30000000 		.4byte	.LFE10-.LFB10
 2275 0068 00000000 		.4byte	.LFB11
 2276 006c 2C000000 		.4byte	.LFE11-.LFB11
 2277 0070 00000000 		.4byte	.LFB12
 2278 0074 1C000000 		.4byte	.LFE12-.LFB12
 2279 0078 00000000 		.4byte	.LFB13
 2280 007c 1C000000 		.4byte	.LFE13-.LFB13
 2281 0080 00000000 		.4byte	.LFB14
 2282 0084 24000000 		.4byte	.LFE14-.LFB14
 2283 0088 00000000 		.4byte	.LFB15
 2284 008c 20000000 		.4byte	.LFE15-.LFB15
 2285 0090 00000000 		.4byte	.LFB16
 2286 0094 98000000 		.4byte	.LFE16-.LFB16
 2287 0098 00000000 		.4byte	.LFB17
 2288 009c 84000000 		.4byte	.LFE17-.LFB17
 2289 00a0 00000000 		.4byte	.LFB18
 2290 00a4 74000000 		.4byte	.LFE18-.LFB18
 2291 00a8 00000000 		.4byte	0
 2292 00ac 00000000 		.4byte	0
 2293              		.section	.debug_ranges,"",%progbits
 2294              	.Ldebug_ranges0:
 2295 0000 00000000 		.4byte	.LFB0
 2296 0004 24000000 		.4byte	.LFE0
 2297 0008 00000000 		.4byte	.LFB1
 2298 000c 5C020000 		.4byte	.LFE1
 2299 0010 00000000 		.4byte	.LFB2
 2300 0014 28000000 		.4byte	.LFE2
 2301 0018 00000000 		.4byte	.LFB3
 2302 001c 18000000 		.4byte	.LFE3
 2303 0020 00000000 		.4byte	.LFB4
 2304 0024 1C000000 		.4byte	.LFE4
 2305 0028 00000000 		.4byte	.LFB5
 2306 002c 1C000000 		.4byte	.LFE5
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 57


 2307 0030 00000000 		.4byte	.LFB6
 2308 0034 7C000000 		.4byte	.LFE6
 2309 0038 00000000 		.4byte	.LFB7
 2310 003c 44000000 		.4byte	.LFE7
 2311 0040 00000000 		.4byte	.LFB8
 2312 0044 1C000000 		.4byte	.LFE8
 2313 0048 00000000 		.4byte	.LFB9
 2314 004c 1C000000 		.4byte	.LFE9
 2315 0050 00000000 		.4byte	.LFB10
 2316 0054 30000000 		.4byte	.LFE10
 2317 0058 00000000 		.4byte	.LFB11
 2318 005c 2C000000 		.4byte	.LFE11
 2319 0060 00000000 		.4byte	.LFB12
 2320 0064 1C000000 		.4byte	.LFE12
 2321 0068 00000000 		.4byte	.LFB13
 2322 006c 1C000000 		.4byte	.LFE13
 2323 0070 00000000 		.4byte	.LFB14
 2324 0074 24000000 		.4byte	.LFE14
 2325 0078 00000000 		.4byte	.LFB15
 2326 007c 20000000 		.4byte	.LFE15
 2327 0080 00000000 		.4byte	.LFB16
 2328 0084 98000000 		.4byte	.LFE16
 2329 0088 00000000 		.4byte	.LFB17
 2330 008c 84000000 		.4byte	.LFE17
 2331 0090 00000000 		.4byte	.LFB18
 2332 0094 74000000 		.4byte	.LFE18
 2333 0098 00000000 		.4byte	0
 2334 009c 00000000 		.4byte	0
 2335              		.section	.debug_line,"",%progbits
 2336              	.Ldebug_line0:
 2337 0000 98020000 		.section	.debug_str,"MS",%progbits,1
 2337      02004A00 
 2337      00000201 
 2337      FB0E0D00 
 2337      01010101 
 2338              	.LASF55:
 2339 0000 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_Volts\000"
 2339      5341525F 
 2339      5365715F 
 2339      436F756E 
 2339      7473546F 
 2340              	.LASF10:
 2341 001b 75696E74 		.ascii	"uint16\000"
 2341      313600
 2342              	.LASF39:
 2343 0022 4144435F 		.ascii	"ADC_SAR_Seq_EnableInjection\000"
 2343      5341525F 
 2343      5365715F 
 2343      456E6162 
 2343      6C65496E 
 2344              	.LASF49:
 2345 003e 61646347 		.ascii	"adcGain\000"
 2345      61696E00 
 2346              	.LASF23:
 2347 0046 636F756E 		.ascii	"counts\000"
 2347      747300
 2348              	.LASF48:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 58


 2349 004d 4144435F 		.ascii	"ADC_SAR_Seq_SetGain\000"
 2349      5341525F 
 2349      5365715F 
 2349      53657447 
 2349      61696E00 
 2350              	.LASF31:
 2351 0061 4144435F 		.ascii	"ADC_SAR_Seq_IsEndConversion\000"
 2351      5341525F 
 2351      5365715F 
 2351      4973456E 
 2351      64436F6E 
 2352              	.LASF53:
 2353 007d 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_uVolts\000"
 2353      5341525F 
 2353      5365715F 
 2353      436F756E 
 2353      7473546F 
 2354              	.LASF7:
 2355 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 2355      206C6F6E 
 2355      6720756E 
 2355      7369676E 
 2355      65642069 
 2356              	.LASF50:
 2357 00b0 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_mVolts\000"
 2357      5341525F 
 2357      5365715F 
 2357      436F756E 
 2357      7473546F 
 2358              	.LASF6:
 2359 00cc 6C6F6E67 		.ascii	"long long int\000"
 2359      206C6F6E 
 2359      6720696E 
 2359      7400
 2360              	.LASF0:
 2361 00da 7369676E 		.ascii	"signed char\000"
 2361      65642063 
 2361      68617200 
 2362              	.LASF13:
 2363 00e6 696E7433 		.ascii	"int32\000"
 2363      3200
 2364              	.LASF4:
 2365 00ec 6C6F6E67 		.ascii	"long int\000"
 2365      20696E74 
 2365      00
 2366              	.LASF9:
 2367 00f5 75696E74 		.ascii	"uint8\000"
 2367      3800
 2368              	.LASF16:
 2369 00fb 646F7562 		.ascii	"double\000"
 2369      6C6500
 2370              	.LASF11:
 2371 0102 75696E74 		.ascii	"uint32\000"
 2371      333200
 2372              	.LASF36:
 2373 0109 4144435F 		.ascii	"ADC_SAR_Seq_Init\000"
 2373      5341525F 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 59


 2373      5365715F 
 2373      496E6974 
 2373      00
 2374              	.LASF38:
 2375 011a 6D61736B 		.ascii	"mask\000"
 2375      00
 2376              	.LASF33:
 2377 011f 7265744D 		.ascii	"retMode\000"
 2377      6F646500 
 2378              	.LASF8:
 2379 0127 756E7369 		.ascii	"unsigned int\000"
 2379      676E6564 
 2379      20696E74 
 2379      00
 2380              	.LASF32:
 2381 0134 4144435F 		.ascii	"ADC_SAR_Seq_GetResult16\000"
 2381      5341525F 
 2381      5365715F 
 2381      47657452 
 2381      6573756C 
 2382              	.LASF54:
 2383 014c 75566F6C 		.ascii	"uVolts\000"
 2383      747300
 2384              	.LASF5:
 2385 0153 6C6F6E67 		.ascii	"long unsigned int\000"
 2385      20756E73 
 2385      69676E65 
 2385      6420696E 
 2385      7400
 2386              	.LASF56:
 2387 0165 766F6C74 		.ascii	"volts\000"
 2387      7300
 2388              	.LASF22:
 2389 016b 746D7052 		.ascii	"tmpRegVal\000"
 2389      65675661 
 2389      6C00
 2390              	.LASF60:
 2391 0175 4144435F 		.ascii	"ADC_SAR_Seq_countsPer10Volt\000"
 2391      5341525F 
 2391      5365715F 
 2391      636F756E 
 2391      74735065 
 2392              	.LASF3:
 2393 0191 73686F72 		.ascii	"short unsigned int\000"
 2393      7420756E 
 2393      7369676E 
 2393      65642069 
 2393      6E7400
 2394              	.LASF59:
 2395 01a4 4144435F 		.ascii	"ADC_SAR_Seq_offset\000"
 2395      5341525F 
 2395      5365715F 
 2395      6F666673 
 2395      657400
 2396              	.LASF29:
 2397 01b7 4144435F 		.ascii	"ADC_SAR_Seq_StopConvert\000"
 2397      5341525F 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 60


 2397      5365715F 
 2397      53746F70 
 2397      436F6E76 
 2398              	.LASF52:
 2399 01cf 6D566F6C 		.ascii	"mVolts\000"
 2399      747300
 2400              	.LASF19:
 2401 01d6 72656733 		.ascii	"reg32\000"
 2401      3200
 2402              	.LASF57:
 2403 01dc 4144435F 		.ascii	"ADC_SAR_Seq_channelsConfig\000"
 2403      5341525F 
 2403      5365715F 
 2403      6368616E 
 2403      6E656C73 
 2404              	.LASF14:
 2405 01f7 666C6F61 		.ascii	"float32\000"
 2405      74333200 
 2406              	.LASF20:
 2407 01ff 73697A65 		.ascii	"sizetype\000"
 2407      74797065 
 2407      00
 2408              	.LASF41:
 2409 0208 6C6F774C 		.ascii	"lowLimit\000"
 2409      696D6974 
 2409      00
 2410              	.LASF28:
 2411 0211 4144435F 		.ascii	"ADC_SAR_Seq_StartConvert\000"
 2411      5341525F 
 2411      5365715F 
 2411      53746172 
 2411      74436F6E 
 2412              	.LASF17:
 2413 022a 696E7436 		.ascii	"int64\000"
 2413      3400
 2414              	.LASF15:
 2415 0230 666C6F61 		.ascii	"float\000"
 2415      7400
 2416              	.LASF24:
 2417 0236 4144435F 		.ascii	"ADC_SAR_Seq_InputsPlacement\000"
 2417      5341525F 
 2417      5365715F 
 2417      496E7075 
 2417      7473506C 
 2418              	.LASF43:
 2419 0252 68696768 		.ascii	"highLimit\000"
 2419      4C696D69 
 2419      7400
 2420              	.LASF37:
 2421 025c 4144435F 		.ascii	"ADC_SAR_Seq_SetChanMask\000"
 2421      5341525F 
 2421      5365715F 
 2421      53657443 
 2421      68616E4D 
 2422              	.LASF1:
 2423 0274 756E7369 		.ascii	"unsigned char\000"
 2423      676E6564 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 61


 2423      20636861 
 2423      7200
 2424              	.LASF2:
 2425 0282 73686F72 		.ascii	"short int\000"
 2425      7420696E 
 2425      7400
 2426              	.LASF25:
 2427 028c 4144435F 		.ascii	"ADC_SAR_Seq_Start\000"
 2427      5341525F 
 2427      5365715F 
 2427      53746172 
 2427      7400
 2428              	.LASF45:
 2429 029e 4144435F 		.ascii	"ADC_SAR_Seq_SetSatMask\000"
 2429      5341525F 
 2429      5365715F 
 2429      53657453 
 2429      61744D61 
 2430              	.LASF21:
 2431 02b5 63684E75 		.ascii	"chNum\000"
 2431      6D00
 2432              	.LASF58:
 2433 02bb 4144435F 		.ascii	"ADC_SAR_Seq_initVar\000"
 2433      5341525F 
 2433      5365715F 
 2433      696E6974 
 2433      56617200 
 2434              	.LASF44:
 2435 02cf 4144435F 		.ascii	"ADC_SAR_Seq_SetLimitMask\000"
 2435      5341525F 
 2435      5365715F 
 2435      5365744C 
 2435      696D6974 
 2436              	.LASF34:
 2437 02e8 6368616E 		.ascii	"chan\000"
 2437      00
 2438              	.LASF18:
 2439 02ed 63686172 		.ascii	"char\000"
 2439      00
 2440              	.LASF62:
 2441 02f2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq.c\000"
 2441      6E657261 
 2441      7465645F 
 2441      536F7572 
 2441      63655C50 
 2442              	.LASF47:
 2443 0319 6F666673 		.ascii	"offset\000"
 2443      657400
 2444              	.LASF51:
 2445 0320 61646343 		.ascii	"adcCounts\000"
 2445      6F756E74 
 2445      7300
 2446              	.LASF63:
 2447 032a 433A5C55 		.ascii	"C:\\Users\\kylep\\Box Sync\\Feniex Firmware Files\\"
 2447      73657273 
 2447      5C6B796C 
 2447      65705C42 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 62


 2447      6F782053 
 2448 0358 414C4220 		.ascii	"ALB Cube\\81-00024-01 AI Cube\\81-00024-01.cydsn\000"
 2448      43756265 
 2448      5C38312D 
 2448      30303032 
 2448      342D3031 
 2449              	.LASF27:
 2450 0387 4144435F 		.ascii	"ADC_SAR_Seq_Stop\000"
 2450      5341525F 
 2450      5365715F 
 2450      53746F70 
 2450      00
 2451              	.LASF30:
 2452 0398 73746174 		.ascii	"status\000"
 2452      757300
 2453              	.LASF26:
 2454 039f 4144435F 		.ascii	"ADC_SAR_Seq_Enable\000"
 2454      5341525F 
 2454      5365715F 
 2454      456E6162 
 2454      6C6500
 2455              	.LASF12:
 2456 03b2 696E7431 		.ascii	"int16\000"
 2456      3600
 2457              	.LASF61:
 2458 03b8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2458      4320342E 
 2458      392E3320 
 2458      32303135 
 2458      30333033 
 2459 03eb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2459      20726576 
 2459      6973696F 
 2459      6E203232 
 2459      31323230 
 2460 041e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2460      66756E63 
 2460      74696F6E 
 2460      2D736563 
 2460      74696F6E 
 2461              	.LASF42:
 2462 0446 4144435F 		.ascii	"ADC_SAR_Seq_SetHighLimit\000"
 2462      5341525F 
 2462      5365715F 
 2462      53657448 
 2462      6967684C 
 2463              	.LASF35:
 2464 045f 72657375 		.ascii	"result\000"
 2464      6C7400
 2465              	.LASF40:
 2466 0466 4144435F 		.ascii	"ADC_SAR_Seq_SetLowLimit\000"
 2466      5341525F 
 2466      5365715F 
 2466      5365744C 
 2466      6F774C69 
 2467              	.LASF46:
 2468 047e 4144435F 		.ascii	"ADC_SAR_Seq_SetOffset\000"
ARM GAS  C:\Users\kylep\AppData\Local\Temp\cci0EvUE.s 			page 63


 2468      5341525F 
 2468      5365715F 
 2468      5365744F 
 2468      66667365 
 2469              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
