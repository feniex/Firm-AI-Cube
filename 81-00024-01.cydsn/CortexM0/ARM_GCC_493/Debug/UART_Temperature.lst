ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_Temperature.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_Temperature_ScbModePostEnable,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	UART_Temperature_ScbModePostEnable, %function
  22              	UART_Temperature_ScbModePostEnable:
  23              	.LFB7:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\UART_Temperature.c"
   1:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_Temperature.c **** * File Name: UART_Temperature.c
   3:.\Generated_Source\PSoC4/UART_Temperature.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/UART_Temperature.c **** *
   5:.\Generated_Source\PSoC4/UART_Temperature.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_Temperature.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/UART_Temperature.c **** *
   8:.\Generated_Source\PSoC4/UART_Temperature.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_Temperature.c **** *
  10:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/UART_Temperature.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_Temperature.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_Temperature.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_Temperature.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  17:.\Generated_Source\PSoC4/UART_Temperature.c **** #include "UART_Temperature_PVT.h"
  18:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  19:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/UART_Temperature.c ****     #include "UART_Temperature_I2C_PVT.h"
  21:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  23:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/UART_Temperature.c ****     #include "UART_Temperature_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  27:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_SPI_INC || UART_Temperature_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/UART_Temperature.c ****     #include "UART_Temperature_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_SPI_INC || UART_Temperature_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  31:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  32:.\Generated_Source\PSoC4/UART_Temperature.c **** /***************************************
  33:.\Generated_Source\PSoC4/UART_Temperature.c **** *    Run Time Configuration Vars
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 2


  34:.\Generated_Source\PSoC4/UART_Temperature.c **** ***************************************/
  35:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  36:.\Generated_Source\PSoC4/UART_Temperature.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_scbMode = UART_Temperature_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_scbEnableWake;
  41:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_scbEnableIntr;
  42:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  43:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_mode;
  45:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_acceptAddr;
  46:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  47:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/UART_Temperature.c ****     volatile uint8 * UART_Temperature_rxBuffer;
  49:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8  UART_Temperature_rxDataBits;
  50:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint32 UART_Temperature_rxBufferSize;
  51:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  52:.\Generated_Source\PSoC4/UART_Temperature.c ****     volatile uint8 * UART_Temperature_txBuffer;
  53:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8  UART_Temperature_txDataBits;
  54:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint32 UART_Temperature_txBufferSize;
  55:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  56:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_numberOfAddr;
  58:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint8 UART_Temperature_subAddrSize;
  59:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  61:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  62:.\Generated_Source\PSoC4/UART_Temperature.c **** /***************************************
  63:.\Generated_Source\PSoC4/UART_Temperature.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/UART_Temperature.c **** ***************************************/
  65:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  66:.\Generated_Source\PSoC4/UART_Temperature.c **** uint8 UART_Temperature_initVar = 0u;
  67:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  68:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_IRQ_INTERNAL)
  69:.\Generated_Source\PSoC4/UART_Temperature.c **** #if !defined (CY_REMOVE_UART_Temperature_CUSTOM_INTR_HANDLER)
  70:.\Generated_Source\PSoC4/UART_Temperature.c ****     void (*UART_Temperature_customIntrHandler)(void) = NULL;
  71:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* !defined (CY_REMOVE_UART_Temperature_CUSTOM_INTR_HANDLER) */
  72:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_IRQ_INTERNAL) */
  73:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  74:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  75:.\Generated_Source\PSoC4/UART_Temperature.c **** /***************************************
  76:.\Generated_Source\PSoC4/UART_Temperature.c **** *    Private Function Prototypes
  77:.\Generated_Source\PSoC4/UART_Temperature.c **** ***************************************/
  78:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  79:.\Generated_Source\PSoC4/UART_Temperature.c **** static void UART_Temperature_ScbEnableIntr(void);
  80:.\Generated_Source\PSoC4/UART_Temperature.c **** static void UART_Temperature_ScbModeStop(void);
  81:.\Generated_Source\PSoC4/UART_Temperature.c **** static void UART_Temperature_ScbModePostEnable(void);
  82:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  83:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  84:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_Init
  86:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
  87:.\Generated_Source\PSoC4/UART_Temperature.c **** *
  88:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
  89:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Initializes the SCB component to operate in one of the selected
  90:.\Generated_Source\PSoC4/UART_Temperature.c **** *  configurations: I2C, SPI, UART or EZI2C.
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 3


  91:.\Generated_Source\PSoC4/UART_Temperature.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  92:.\Generated_Source\PSoC4/UART_Temperature.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
  93:.\Generated_Source\PSoC4/UART_Temperature.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  94:.\Generated_Source\PSoC4/UART_Temperature.c **** *
  95:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
  96:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
  97:.\Generated_Source\PSoC4/UART_Temperature.c **** *
  98:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
  99:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 100:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 101:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 102:.\Generated_Source\PSoC4/UART_Temperature.c **** void UART_Temperature_Init(void)
 103:.\Generated_Source\PSoC4/UART_Temperature.c **** {
 104:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
 105:.\Generated_Source\PSoC4/UART_Temperature.c ****     if (UART_Temperature_SCB_MODE_UNCONFIG_RUNTM_CFG)
 106:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 107:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_initVar = 0u;
 108:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 109:.\Generated_Source\PSoC4/UART_Temperature.c ****     else
 110:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 111:.\Generated_Source\PSoC4/UART_Temperature.c ****         /* Initialization was done before this function call */
 112:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 113:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 114:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_I2C_CONST_CFG)
 115:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_I2CInit();
 116:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 117:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_SPI_CONST_CFG)
 118:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_SpiInit();
 119:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 120:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_UART_CONST_CFG)
 121:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_UartInit();
 122:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 123:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_EZI2C_CONST_CFG)
 124:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_EzI2CInit();
 125:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 126:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 127:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 128:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 129:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 130:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 131:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_Enable
 132:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 133:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 134:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 135:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Enables the SCB component operation.
 136:.\Generated_Source\PSoC4/UART_Temperature.c **** *  The SCB configuration should be not changed when the component is enabled.
 137:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Any configuration changes should be made after disabling the component.
 138:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 139:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 140:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 141:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 142:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 143:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 144:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 145:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 146:.\Generated_Source\PSoC4/UART_Temperature.c **** void UART_Temperature_Enable(void)
 147:.\Generated_Source\PSoC4/UART_Temperature.c **** {
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 4


 148:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
 149:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Enable SCB block, only if it is already configured */
 150:.\Generated_Source\PSoC4/UART_Temperature.c ****     if (!UART_Temperature_SCB_MODE_UNCONFIG_RUNTM_CFG)
 151:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 152:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_CTRL_REG |= UART_Temperature_CTRL_ENABLED;
 153:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 154:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_ScbEnableIntr();
 155:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 156:.\Generated_Source\PSoC4/UART_Temperature.c ****         /* Call PostEnable function specific to current operation mode */
 157:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_ScbModePostEnable();
 158:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 159:.\Generated_Source\PSoC4/UART_Temperature.c **** #else
 160:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_CTRL_REG |= UART_Temperature_CTRL_ENABLED;
 161:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 162:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_ScbEnableIntr();
 163:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 164:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Call PostEnable function specific to current operation mode */
 165:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_ScbModePostEnable();
 166:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 167:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 168:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 169:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 170:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_Start
 172:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 173:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 174:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 175:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Invokes SCB_Init() and SCB_Enable().
 176:.\Generated_Source\PSoC4/UART_Temperature.c **** *  After this function call, the component is enabled and ready for operation.
 177:.\Generated_Source\PSoC4/UART_Temperature.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 178:.\Generated_Source\PSoC4/UART_Temperature.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 179:.\Generated_Source\PSoC4/UART_Temperature.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 180:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 181:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 182:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 183:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 184:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 185:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 186:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 187:.\Generated_Source\PSoC4/UART_Temperature.c **** * Global variables:
 188:.\Generated_Source\PSoC4/UART_Temperature.c **** *  UART_Temperature_initVar - used to check initial configuration, modified
 189:.\Generated_Source\PSoC4/UART_Temperature.c **** *  on first function call.
 190:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 191:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/UART_Temperature.c **** void UART_Temperature_Start(void)
 193:.\Generated_Source\PSoC4/UART_Temperature.c **** {
 194:.\Generated_Source\PSoC4/UART_Temperature.c ****     if (0u == UART_Temperature_initVar)
 195:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 196:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_Init();
 197:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_initVar = 1u; /* Component was initialized */
 198:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 199:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 200:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_Enable();
 201:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 202:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 203:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 204:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 5


 205:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_Stop
 206:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 207:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 208:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 209:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Disables the SCB component and its interrupt.
 210:.\Generated_Source\PSoC4/UART_Temperature.c **** *  It also disables all TX interrupt sources so as not to cause an unexpected
 211:.\Generated_Source\PSoC4/UART_Temperature.c **** *  interrupt trigger because after the component is enabled, the TX FIFO 
 212:.\Generated_Source\PSoC4/UART_Temperature.c **** *  is empty.
 213:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 214:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 215:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 216:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 217:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 218:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 219:.\Generated_Source\PSoC4/UART_Temperature.c **** * 
 220:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 221:.\Generated_Source\PSoC4/UART_Temperature.c **** void UART_Temperature_Stop(void)
 222:.\Generated_Source\PSoC4/UART_Temperature.c **** {
 223:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_IRQ_INTERNAL)
 224:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_DisableInt();
 225:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_IRQ_INTERNAL) */
 226:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 227:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Call Stop function specific to current operation mode */
 228:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_ScbModeStop();
 229:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 230:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Disable SCB IP */
 231:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_CTRL_REG &= (uint32) ~UART_Temperature_CTRL_ENABLED;
 232:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 233:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 234:.\Generated_Source\PSoC4/UART_Temperature.c ****     * interrupt trigger because after the component is enabled, the TX FIFO
 235:.\Generated_Source\PSoC4/UART_Temperature.c ****     * is empty.
 236:.\Generated_Source\PSoC4/UART_Temperature.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 237:.\Generated_Source\PSoC4/UART_Temperature.c ****     * sources when they are disabled. This can cause a code lock-up in the
 238:.\Generated_Source\PSoC4/UART_Temperature.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 239:.\Generated_Source\PSoC4/UART_Temperature.c ****     * is disabled.
 240:.\Generated_Source\PSoC4/UART_Temperature.c ****     */
 241:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_SetTxInterruptMode(UART_Temperature_NO_INTR_SOURCES);
 242:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 243:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_IRQ_INTERNAL)
 244:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_ClearPendingInt();
 245:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_IRQ_INTERNAL) */
 246:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 247:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 248:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 249:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_SetRxFifoLevel
 251:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 252:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 253:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 254:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 255:.\Generated_Source\PSoC4/UART_Temperature.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 256:.\Generated_Source\PSoC4/UART_Temperature.c **** *  interrupt request is generated.
 257:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 258:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 259:.\Generated_Source\PSoC4/UART_Temperature.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 260:.\Generated_Source\PSoC4/UART_Temperature.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 261:.\Generated_Source\PSoC4/UART_Temperature.c **** *
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 6


 262:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 263:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 264:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 265:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 266:.\Generated_Source\PSoC4/UART_Temperature.c **** void UART_Temperature_SetRxFifoLevel(uint32 level)
 267:.\Generated_Source\PSoC4/UART_Temperature.c **** {
 268:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint32 rxFifoCtrl;
 269:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 270:.\Generated_Source\PSoC4/UART_Temperature.c ****     rxFifoCtrl = UART_Temperature_RX_FIFO_CTRL_REG;
 271:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 272:.\Generated_Source\PSoC4/UART_Temperature.c ****     rxFifoCtrl &= ((uint32) ~UART_Temperature_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 273:.\Generated_Source\PSoC4/UART_Temperature.c ****     rxFifoCtrl |= ((uint32) (UART_Temperature_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 274:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 275:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_RX_FIFO_CTRL_REG = rxFifoCtrl;
 276:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 277:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 278:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 279:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_SetTxFifoLevel
 281:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 283:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 284:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 285:.\Generated_Source\PSoC4/UART_Temperature.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
 286:.\Generated_Source\PSoC4/UART_Temperature.c **** *  interrupt request is generated.
 287:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 288:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART_Temperature.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 290:.\Generated_Source\PSoC4/UART_Temperature.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 291:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 292:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 293:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 294:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 295:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 296:.\Generated_Source\PSoC4/UART_Temperature.c **** void UART_Temperature_SetTxFifoLevel(uint32 level)
 297:.\Generated_Source\PSoC4/UART_Temperature.c **** {
 298:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint32 txFifoCtrl;
 299:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 300:.\Generated_Source\PSoC4/UART_Temperature.c ****     txFifoCtrl = UART_Temperature_TX_FIFO_CTRL_REG;
 301:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 302:.\Generated_Source\PSoC4/UART_Temperature.c ****     txFifoCtrl &= ((uint32) ~UART_Temperature_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 303:.\Generated_Source\PSoC4/UART_Temperature.c ****     txFifoCtrl |= ((uint32) (UART_Temperature_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 304:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 305:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_TX_FIFO_CTRL_REG = txFifoCtrl;
 306:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 307:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 308:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 309:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_IRQ_INTERNAL)
 310:.\Generated_Source\PSoC4/UART_Temperature.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Function Name: UART_Temperature_SetCustomInterruptHandler
 312:.\Generated_Source\PSoC4/UART_Temperature.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 314:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Summary:
 315:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  Registers a function to be called by the internal interrupt handler.
 316:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  First the function that is registered is called, then the internal interrupt
 317:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  handler performs any operation such as software buffer management functions
 318:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 7


 319:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  the software buffer operations. Only one custom handler is supported, which
 320:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  is the function provided by the most recent call.
 321:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  At the initialization time no custom handler is registered.
 322:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 323:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Parameters:
 324:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  func: Pointer to the function to register.
 325:.\Generated_Source\PSoC4/UART_Temperature.c ****     *        The value NULL indicates to remove the current custom interrupt
 326:.\Generated_Source\PSoC4/UART_Temperature.c ****     *        handler.
 327:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 328:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Return:
 329:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  None
 330:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 331:.\Generated_Source\PSoC4/UART_Temperature.c ****     *******************************************************************************/
 332:.\Generated_Source\PSoC4/UART_Temperature.c ****     void UART_Temperature_SetCustomInterruptHandler(void (*func)(void))
 333:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 334:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if !defined (CY_REMOVE_UART_Temperature_CUSTOM_INTR_HANDLER)
 335:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_customIntrHandler = func; /* Register interrupt handler */
 336:.\Generated_Source\PSoC4/UART_Temperature.c ****     #else
 337:.\Generated_Source\PSoC4/UART_Temperature.c ****         if (NULL != func)
 338:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 339:.\Generated_Source\PSoC4/UART_Temperature.c ****             /* Suppress compiler warning */
 340:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 341:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* !defined (CY_REMOVE_UART_Temperature_CUSTOM_INTR_HANDLER) */
 342:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 343:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_IRQ_INTERNAL) */
 344:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 345:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 346:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 347:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_ScbModeEnableIntr
 348:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 349:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 350:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 351:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Enables an interrupt for a specific mode.
 352:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 353:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 354:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 355:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 356:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 357:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 358:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 359:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/UART_Temperature.c **** static void UART_Temperature_ScbEnableIntr(void)
 361:.\Generated_Source\PSoC4/UART_Temperature.c **** {
 362:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_IRQ_INTERNAL)
 363:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Enable interrupt in NVIC */
 364:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
 365:.\Generated_Source\PSoC4/UART_Temperature.c ****         if (0u != UART_Temperature_scbEnableIntr)
 366:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 367:.\Generated_Source\PSoC4/UART_Temperature.c ****             UART_Temperature_EnableInt();
 368:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 369:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 370:.\Generated_Source\PSoC4/UART_Temperature.c ****     #else
 371:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_EnableInt();
 372:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 373:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 374:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_IRQ_INTERNAL) */
 375:.\Generated_Source\PSoC4/UART_Temperature.c **** }
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 8


 376:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 377:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 378:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 379:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_ScbModePostEnable
 380:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 381:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 382:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 383:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Calls the PostEnable function for a specific operation mode.
 384:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 385:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 386:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 387:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 388:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 389:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 390:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 391:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART_Temperature.c **** static void UART_Temperature_ScbModePostEnable(void)
 393:.\Generated_Source\PSoC4/UART_Temperature.c **** {
  25              		.loc 1 393 0
  26              		.cfi_startproc
  27 0000 08B5     		push	{r3, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 3, -8
  30              		.cfi_offset 14, -4
 394:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
 395:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (!UART_Temperature_CY_SCBIP_V1)
 396:.\Generated_Source\PSoC4/UART_Temperature.c ****     if (UART_Temperature_SCB_MODE_SPI_RUNTM_CFG)
 397:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 398:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SpiPostEnable();
 399:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 400:.\Generated_Source\PSoC4/UART_Temperature.c ****     else if (UART_Temperature_SCB_MODE_UART_RUNTM_CFG)
 401:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 402:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_UartPostEnable();
 403:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 404:.\Generated_Source\PSoC4/UART_Temperature.c ****     else
 405:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 406:.\Generated_Source\PSoC4/UART_Temperature.c ****         /* Unknown mode: do nothing */
 407:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 408:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (!UART_Temperature_CY_SCBIP_V1) */
 409:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 410:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_SPI_CONST_CFG)
 411:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_SpiPostEnable();
 412:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 413:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_UART_CONST_CFG)
 414:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_UartPostEnable();
  31              		.loc 1 414 0
  32 0002 FFF7FEFF 		bl	UART_Temperature_UartPostEnable
  33              	.LVL0:
 415:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 416:.\Generated_Source\PSoC4/UART_Temperature.c **** #else
 417:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Unknown mode: do nothing */
 418:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 419:.\Generated_Source\PSoC4/UART_Temperature.c **** }
  34              		.loc 1 419 0
  35              		@ sp needed
  36 0006 08BD     		pop	{r3, pc}
  37              		.cfi_endproc
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 9


  38              	.LFE7:
  39              		.size	UART_Temperature_ScbModePostEnable, .-UART_Temperature_ScbModePostEnable
  40              		.section	.text.UART_Temperature_ScbModeStop,"ax",%progbits
  41              		.align	2
  42              		.code	16
  43              		.thumb_func
  44              		.type	UART_Temperature_ScbModeStop, %function
  45              	UART_Temperature_ScbModeStop:
  46              	.LFB8:
 420:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 421:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 422:.\Generated_Source\PSoC4/UART_Temperature.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_Temperature.c **** * Function Name: UART_Temperature_ScbModeStop
 424:.\Generated_Source\PSoC4/UART_Temperature.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 426:.\Generated_Source\PSoC4/UART_Temperature.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_Temperature.c **** *  Calls the Stop function for a specific operation mode.
 428:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 429:.\Generated_Source\PSoC4/UART_Temperature.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 431:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 432:.\Generated_Source\PSoC4/UART_Temperature.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_Temperature.c **** *  None
 434:.\Generated_Source\PSoC4/UART_Temperature.c **** *
 435:.\Generated_Source\PSoC4/UART_Temperature.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_Temperature.c **** static void UART_Temperature_ScbModeStop(void)
 437:.\Generated_Source\PSoC4/UART_Temperature.c **** {
  47              		.loc 1 437 0
  48              		.cfi_startproc
  49 0000 08B5     		push	{r3, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 3, -8
  52              		.cfi_offset 14, -4
 438:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
 439:.\Generated_Source\PSoC4/UART_Temperature.c ****     if (UART_Temperature_SCB_MODE_I2C_RUNTM_CFG)
 440:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 441:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_I2CStop();
 442:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 443:.\Generated_Source\PSoC4/UART_Temperature.c ****     else if (UART_Temperature_SCB_MODE_EZI2C_RUNTM_CFG)
 444:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 445:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_EzI2CStop();
 446:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 447:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (!UART_Temperature_CY_SCBIP_V1)
 448:.\Generated_Source\PSoC4/UART_Temperature.c ****     else if (UART_Temperature_SCB_MODE_SPI_RUNTM_CFG)
 449:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 450:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SpiStop();
 451:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 452:.\Generated_Source\PSoC4/UART_Temperature.c ****     else if (UART_Temperature_SCB_MODE_UART_RUNTM_CFG)
 453:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 454:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_UartStop();
 455:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 456:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (!UART_Temperature_CY_SCBIP_V1) */
 457:.\Generated_Source\PSoC4/UART_Temperature.c ****     else
 458:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 459:.\Generated_Source\PSoC4/UART_Temperature.c ****         /* Unknown mode: do nothing */
 460:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 461:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_I2C_CONST_CFG)
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 10


 462:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_I2CStop();
 463:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 464:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_EZI2C_CONST_CFG)
 465:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_EzI2CStop();
 466:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 467:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_SPI_CONST_CFG)
 468:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_SpiStop();
 469:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 470:.\Generated_Source\PSoC4/UART_Temperature.c **** #elif (UART_Temperature_SCB_MODE_UART_CONST_CFG)
 471:.\Generated_Source\PSoC4/UART_Temperature.c ****     UART_Temperature_UartStop();
  53              		.loc 1 471 0
  54 0002 FFF7FEFF 		bl	UART_Temperature_UartStop
  55              	.LVL1:
 472:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 473:.\Generated_Source\PSoC4/UART_Temperature.c **** #else
 474:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Unknown mode: do nothing */
 475:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 476:.\Generated_Source\PSoC4/UART_Temperature.c **** }
  56              		.loc 1 476 0
  57              		@ sp needed
  58 0006 08BD     		pop	{r3, pc}
  59              		.cfi_endproc
  60              	.LFE8:
  61              		.size	UART_Temperature_ScbModeStop, .-UART_Temperature_ScbModeStop
  62              		.section	.text.UART_Temperature_Init,"ax",%progbits
  63              		.align	2
  64              		.global	UART_Temperature_Init
  65              		.code	16
  66              		.thumb_func
  67              		.type	UART_Temperature_Init, %function
  68              	UART_Temperature_Init:
  69              	.LFB0:
 103:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
  70              		.loc 1 103 0
  71              		.cfi_startproc
  72 0000 08B5     		push	{r3, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
 121:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  76              		.loc 1 121 0
  77 0002 FFF7FEFF 		bl	UART_Temperature_UartInit
  78              	.LVL2:
 127:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  79              		.loc 1 127 0
  80              		@ sp needed
  81 0006 08BD     		pop	{r3, pc}
  82              		.cfi_endproc
  83              	.LFE0:
  84              		.size	UART_Temperature_Init, .-UART_Temperature_Init
  85              		.section	.text.UART_Temperature_Enable,"ax",%progbits
  86              		.align	2
  87              		.global	UART_Temperature_Enable
  88              		.code	16
  89              		.thumb_func
  90              		.type	UART_Temperature_Enable, %function
  91              	UART_Temperature_Enable:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 11


  92              	.LFB1:
 147:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
  93              		.loc 1 147 0
  94              		.cfi_startproc
  95 0000 08B5     		push	{r3, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 3, -8
  98              		.cfi_offset 14, -4
 160:.\Generated_Source\PSoC4/UART_Temperature.c **** 
  99              		.loc 1 160 0
 100 0002 044A     		ldr	r2, .L5
 101 0004 1368     		ldr	r3, [r2]
 102 0006 8021     		mov	r1, #128
 103 0008 0906     		lsl	r1, r1, #24
 104 000a 0B43     		orr	r3, r1
 105 000c 1360     		str	r3, [r2]
 165:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 106              		.loc 1 165 0
 107 000e FFF7FEFF 		bl	UART_Temperature_ScbModePostEnable
 108              	.LVL3:
 167:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 109              		.loc 1 167 0
 110              		@ sp needed
 111 0012 08BD     		pop	{r3, pc}
 112              	.L6:
 113              		.align	2
 114              	.L5:
 115 0014 00000740 		.word	1074200576
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	UART_Temperature_Enable, .-UART_Temperature_Enable
 119              		.section	.text.UART_Temperature_Start,"ax",%progbits
 120              		.align	2
 121              		.global	UART_Temperature_Start
 122              		.code	16
 123              		.thumb_func
 124              		.type	UART_Temperature_Start, %function
 125              	UART_Temperature_Start:
 126              	.LFB2:
 193:.\Generated_Source\PSoC4/UART_Temperature.c ****     if (0u == UART_Temperature_initVar)
 127              		.loc 1 193 0
 128              		.cfi_startproc
 129 0000 08B5     		push	{r3, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
 194:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 133              		.loc 1 194 0
 134 0002 064B     		ldr	r3, .L9
 135 0004 1B78     		ldrb	r3, [r3]
 136 0006 002B     		cmp	r3, #0
 137 0008 04D1     		bne	.L8
 196:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_initVar = 1u; /* Component was initialized */
 138              		.loc 1 196 0
 139 000a FFF7FEFF 		bl	UART_Temperature_Init
 140              	.LVL4:
 197:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 12


 141              		.loc 1 197 0
 142 000e 0122     		mov	r2, #1
 143 0010 024B     		ldr	r3, .L9
 144 0012 1A70     		strb	r2, [r3]
 145              	.L8:
 200:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 146              		.loc 1 200 0
 147 0014 FFF7FEFF 		bl	UART_Temperature_Enable
 148              	.LVL5:
 201:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 149              		.loc 1 201 0
 150              		@ sp needed
 151 0018 08BD     		pop	{r3, pc}
 152              	.L10:
 153 001a C046     		.align	2
 154              	.L9:
 155 001c 00000000 		.word	.LANCHOR0
 156              		.cfi_endproc
 157              	.LFE2:
 158              		.size	UART_Temperature_Start, .-UART_Temperature_Start
 159              		.section	.text.UART_Temperature_Stop,"ax",%progbits
 160              		.align	2
 161              		.global	UART_Temperature_Stop
 162              		.code	16
 163              		.thumb_func
 164              		.type	UART_Temperature_Stop, %function
 165              	UART_Temperature_Stop:
 166              	.LFB3:
 222:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_IRQ_INTERNAL)
 167              		.loc 1 222 0
 168              		.cfi_startproc
 169 0000 08B5     		push	{r3, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
 228:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 173              		.loc 1 228 0
 174 0002 FFF7FEFF 		bl	UART_Temperature_ScbModeStop
 175              	.LVL6:
 231:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 176              		.loc 1 231 0
 177 0006 044A     		ldr	r2, .L12
 178 0008 1368     		ldr	r3, [r2]
 179 000a 5B00     		lsl	r3, r3, #1
 180 000c 5B08     		lsr	r3, r3, #1
 181 000e 1360     		str	r3, [r2]
 241:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 182              		.loc 1 241 0
 183 0010 0022     		mov	r2, #0
 184 0012 024B     		ldr	r3, .L12+4
 185 0014 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 186              		.loc 1 246 0
 187              		@ sp needed
 188 0016 08BD     		pop	{r3, pc}
 189              	.L13:
 190              		.align	2
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 13


 191              	.L12:
 192 0018 00000740 		.word	1074200576
 193 001c 880F0740 		.word	1074204552
 194              		.cfi_endproc
 195              	.LFE3:
 196              		.size	UART_Temperature_Stop, .-UART_Temperature_Stop
 197              		.section	.text.UART_Temperature_SetRxFifoLevel,"ax",%progbits
 198              		.align	2
 199              		.global	UART_Temperature_SetRxFifoLevel
 200              		.code	16
 201              		.thumb_func
 202              		.type	UART_Temperature_SetRxFifoLevel, %function
 203              	UART_Temperature_SetRxFifoLevel:
 204              	.LFB4:
 267:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint32 rxFifoCtrl;
 205              		.loc 1 267 0
 206              		.cfi_startproc
 207              	.LVL7:
 270:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 208              		.loc 1 270 0
 209 0000 034A     		ldr	r2, .L15
 210 0002 1368     		ldr	r3, [r2]
 211              	.LVL8:
 272:.\Generated_Source\PSoC4/UART_Temperature.c ****     rxFifoCtrl |= ((uint32) (UART_Temperature_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 212              		.loc 1 272 0
 213 0004 0721     		mov	r1, #7
 214 0006 8B43     		bic	r3, r1
 215              	.LVL9:
 273:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 216              		.loc 1 273 0
 217 0008 0840     		and	r0, r1
 218              	.LVL10:
 219 000a 1843     		orr	r0, r3
 220              	.LVL11:
 275:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 221              		.loc 1 275 0
 222 000c 1060     		str	r0, [r2]
 276:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 223              		.loc 1 276 0
 224              		@ sp needed
 225 000e 7047     		bx	lr
 226              	.L16:
 227              		.align	2
 228              	.L15:
 229 0010 04030740 		.word	1074201348
 230              		.cfi_endproc
 231              	.LFE4:
 232              		.size	UART_Temperature_SetRxFifoLevel, .-UART_Temperature_SetRxFifoLevel
 233              		.section	.text.UART_Temperature_SetTxFifoLevel,"ax",%progbits
 234              		.align	2
 235              		.global	UART_Temperature_SetTxFifoLevel
 236              		.code	16
 237              		.thumb_func
 238              		.type	UART_Temperature_SetTxFifoLevel, %function
 239              	UART_Temperature_SetTxFifoLevel:
 240              	.LFB5:
 297:.\Generated_Source\PSoC4/UART_Temperature.c ****     uint32 txFifoCtrl;
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 14


 241              		.loc 1 297 0
 242              		.cfi_startproc
 243              	.LVL12:
 300:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 244              		.loc 1 300 0
 245 0000 034A     		ldr	r2, .L18
 246 0002 1368     		ldr	r3, [r2]
 247              	.LVL13:
 302:.\Generated_Source\PSoC4/UART_Temperature.c ****     txFifoCtrl |= ((uint32) (UART_Temperature_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 248              		.loc 1 302 0
 249 0004 0721     		mov	r1, #7
 250 0006 8B43     		bic	r3, r1
 251              	.LVL14:
 303:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 252              		.loc 1 303 0
 253 0008 0840     		and	r0, r1
 254              	.LVL15:
 255 000a 1843     		orr	r0, r3
 256              	.LVL16:
 305:.\Generated_Source\PSoC4/UART_Temperature.c **** }
 257              		.loc 1 305 0
 258 000c 1060     		str	r0, [r2]
 306:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 259              		.loc 1 306 0
 260              		@ sp needed
 261 000e 7047     		bx	lr
 262              	.L19:
 263              		.align	2
 264              	.L18:
 265 0010 04020740 		.word	1074201092
 266              		.cfi_endproc
 267              	.LFE5:
 268              		.size	UART_Temperature_SetTxFifoLevel, .-UART_Temperature_SetTxFifoLevel
 269              		.section	.text.UART_Temperature_I2CSlaveNackGeneration,"ax",%progbits
 270              		.align	2
 271              		.global	UART_Temperature_I2CSlaveNackGeneration
 272              		.code	16
 273              		.thumb_func
 274              		.type	UART_Temperature_I2CSlaveNackGeneration, %function
 275              	UART_Temperature_I2CSlaveNackGeneration:
 276              	.LFB9:
 477:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 478:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 479:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG)
 480:.\Generated_Source\PSoC4/UART_Temperature.c ****     /*******************************************************************************
 481:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Function Name: UART_Temperature_SetPins
 482:.\Generated_Source\PSoC4/UART_Temperature.c ****     ********************************************************************************
 483:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 484:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Summary:
 485:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 486:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 487:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  initialization function calls it.
 488:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 489:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  is selected in design time.
 490:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 491:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Parameters:
 492:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  mode:      Mode of SCB operation.
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 15


 493:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 494:.\Generated_Source\PSoC4/UART_Temperature.c ****     *             modes.
 495:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 496:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 497:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Return:
 498:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  None
 499:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 500:.\Generated_Source\PSoC4/UART_Temperature.c ****     *******************************************************************************/
 501:.\Generated_Source\PSoC4/UART_Temperature.c ****     void UART_Temperature_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 502:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 503:.\Generated_Source\PSoC4/UART_Temperature.c ****         uint32 hsiomSel [UART_Temperature_SCB_PINS_NUMBER];
 504:.\Generated_Source\PSoC4/UART_Temperature.c ****         uint32 pinsDm   [UART_Temperature_SCB_PINS_NUMBER];
 505:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 506:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (!UART_Temperature_CY_SCBIP_V1)
 507:.\Generated_Source\PSoC4/UART_Temperature.c ****         uint32 pinsInBuf = 0u;
 508:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (!UART_Temperature_CY_SCBIP_V1) */
 509:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 510:.\Generated_Source\PSoC4/UART_Temperature.c ****         uint32 i;
 511:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 512:.\Generated_Source\PSoC4/UART_Temperature.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 513:.\Generated_Source\PSoC4/UART_Temperature.c ****         for (i = 0u; i < UART_Temperature_SCB_PINS_NUMBER; i++)
 514:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 515:.\Generated_Source\PSoC4/UART_Temperature.c ****             hsiomSel[i]  = UART_Temperature_HSIOM_DEF_SEL;
 516:.\Generated_Source\PSoC4/UART_Temperature.c ****             pinsDm[i]    = UART_Temperature_PIN_DM_ALG_HIZ;
 517:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 518:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 519:.\Generated_Source\PSoC4/UART_Temperature.c ****         if ((UART_Temperature_SCB_MODE_I2C   == mode) ||
 520:.\Generated_Source\PSoC4/UART_Temperature.c ****            (UART_Temperature_SCB_MODE_EZI2C == mode))
 521:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 522:.\Generated_Source\PSoC4/UART_Temperature.c ****             hsiomSel[UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_HSIOM_I2C_SEL;
 523:.\Generated_Source\PSoC4/UART_Temperature.c ****             hsiomSel[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_HSIOM_I2C_SEL;
 524:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 525:.\Generated_Source\PSoC4/UART_Temperature.c ****             pinsDm[UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_PIN_DM_OD_LO;
 526:.\Generated_Source\PSoC4/UART_Temperature.c ****             pinsDm[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_PIN_DM_OD_LO;
 527:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 528:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (!UART_Temperature_CY_SCBIP_V1)
 529:.\Generated_Source\PSoC4/UART_Temperature.c ****         else if (UART_Temperature_SCB_MODE_SPI == mode)
 530:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 531:.\Generated_Source\PSoC4/UART_Temperature.c ****             hsiomSel[UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 532:.\Generated_Source\PSoC4/UART_Temperature.c ****             hsiomSel[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 533:.\Generated_Source\PSoC4/UART_Temperature.c ****             hsiomSel[UART_Temperature_SCLK_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 534:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 535:.\Generated_Source\PSoC4/UART_Temperature.c ****             if (UART_Temperature_SPI_SLAVE == subMode)
 536:.\Generated_Source\PSoC4/UART_Temperature.c ****             {
 537:.\Generated_Source\PSoC4/UART_Temperature.c ****                 /* Slave */
 538:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm[UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_PIN_DM_DIG_HIZ;
 539:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 540:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm[UART_Temperature_SCLK_PIN_INDEX] = UART_Temperature_PIN_DM_DIG_HIZ;
 541:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 542:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_SS0_PIN)
 543:.\Generated_Source\PSoC4/UART_Temperature.c ****                 /* Only SS0 is valid choice for Slave */
 544:.\Generated_Source\PSoC4/UART_Temperature.c ****                 hsiomSel[UART_Temperature_SS0_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 545:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm  [UART_Temperature_SS0_PIN_INDEX] = UART_Temperature_PIN_DM_DIG_HIZ;
 546:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_SS0_PIN) */
 547:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 548:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_TX_SDA_MISO_PIN)
 549:.\Generated_Source\PSoC4/UART_Temperature.c ****                 /* Disable input buffer */
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 16


 550:.\Generated_Source\PSoC4/UART_Temperature.c ****                  pinsInBuf |= UART_Temperature_TX_SDA_MISO_PIN_MASK;
 551:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_TX_SDA_MISO_PIN) */
 552:.\Generated_Source\PSoC4/UART_Temperature.c ****             }
 553:.\Generated_Source\PSoC4/UART_Temperature.c ****             else /* (Master) */
 554:.\Generated_Source\PSoC4/UART_Temperature.c ****             {
 555:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm[UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 556:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_PIN_DM_DIG_HIZ;
 557:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm[UART_Temperature_SCLK_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 559:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_SS0_PIN)
 560:.\Generated_Source\PSoC4/UART_Temperature.c ****                 hsiomSel [UART_Temperature_SS0_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 561:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm   [UART_Temperature_SS0_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 562:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_SS0_PIN_MASK;
 563:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_SS0_PIN) */
 564:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 565:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_SS1_PIN)
 566:.\Generated_Source\PSoC4/UART_Temperature.c ****                 hsiomSel [UART_Temperature_SS1_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 567:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm   [UART_Temperature_SS1_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 568:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_SS1_PIN_MASK;
 569:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_SS1_PIN) */
 570:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 571:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_SS2_PIN)
 572:.\Generated_Source\PSoC4/UART_Temperature.c ****                 hsiomSel [UART_Temperature_SS2_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 573:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm   [UART_Temperature_SS2_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 574:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_SS2_PIN_MASK;
 575:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_SS2_PIN) */
 576:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 577:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_SS3_PIN)
 578:.\Generated_Source\PSoC4/UART_Temperature.c ****                 hsiomSel [UART_Temperature_SS3_PIN_INDEX] = UART_Temperature_HSIOM_SPI_SEL;
 579:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm   [UART_Temperature_SS3_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 580:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_SS3_PIN_MASK;
 581:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_SS3_PIN) */
 582:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 583:.\Generated_Source\PSoC4/UART_Temperature.c ****                 /* Disable input buffers */
 584:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_RX_SCL_MOSI_PIN)
 585:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_RX_SCL_MOSI_PIN_MASK;
 586:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_RX_SCL_MOSI_PIN) */
 587:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 588:.\Generated_Source\PSoC4/UART_Temperature.c ****              #if (UART_Temperature_RX_WAKE_SCL_MOSI_PIN)
 589:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_RX_WAKE_SCL_MOSI_PIN_MASK;
 590:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_RX_WAKE_SCL_MOSI_PIN) */
 591:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 592:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if (UART_Temperature_SCLK_PIN)
 593:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsInBuf |= UART_Temperature_SCLK_PIN_MASK;
 594:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* (UART_Temperature_SCLK_PIN) */
 595:.\Generated_Source\PSoC4/UART_Temperature.c ****             }
 596:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 597:.\Generated_Source\PSoC4/UART_Temperature.c ****         else /* UART */
 598:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 599:.\Generated_Source\PSoC4/UART_Temperature.c ****             if (UART_Temperature_UART_MODE_SMARTCARD == subMode)
 600:.\Generated_Source\PSoC4/UART_Temperature.c ****             {
 601:.\Generated_Source\PSoC4/UART_Temperature.c ****                 /* SmartCard */
 602:.\Generated_Source\PSoC4/UART_Temperature.c ****                 hsiomSel[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_HSIOM_UART_SEL;
 603:.\Generated_Source\PSoC4/UART_Temperature.c ****                 pinsDm  [UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_PIN_DM_OD_LO;
 604:.\Generated_Source\PSoC4/UART_Temperature.c ****             }
 605:.\Generated_Source\PSoC4/UART_Temperature.c ****             else /* Standard or IrDA */
 606:.\Generated_Source\PSoC4/UART_Temperature.c ****             {
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 17


 607:.\Generated_Source\PSoC4/UART_Temperature.c ****                 if (0u != (UART_Temperature_UART_RX_PIN_ENABLE & uartEnableMask))
 608:.\Generated_Source\PSoC4/UART_Temperature.c ****                 {
 609:.\Generated_Source\PSoC4/UART_Temperature.c ****                     hsiomSel[UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_HSIOM_UART_
 610:.\Generated_Source\PSoC4/UART_Temperature.c ****                     pinsDm  [UART_Temperature_RX_SCL_MOSI_PIN_INDEX] = UART_Temperature_PIN_DM_DIG_
 611:.\Generated_Source\PSoC4/UART_Temperature.c ****                 }
 612:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 613:.\Generated_Source\PSoC4/UART_Temperature.c ****                 if (0u != (UART_Temperature_UART_TX_PIN_ENABLE & uartEnableMask))
 614:.\Generated_Source\PSoC4/UART_Temperature.c ****                 {
 615:.\Generated_Source\PSoC4/UART_Temperature.c ****                     hsiomSel[UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_HSIOM_UART_
 616:.\Generated_Source\PSoC4/UART_Temperature.c ****                     pinsDm  [UART_Temperature_TX_SDA_MISO_PIN_INDEX] = UART_Temperature_PIN_DM_STRO
 617:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 618:.\Generated_Source\PSoC4/UART_Temperature.c ****                 #if (UART_Temperature_TX_SDA_MISO_PIN)
 619:.\Generated_Source\PSoC4/UART_Temperature.c ****                      pinsInBuf |= UART_Temperature_TX_SDA_MISO_PIN_MASK;
 620:.\Generated_Source\PSoC4/UART_Temperature.c ****                 #endif /* (UART_Temperature_TX_SDA_MISO_PIN) */
 621:.\Generated_Source\PSoC4/UART_Temperature.c ****                 }
 622:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 623:.\Generated_Source\PSoC4/UART_Temperature.c ****             #if !(UART_Temperature_CY_SCBIP_V0 || UART_Temperature_CY_SCBIP_V1)
 624:.\Generated_Source\PSoC4/UART_Temperature.c ****                 if (UART_Temperature_UART_MODE_STD == subMode)
 625:.\Generated_Source\PSoC4/UART_Temperature.c ****                 {
 626:.\Generated_Source\PSoC4/UART_Temperature.c ****                     if (0u != (UART_Temperature_UART_CTS_PIN_ENABLE & uartEnableMask))
 627:.\Generated_Source\PSoC4/UART_Temperature.c ****                     {
 628:.\Generated_Source\PSoC4/UART_Temperature.c ****                         /* CTS input is multiplexed with SCLK */
 629:.\Generated_Source\PSoC4/UART_Temperature.c ****                         hsiomSel[UART_Temperature_SCLK_PIN_INDEX] = UART_Temperature_HSIOM_UART_SEL
 630:.\Generated_Source\PSoC4/UART_Temperature.c ****                         pinsDm  [UART_Temperature_SCLK_PIN_INDEX] = UART_Temperature_PIN_DM_DIG_HIZ
 631:.\Generated_Source\PSoC4/UART_Temperature.c ****                     }
 632:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 633:.\Generated_Source\PSoC4/UART_Temperature.c ****                     if (0u != (UART_Temperature_UART_RTS_PIN_ENABLE & uartEnableMask))
 634:.\Generated_Source\PSoC4/UART_Temperature.c ****                     {
 635:.\Generated_Source\PSoC4/UART_Temperature.c ****                         /* RTS output is multiplexed with SS0 */
 636:.\Generated_Source\PSoC4/UART_Temperature.c ****                         hsiomSel[UART_Temperature_SS0_PIN_INDEX] = UART_Temperature_HSIOM_UART_SEL;
 637:.\Generated_Source\PSoC4/UART_Temperature.c ****                         pinsDm  [UART_Temperature_SS0_PIN_INDEX] = UART_Temperature_PIN_DM_STRONG;
 638:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 639:.\Generated_Source\PSoC4/UART_Temperature.c ****                     #if (UART_Temperature_SS0_PIN)
 640:.\Generated_Source\PSoC4/UART_Temperature.c ****                         /* Disable input buffer */
 641:.\Generated_Source\PSoC4/UART_Temperature.c ****                         pinsInBuf |= UART_Temperature_SS0_PIN_MASK;
 642:.\Generated_Source\PSoC4/UART_Temperature.c ****                     #endif /* (UART_Temperature_SS0_PIN) */
 643:.\Generated_Source\PSoC4/UART_Temperature.c ****                     }
 644:.\Generated_Source\PSoC4/UART_Temperature.c ****                 }
 645:.\Generated_Source\PSoC4/UART_Temperature.c ****             #endif /* !(UART_Temperature_CY_SCBIP_V0 || UART_Temperature_CY_SCBIP_V1) */
 646:.\Generated_Source\PSoC4/UART_Temperature.c ****             }
 647:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 648:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (!UART_Temperature_CY_SCBIP_V1) */
 649:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 650:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 651:.\Generated_Source\PSoC4/UART_Temperature.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 652:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 653:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_RX_WAKE_SCL_MOSI_PIN)
 654:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_RX_WAKE_SCL_MOSI_HSIOM_REG,
 655:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 656:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_RX_WAKE_SCL_MOSI_HSIOM_POS,
 657:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        hsiomSel[UART_Temperature_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 658:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 659:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 660:.\Generated_Source\PSoC4/UART_Temperature.c ****                                                                pinsDm[UART_Temperature_RX_WAKE_SCL_
 661:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 662:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 663:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_uart_rx_wake_i2c_scl_spi_mosi_MASK,
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 18


 664:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_RX_WAKE_SCL_MOSI_PIN_MASK
 665:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 666:.\Generated_Source\PSoC4/UART_Temperature.c ****          /* Set interrupt on falling edge */
 667:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INCFG_TYPE(UART_Temperature_RX_WAKE_SCL_MOSI_INTCFG_REG,
 668:.\Generated_Source\PSoC4/UART_Temperature.c ****                                         UART_Temperature_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 669:.\Generated_Source\PSoC4/UART_Temperature.c ****                                         UART_Temperature_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 670:.\Generated_Source\PSoC4/UART_Temperature.c ****                                         UART_Temperature_INTCFG_TYPE_FALLING_EDGE);
 671:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_RX_WAKE_SCL_MOSI_PIN) */
 672:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 673:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_RX_SCL_MOSI_PIN)
 674:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_RX_SCL_MOSI_HSIOM_REG,
 675:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_RX_SCL_MOSI_HSIOM_MASK,
 676:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_RX_SCL_MOSI_HSIOM_POS,
 677:.\Generated_Source\PSoC4/UART_Temperature.c ****                                         hsiomSel[UART_Temperature_RX_SCL_MOSI_PIN_INDEX]);
 678:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 679:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_Temperature_RX_S
 680:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 681:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (!UART_Temperature_CY_SCBIP_V1)
 682:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 683:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_uart_rx_i2c_scl_spi_mosi_MASK,
 684:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_RX_SCL_MOSI_PIN_MASK)));
 685:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (!UART_Temperature_CY_SCBIP_V1) */
 686:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_RX_SCL_MOSI_PIN) */
 687:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 688:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_TX_SDA_MISO_PIN)
 689:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_TX_SDA_MISO_HSIOM_REG,
 690:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_TX_SDA_MISO_HSIOM_MASK,
 691:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_TX_SDA_MISO_HSIOM_POS,
 692:.\Generated_Source\PSoC4/UART_Temperature.c ****                                         hsiomSel[UART_Temperature_TX_SDA_MISO_PIN_INDEX]);
 693:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 694:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_Temperature_TX_S
 695:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 696:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (!UART_Temperature_CY_SCBIP_V1)
 697:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_uart_tx_i2c_sda_spi_miso_INP_DIS,
 698:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_uart_tx_i2c_sda_spi_miso_MASK,
 699:.\Generated_Source\PSoC4/UART_Temperature.c ****                                     (0u != (pinsInBuf & UART_Temperature_TX_SDA_MISO_PIN_MASK)));
 700:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (!UART_Temperature_CY_SCBIP_V1) */
 701:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_RX_SCL_MOSI_PIN) */
 702:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 703:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_SCLK_PIN)
 704:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_SCLK_HSIOM_REG,
 705:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SCLK_HSIOM_MASK,
 706:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SCLK_HSIOM_POS,
 707:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        hsiomSel[UART_Temperature_SCLK_PIN_INDEX]);
 708:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 709:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_spi_sclk_SetDriveMode((uint8) pinsDm[UART_Temperature_SCLK_PIN_INDEX]);
 710:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 711:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_spi_sclk_INP_DIS,
 712:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_spi_sclk_MASK,
 713:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_SCLK_PIN_MASK)));
 714:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_SCLK_PIN) */
 715:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 716:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_SS0_PIN)
 717:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_SS0_HSIOM_REG,
 718:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS0_HSIOM_MASK,
 719:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS0_HSIOM_POS,
 720:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        hsiomSel[UART_Temperature_SS0_PIN_INDEX]);
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 19


 721:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 722:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_spi_ss0_SetDriveMode((uint8) pinsDm[UART_Temperature_SS0_PIN_INDEX]);
 723:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 724:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_spi_ss0_INP_DIS,
 725:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_spi_ss0_MASK,
 726:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_SS0_PIN_MASK)));
 727:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_SS0_PIN) */
 728:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 729:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_SS1_PIN)
 730:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_SS1_HSIOM_REG,
 731:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS1_HSIOM_MASK,
 732:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS1_HSIOM_POS,
 733:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        hsiomSel[UART_Temperature_SS1_PIN_INDEX]);
 734:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 735:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_spi_ss1_SetDriveMode((uint8) pinsDm[UART_Temperature_SS1_PIN_INDEX]);
 736:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 737:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_spi_ss1_INP_DIS,
 738:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_spi_ss1_MASK,
 739:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_SS1_PIN_MASK)));
 740:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_SS1_PIN) */
 741:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 742:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_SS2_PIN)
 743:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_SS2_HSIOM_REG,
 744:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS2_HSIOM_MASK,
 745:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS2_HSIOM_POS,
 746:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        hsiomSel[UART_Temperature_SS2_PIN_INDEX]);
 747:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 748:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_spi_ss2_SetDriveMode((uint8) pinsDm[UART_Temperature_SS2_PIN_INDEX]);
 749:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 750:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_spi_ss2_INP_DIS,
 751:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_spi_ss2_MASK,
 752:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_SS2_PIN_MASK)));
 753:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_SS2_PIN) */
 754:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 755:.\Generated_Source\PSoC4/UART_Temperature.c ****     #if (UART_Temperature_SS3_PIN)
 756:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_HSIOM_SEL(UART_Temperature_SS3_HSIOM_REG,
 757:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS3_HSIOM_MASK,
 758:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        UART_Temperature_SS3_HSIOM_POS,
 759:.\Generated_Source\PSoC4/UART_Temperature.c ****                                        hsiomSel[UART_Temperature_SS3_PIN_INDEX]);
 760:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 761:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_spi_ss3_SetDriveMode((uint8) pinsDm[UART_Temperature_SS3_PIN_INDEX]);
 762:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 763:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_SET_INP_DIS(UART_Temperature_spi_ss3_INP_DIS,
 764:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      UART_Temperature_spi_ss3_MASK,
 765:.\Generated_Source\PSoC4/UART_Temperature.c ****                                      (0u != (pinsInBuf & UART_Temperature_SS3_PIN_MASK)));
 766:.\Generated_Source\PSoC4/UART_Temperature.c ****     #endif /* (UART_Temperature_SS3_PIN) */
 767:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 768:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 769:.\Generated_Source\PSoC4/UART_Temperature.c **** #endif /* (UART_Temperature_SCB_MODE_UNCONFIG_CONST_CFG) */
 770:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 771:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 772:.\Generated_Source\PSoC4/UART_Temperature.c **** #if (UART_Temperature_CY_SCBIP_V0 || UART_Temperature_CY_SCBIP_V1)
 773:.\Generated_Source\PSoC4/UART_Temperature.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Function Name: UART_Temperature_I2CSlaveNackGeneration
 775:.\Generated_Source\PSoC4/UART_Temperature.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 777:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Summary:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 20


 778:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  Sets command to generate NACK to the address or data.
 779:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 780:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Parameters:
 781:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  None
 782:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 783:.\Generated_Source\PSoC4/UART_Temperature.c ****     * Return:
 784:.\Generated_Source\PSoC4/UART_Temperature.c ****     *  None
 785:.\Generated_Source\PSoC4/UART_Temperature.c ****     *
 786:.\Generated_Source\PSoC4/UART_Temperature.c ****     *******************************************************************************/
 787:.\Generated_Source\PSoC4/UART_Temperature.c ****     void UART_Temperature_I2CSlaveNackGeneration(void)
 788:.\Generated_Source\PSoC4/UART_Temperature.c ****     {
 277              		.loc 1 788 0
 278              		.cfi_startproc
 789:.\Generated_Source\PSoC4/UART_Temperature.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 790:.\Generated_Source\PSoC4/UART_Temperature.c ****         if ((0u != (UART_Temperature_CTRL_REG & UART_Temperature_CTRL_EC_AM_MODE)) &&
 279              		.loc 1 790 0
 280 0000 0A4B     		ldr	r3, .L22
 281 0002 1B68     		ldr	r3, [r3]
 282 0004 DB05     		lsl	r3, r3, #23
 283 0006 0DD5     		bpl	.L21
 791:.\Generated_Source\PSoC4/UART_Temperature.c ****             (0u == (UART_Temperature_I2C_CTRL_REG & UART_Temperature_I2C_CTRL_S_NOT_READY_ADDR_NACK
 284              		.loc 1 791 0 discriminator 1
 285 0008 094B     		ldr	r3, .L22+4
 286 000a 1B68     		ldr	r3, [r3]
 790:.\Generated_Source\PSoC4/UART_Temperature.c ****             (0u == (UART_Temperature_I2C_CTRL_REG & UART_Temperature_I2C_CTRL_S_NOT_READY_ADDR_NACK
 287              		.loc 1 790 0 discriminator 1
 288 000c 5B04     		lsl	r3, r3, #17
 289 000e 09D4     		bmi	.L21
 792:.\Generated_Source\PSoC4/UART_Temperature.c ****         {
 793:.\Generated_Source\PSoC4/UART_Temperature.c ****             /* Toggle EC_AM before NACK generation */
 794:.\Generated_Source\PSoC4/UART_Temperature.c ****             UART_Temperature_CTRL_REG &= ~UART_Temperature_CTRL_EC_AM_MODE;
 290              		.loc 1 794 0
 291 0010 064B     		ldr	r3, .L22
 292 0012 1968     		ldr	r1, [r3]
 293 0014 074A     		ldr	r2, .L22+8
 294 0016 0A40     		and	r2, r1
 295 0018 1A60     		str	r2, [r3]
 795:.\Generated_Source\PSoC4/UART_Temperature.c ****             UART_Temperature_CTRL_REG |=  UART_Temperature_CTRL_EC_AM_MODE;
 296              		.loc 1 795 0
 297 001a 1A68     		ldr	r2, [r3]
 298 001c 8021     		mov	r1, #128
 299 001e 4900     		lsl	r1, r1, #1
 300 0020 0A43     		orr	r2, r1
 301 0022 1A60     		str	r2, [r3]
 302              	.L21:
 796:.\Generated_Source\PSoC4/UART_Temperature.c ****         }
 797:.\Generated_Source\PSoC4/UART_Temperature.c **** 
 798:.\Generated_Source\PSoC4/UART_Temperature.c ****         UART_Temperature_I2C_SLAVE_CMD_REG = UART_Temperature_I2C_SLAVE_CMD_S_NACK;
 303              		.loc 1 798 0
 304 0024 0222     		mov	r2, #2
 305 0026 044B     		ldr	r3, .L22+12
 306 0028 1A60     		str	r2, [r3]
 799:.\Generated_Source\PSoC4/UART_Temperature.c ****     }
 307              		.loc 1 799 0
 308              		@ sp needed
 309 002a 7047     		bx	lr
 310              	.L23:
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 21


 311              		.align	2
 312              	.L22:
 313 002c 00000740 		.word	1074200576
 314 0030 60000740 		.word	1074200672
 315 0034 FFFEFFFF 		.word	-257
 316 0038 6C000740 		.word	1074200684
 317              		.cfi_endproc
 318              	.LFE9:
 319              		.size	UART_Temperature_I2CSlaveNackGeneration, .-UART_Temperature_I2CSlaveNackGeneration
 320              		.global	UART_Temperature_initVar
 321              		.bss
 322              		.set	.LANCHOR0,. + 0
 323              		.type	UART_Temperature_initVar, %object
 324              		.size	UART_Temperature_initVar, 1
 325              	UART_Temperature_initVar:
 326 0000 00       		.space	1
 327              		.text
 328              	.Letext0:
 329              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 330              		.file 3 ".\\Generated_Source\\PSoC4\\UART_Temperature_SPI_UART_PVT.h"
 331              		.section	.debug_info,"",%progbits
 332              	.Ldebug_info0:
 333 0000 18020000 		.4byte	0x218
 334 0004 0400     		.2byte	0x4
 335 0006 00000000 		.4byte	.Ldebug_abbrev0
 336 000a 04       		.byte	0x4
 337 000b 01       		.uleb128 0x1
 338 000c 53020000 		.4byte	.LASF30
 339 0010 01       		.byte	0x1
 340 0011 2B030000 		.4byte	.LASF31
 341 0015 B5000000 		.4byte	.LASF32
 342 0019 00000000 		.4byte	.Ldebug_ranges0+0
 343 001d 00000000 		.4byte	0
 344 0021 00000000 		.4byte	.Ldebug_line0
 345 0025 02       		.uleb128 0x2
 346 0026 01       		.byte	0x1
 347 0027 06       		.byte	0x6
 348 0028 1F030000 		.4byte	.LASF0
 349 002c 02       		.uleb128 0x2
 350 002d 01       		.byte	0x1
 351 002e 08       		.byte	0x8
 352 002f A7000000 		.4byte	.LASF1
 353 0033 02       		.uleb128 0x2
 354 0034 02       		.byte	0x2
 355 0035 05       		.byte	0x5
 356 0036 E1020000 		.4byte	.LASF2
 357 003a 02       		.uleb128 0x2
 358 003b 02       		.byte	0x2
 359 003c 07       		.byte	0x7
 360 003d 2D000000 		.4byte	.LASF3
 361 0041 02       		.uleb128 0x2
 362 0042 04       		.byte	0x4
 363 0043 05       		.byte	0x5
 364 0044 F6020000 		.4byte	.LASF4
 365 0048 02       		.uleb128 0x2
 366 0049 04       		.byte	0x4
 367 004a 07       		.byte	0x7
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 22


 368 004b 14010000 		.4byte	.LASF5
 369 004f 02       		.uleb128 0x2
 370 0050 08       		.byte	0x8
 371 0051 05       		.byte	0x5
 372 0052 2A020000 		.4byte	.LASF6
 373 0056 02       		.uleb128 0x2
 374 0057 08       		.byte	0x8
 375 0058 07       		.byte	0x7
 376 0059 81010000 		.4byte	.LASF7
 377 005d 03       		.uleb128 0x3
 378 005e 04       		.byte	0x4
 379 005f 05       		.byte	0x5
 380 0060 696E7400 		.ascii	"int\000"
 381 0064 02       		.uleb128 0x2
 382 0065 04       		.byte	0x4
 383 0066 07       		.byte	0x7
 384 0067 74010000 		.4byte	.LASF8
 385 006b 04       		.uleb128 0x4
 386 006c 26010000 		.4byte	.LASF9
 387 0070 02       		.byte	0x2
 388 0071 3801     		.2byte	0x138
 389 0073 2C000000 		.4byte	0x2c
 390 0077 04       		.uleb128 0x4
 391 0078 6D010000 		.4byte	.LASF10
 392 007c 02       		.byte	0x2
 393 007d 3A01     		.2byte	0x13a
 394 007f 48000000 		.4byte	0x48
 395 0083 02       		.uleb128 0x2
 396 0084 04       		.byte	0x4
 397 0085 04       		.byte	0x4
 398 0086 88000000 		.4byte	.LASF11
 399 008a 02       		.uleb128 0x2
 400 008b 08       		.byte	0x8
 401 008c 04       		.byte	0x4
 402 008d 46010000 		.4byte	.LASF12
 403 0091 02       		.uleb128 0x2
 404 0092 01       		.byte	0x1
 405 0093 08       		.byte	0x8
 406 0094 4E020000 		.4byte	.LASF13
 407 0098 04       		.uleb128 0x4
 408 0099 00000000 		.4byte	.LASF14
 409 009d 02       		.byte	0x2
 410 009e E401     		.2byte	0x1e4
 411 00a0 A4000000 		.4byte	0xa4
 412 00a4 05       		.uleb128 0x5
 413 00a5 77000000 		.4byte	0x77
 414 00a9 02       		.uleb128 0x2
 415 00aa 04       		.byte	0x4
 416 00ab 07       		.byte	0x7
 417 00ac 21020000 		.4byte	.LASF15
 418 00b0 06       		.uleb128 0x6
 419 00b1 CF010000 		.4byte	.LASF16
 420 00b5 01       		.byte	0x1
 421 00b6 8801     		.2byte	0x188
 422 00b8 00000000 		.4byte	.LFB7
 423 00bc 08000000 		.4byte	.LFE7-.LFB7
 424 00c0 01       		.uleb128 0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 23


 425 00c1 9C       		.byte	0x9c
 426 00c2 D0000000 		.4byte	0xd0
 427 00c6 07       		.uleb128 0x7
 428 00c7 06000000 		.4byte	.LVL0
 429 00cb 06020000 		.4byte	0x206
 430 00cf 00       		.byte	0
 431 00d0 06       		.uleb128 0x6
 432 00d1 B2010000 		.4byte	.LASF17
 433 00d5 01       		.byte	0x1
 434 00d6 B401     		.2byte	0x1b4
 435 00d8 00000000 		.4byte	.LFB8
 436 00dc 08000000 		.4byte	.LFE8-.LFB8
 437 00e0 01       		.uleb128 0x1
 438 00e1 9C       		.byte	0x9c
 439 00e2 F0000000 		.4byte	0xf0
 440 00e6 07       		.uleb128 0x7
 441 00e7 06000000 		.4byte	.LVL1
 442 00eb 0D020000 		.4byte	0x20d
 443 00ef 00       		.byte	0
 444 00f0 08       		.uleb128 0x8
 445 00f1 38020000 		.4byte	.LASF18
 446 00f5 01       		.byte	0x1
 447 00f6 66       		.byte	0x66
 448 00f7 00000000 		.4byte	.LFB0
 449 00fb 08000000 		.4byte	.LFE0-.LFB0
 450 00ff 01       		.uleb128 0x1
 451 0100 9C       		.byte	0x9c
 452 0101 0F010000 		.4byte	0x10f
 453 0105 07       		.uleb128 0x7
 454 0106 06000000 		.4byte	.LVL2
 455 010a 14020000 		.4byte	0x214
 456 010e 00       		.byte	0
 457 010f 08       		.uleb128 0x8
 458 0110 09020000 		.4byte	.LASF19
 459 0114 01       		.byte	0x1
 460 0115 92       		.byte	0x92
 461 0116 00000000 		.4byte	.LFB1
 462 011a 18000000 		.4byte	.LFE1-.LFB1
 463 011e 01       		.uleb128 0x1
 464 011f 9C       		.byte	0x9c
 465 0120 2E010000 		.4byte	0x12e
 466 0124 07       		.uleb128 0x7
 467 0125 12000000 		.4byte	.LVL3
 468 0129 B0000000 		.4byte	0xb0
 469 012d 00       		.byte	0
 470 012e 08       		.uleb128 0x8
 471 012f F2010000 		.4byte	.LASF20
 472 0133 01       		.byte	0x1
 473 0134 C0       		.byte	0xc0
 474 0135 00000000 		.4byte	.LFB2
 475 0139 20000000 		.4byte	.LFE2-.LFB2
 476 013d 01       		.uleb128 0x1
 477 013e 9C       		.byte	0x9c
 478 013f 56010000 		.4byte	0x156
 479 0143 07       		.uleb128 0x7
 480 0144 0E000000 		.4byte	.LVL4
 481 0148 F0000000 		.4byte	0xf0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 24


 482 014c 07       		.uleb128 0x7
 483 014d 18000000 		.4byte	.LVL5
 484 0151 0F010000 		.4byte	0x10f
 485 0155 00       		.byte	0
 486 0156 08       		.uleb128 0x8
 487 0157 11000000 		.4byte	.LASF21
 488 015b 01       		.byte	0x1
 489 015c DD       		.byte	0xdd
 490 015d 00000000 		.4byte	.LFB3
 491 0161 20000000 		.4byte	.LFE3-.LFB3
 492 0165 01       		.uleb128 0x1
 493 0166 9C       		.byte	0x9c
 494 0167 75010000 		.4byte	0x175
 495 016b 07       		.uleb128 0x7
 496 016c 06000000 		.4byte	.LVL6
 497 0170 D0000000 		.4byte	0xd0
 498 0174 00       		.byte	0
 499 0175 09       		.uleb128 0x9
 500 0176 FF020000 		.4byte	.LASF22
 501 017a 01       		.byte	0x1
 502 017b 0A01     		.2byte	0x10a
 503 017d 00000000 		.4byte	.LFB4
 504 0181 14000000 		.4byte	.LFE4-.LFB4
 505 0185 01       		.uleb128 0x1
 506 0186 9C       		.byte	0x9c
 507 0187 AC010000 		.4byte	0x1ac
 508 018b 0A       		.uleb128 0xa
 509 018c 27000000 		.4byte	.LASF24
 510 0190 01       		.byte	0x1
 511 0191 0A01     		.2byte	0x10a
 512 0193 77000000 		.4byte	0x77
 513 0197 00000000 		.4byte	.LLST0
 514 019b 0B       		.uleb128 0xb
 515 019c EB020000 		.4byte	.LASF25
 516 01a0 01       		.byte	0x1
 517 01a1 0C01     		.2byte	0x10c
 518 01a3 77000000 		.4byte	0x77
 519 01a7 21000000 		.4byte	.LLST1
 520 01ab 00       		.byte	0
 521 01ac 09       		.uleb128 0x9
 522 01ad 68000000 		.4byte	.LASF23
 523 01b1 01       		.byte	0x1
 524 01b2 2801     		.2byte	0x128
 525 01b4 00000000 		.4byte	.LFB5
 526 01b8 14000000 		.4byte	.LFE5-.LFB5
 527 01bc 01       		.uleb128 0x1
 528 01bd 9C       		.byte	0x9c
 529 01be E3010000 		.4byte	0x1e3
 530 01c2 0A       		.uleb128 0xa
 531 01c3 27000000 		.4byte	.LASF24
 532 01c7 01       		.byte	0x1
 533 01c8 2801     		.2byte	0x128
 534 01ca 77000000 		.4byte	0x77
 535 01ce 3F000000 		.4byte	.LLST2
 536 01d2 0B       		.uleb128 0xb
 537 01d3 06000000 		.4byte	.LASF26
 538 01d7 01       		.byte	0x1
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 25


 539 01d8 2A01     		.2byte	0x12a
 540 01da 77000000 		.4byte	0x77
 541 01de 60000000 		.4byte	.LLST3
 542 01e2 00       		.byte	0
 543 01e3 0C       		.uleb128 0xc
 544 01e4 40000000 		.4byte	.LASF33
 545 01e8 01       		.byte	0x1
 546 01e9 1303     		.2byte	0x313
 547 01eb 00000000 		.4byte	.LFB9
 548 01ef 3C000000 		.4byte	.LFE9-.LFB9
 549 01f3 01       		.uleb128 0x1
 550 01f4 9C       		.byte	0x9c
 551 01f5 0D       		.uleb128 0xd
 552 01f6 8E000000 		.4byte	.LASF34
 553 01fa 01       		.byte	0x1
 554 01fb 42       		.byte	0x42
 555 01fc 6B000000 		.4byte	0x6b
 556 0200 05       		.uleb128 0x5
 557 0201 03       		.byte	0x3
 558 0202 00000000 		.4byte	UART_Temperature_initVar
 559 0206 0E       		.uleb128 0xe
 560 0207 4D010000 		.4byte	.LASF27
 561 020b 03       		.byte	0x3
 562 020c 41       		.byte	0x41
 563 020d 0E       		.uleb128 0xe
 564 020e 98010000 		.4byte	.LASF28
 565 0212 03       		.byte	0x3
 566 0213 42       		.byte	0x42
 567 0214 0E       		.uleb128 0xe
 568 0215 2C010000 		.4byte	.LASF29
 569 0219 03       		.byte	0x3
 570 021a 45       		.byte	0x45
 571 021b 00       		.byte	0
 572              		.section	.debug_abbrev,"",%progbits
 573              	.Ldebug_abbrev0:
 574 0000 01       		.uleb128 0x1
 575 0001 11       		.uleb128 0x11
 576 0002 01       		.byte	0x1
 577 0003 25       		.uleb128 0x25
 578 0004 0E       		.uleb128 0xe
 579 0005 13       		.uleb128 0x13
 580 0006 0B       		.uleb128 0xb
 581 0007 03       		.uleb128 0x3
 582 0008 0E       		.uleb128 0xe
 583 0009 1B       		.uleb128 0x1b
 584 000a 0E       		.uleb128 0xe
 585 000b 55       		.uleb128 0x55
 586 000c 17       		.uleb128 0x17
 587 000d 11       		.uleb128 0x11
 588 000e 01       		.uleb128 0x1
 589 000f 10       		.uleb128 0x10
 590 0010 17       		.uleb128 0x17
 591 0011 00       		.byte	0
 592 0012 00       		.byte	0
 593 0013 02       		.uleb128 0x2
 594 0014 24       		.uleb128 0x24
 595 0015 00       		.byte	0
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 26


 596 0016 0B       		.uleb128 0xb
 597 0017 0B       		.uleb128 0xb
 598 0018 3E       		.uleb128 0x3e
 599 0019 0B       		.uleb128 0xb
 600 001a 03       		.uleb128 0x3
 601 001b 0E       		.uleb128 0xe
 602 001c 00       		.byte	0
 603 001d 00       		.byte	0
 604 001e 03       		.uleb128 0x3
 605 001f 24       		.uleb128 0x24
 606 0020 00       		.byte	0
 607 0021 0B       		.uleb128 0xb
 608 0022 0B       		.uleb128 0xb
 609 0023 3E       		.uleb128 0x3e
 610 0024 0B       		.uleb128 0xb
 611 0025 03       		.uleb128 0x3
 612 0026 08       		.uleb128 0x8
 613 0027 00       		.byte	0
 614 0028 00       		.byte	0
 615 0029 04       		.uleb128 0x4
 616 002a 16       		.uleb128 0x16
 617 002b 00       		.byte	0
 618 002c 03       		.uleb128 0x3
 619 002d 0E       		.uleb128 0xe
 620 002e 3A       		.uleb128 0x3a
 621 002f 0B       		.uleb128 0xb
 622 0030 3B       		.uleb128 0x3b
 623 0031 05       		.uleb128 0x5
 624 0032 49       		.uleb128 0x49
 625 0033 13       		.uleb128 0x13
 626 0034 00       		.byte	0
 627 0035 00       		.byte	0
 628 0036 05       		.uleb128 0x5
 629 0037 35       		.uleb128 0x35
 630 0038 00       		.byte	0
 631 0039 49       		.uleb128 0x49
 632 003a 13       		.uleb128 0x13
 633 003b 00       		.byte	0
 634 003c 00       		.byte	0
 635 003d 06       		.uleb128 0x6
 636 003e 2E       		.uleb128 0x2e
 637 003f 01       		.byte	0x1
 638 0040 03       		.uleb128 0x3
 639 0041 0E       		.uleb128 0xe
 640 0042 3A       		.uleb128 0x3a
 641 0043 0B       		.uleb128 0xb
 642 0044 3B       		.uleb128 0x3b
 643 0045 05       		.uleb128 0x5
 644 0046 27       		.uleb128 0x27
 645 0047 19       		.uleb128 0x19
 646 0048 11       		.uleb128 0x11
 647 0049 01       		.uleb128 0x1
 648 004a 12       		.uleb128 0x12
 649 004b 06       		.uleb128 0x6
 650 004c 40       		.uleb128 0x40
 651 004d 18       		.uleb128 0x18
 652 004e 9742     		.uleb128 0x2117
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 27


 653 0050 19       		.uleb128 0x19
 654 0051 01       		.uleb128 0x1
 655 0052 13       		.uleb128 0x13
 656 0053 00       		.byte	0
 657 0054 00       		.byte	0
 658 0055 07       		.uleb128 0x7
 659 0056 898201   		.uleb128 0x4109
 660 0059 00       		.byte	0
 661 005a 11       		.uleb128 0x11
 662 005b 01       		.uleb128 0x1
 663 005c 31       		.uleb128 0x31
 664 005d 13       		.uleb128 0x13
 665 005e 00       		.byte	0
 666 005f 00       		.byte	0
 667 0060 08       		.uleb128 0x8
 668 0061 2E       		.uleb128 0x2e
 669 0062 01       		.byte	0x1
 670 0063 3F       		.uleb128 0x3f
 671 0064 19       		.uleb128 0x19
 672 0065 03       		.uleb128 0x3
 673 0066 0E       		.uleb128 0xe
 674 0067 3A       		.uleb128 0x3a
 675 0068 0B       		.uleb128 0xb
 676 0069 3B       		.uleb128 0x3b
 677 006a 0B       		.uleb128 0xb
 678 006b 27       		.uleb128 0x27
 679 006c 19       		.uleb128 0x19
 680 006d 11       		.uleb128 0x11
 681 006e 01       		.uleb128 0x1
 682 006f 12       		.uleb128 0x12
 683 0070 06       		.uleb128 0x6
 684 0071 40       		.uleb128 0x40
 685 0072 18       		.uleb128 0x18
 686 0073 9742     		.uleb128 0x2117
 687 0075 19       		.uleb128 0x19
 688 0076 01       		.uleb128 0x1
 689 0077 13       		.uleb128 0x13
 690 0078 00       		.byte	0
 691 0079 00       		.byte	0
 692 007a 09       		.uleb128 0x9
 693 007b 2E       		.uleb128 0x2e
 694 007c 01       		.byte	0x1
 695 007d 3F       		.uleb128 0x3f
 696 007e 19       		.uleb128 0x19
 697 007f 03       		.uleb128 0x3
 698 0080 0E       		.uleb128 0xe
 699 0081 3A       		.uleb128 0x3a
 700 0082 0B       		.uleb128 0xb
 701 0083 3B       		.uleb128 0x3b
 702 0084 05       		.uleb128 0x5
 703 0085 27       		.uleb128 0x27
 704 0086 19       		.uleb128 0x19
 705 0087 11       		.uleb128 0x11
 706 0088 01       		.uleb128 0x1
 707 0089 12       		.uleb128 0x12
 708 008a 06       		.uleb128 0x6
 709 008b 40       		.uleb128 0x40
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 28


 710 008c 18       		.uleb128 0x18
 711 008d 9742     		.uleb128 0x2117
 712 008f 19       		.uleb128 0x19
 713 0090 01       		.uleb128 0x1
 714 0091 13       		.uleb128 0x13
 715 0092 00       		.byte	0
 716 0093 00       		.byte	0
 717 0094 0A       		.uleb128 0xa
 718 0095 05       		.uleb128 0x5
 719 0096 00       		.byte	0
 720 0097 03       		.uleb128 0x3
 721 0098 0E       		.uleb128 0xe
 722 0099 3A       		.uleb128 0x3a
 723 009a 0B       		.uleb128 0xb
 724 009b 3B       		.uleb128 0x3b
 725 009c 05       		.uleb128 0x5
 726 009d 49       		.uleb128 0x49
 727 009e 13       		.uleb128 0x13
 728 009f 02       		.uleb128 0x2
 729 00a0 17       		.uleb128 0x17
 730 00a1 00       		.byte	0
 731 00a2 00       		.byte	0
 732 00a3 0B       		.uleb128 0xb
 733 00a4 34       		.uleb128 0x34
 734 00a5 00       		.byte	0
 735 00a6 03       		.uleb128 0x3
 736 00a7 0E       		.uleb128 0xe
 737 00a8 3A       		.uleb128 0x3a
 738 00a9 0B       		.uleb128 0xb
 739 00aa 3B       		.uleb128 0x3b
 740 00ab 05       		.uleb128 0x5
 741 00ac 49       		.uleb128 0x49
 742 00ad 13       		.uleb128 0x13
 743 00ae 02       		.uleb128 0x2
 744 00af 17       		.uleb128 0x17
 745 00b0 00       		.byte	0
 746 00b1 00       		.byte	0
 747 00b2 0C       		.uleb128 0xc
 748 00b3 2E       		.uleb128 0x2e
 749 00b4 00       		.byte	0
 750 00b5 3F       		.uleb128 0x3f
 751 00b6 19       		.uleb128 0x19
 752 00b7 03       		.uleb128 0x3
 753 00b8 0E       		.uleb128 0xe
 754 00b9 3A       		.uleb128 0x3a
 755 00ba 0B       		.uleb128 0xb
 756 00bb 3B       		.uleb128 0x3b
 757 00bc 05       		.uleb128 0x5
 758 00bd 27       		.uleb128 0x27
 759 00be 19       		.uleb128 0x19
 760 00bf 11       		.uleb128 0x11
 761 00c0 01       		.uleb128 0x1
 762 00c1 12       		.uleb128 0x12
 763 00c2 06       		.uleb128 0x6
 764 00c3 40       		.uleb128 0x40
 765 00c4 18       		.uleb128 0x18
 766 00c5 9742     		.uleb128 0x2117
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 29


 767 00c7 19       		.uleb128 0x19
 768 00c8 00       		.byte	0
 769 00c9 00       		.byte	0
 770 00ca 0D       		.uleb128 0xd
 771 00cb 34       		.uleb128 0x34
 772 00cc 00       		.byte	0
 773 00cd 03       		.uleb128 0x3
 774 00ce 0E       		.uleb128 0xe
 775 00cf 3A       		.uleb128 0x3a
 776 00d0 0B       		.uleb128 0xb
 777 00d1 3B       		.uleb128 0x3b
 778 00d2 0B       		.uleb128 0xb
 779 00d3 49       		.uleb128 0x49
 780 00d4 13       		.uleb128 0x13
 781 00d5 3F       		.uleb128 0x3f
 782 00d6 19       		.uleb128 0x19
 783 00d7 02       		.uleb128 0x2
 784 00d8 18       		.uleb128 0x18
 785 00d9 00       		.byte	0
 786 00da 00       		.byte	0
 787 00db 0E       		.uleb128 0xe
 788 00dc 2E       		.uleb128 0x2e
 789 00dd 00       		.byte	0
 790 00de 3F       		.uleb128 0x3f
 791 00df 19       		.uleb128 0x19
 792 00e0 03       		.uleb128 0x3
 793 00e1 0E       		.uleb128 0xe
 794 00e2 3A       		.uleb128 0x3a
 795 00e3 0B       		.uleb128 0xb
 796 00e4 3B       		.uleb128 0x3b
 797 00e5 0B       		.uleb128 0xb
 798 00e6 27       		.uleb128 0x27
 799 00e7 19       		.uleb128 0x19
 800 00e8 3C       		.uleb128 0x3c
 801 00e9 19       		.uleb128 0x19
 802 00ea 00       		.byte	0
 803 00eb 00       		.byte	0
 804 00ec 00       		.byte	0
 805              		.section	.debug_loc,"",%progbits
 806              	.Ldebug_loc0:
 807              	.LLST0:
 808 0000 00000000 		.4byte	.LVL7
 809 0004 0A000000 		.4byte	.LVL10
 810 0008 0100     		.2byte	0x1
 811 000a 50       		.byte	0x50
 812 000b 0A000000 		.4byte	.LVL10
 813 000f 14000000 		.4byte	.LFE4
 814 0013 0400     		.2byte	0x4
 815 0015 F3       		.byte	0xf3
 816 0016 01       		.uleb128 0x1
 817 0017 50       		.byte	0x50
 818 0018 9F       		.byte	0x9f
 819 0019 00000000 		.4byte	0
 820 001d 00000000 		.4byte	0
 821              	.LLST1:
 822 0021 04000000 		.4byte	.LVL8
 823 0025 0C000000 		.4byte	.LVL11
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 30


 824 0029 0100     		.2byte	0x1
 825 002b 53       		.byte	0x53
 826 002c 0C000000 		.4byte	.LVL11
 827 0030 14000000 		.4byte	.LFE4
 828 0034 0100     		.2byte	0x1
 829 0036 50       		.byte	0x50
 830 0037 00000000 		.4byte	0
 831 003b 00000000 		.4byte	0
 832              	.LLST2:
 833 003f 00000000 		.4byte	.LVL12
 834 0043 0A000000 		.4byte	.LVL15
 835 0047 0100     		.2byte	0x1
 836 0049 50       		.byte	0x50
 837 004a 0A000000 		.4byte	.LVL15
 838 004e 14000000 		.4byte	.LFE5
 839 0052 0400     		.2byte	0x4
 840 0054 F3       		.byte	0xf3
 841 0055 01       		.uleb128 0x1
 842 0056 50       		.byte	0x50
 843 0057 9F       		.byte	0x9f
 844 0058 00000000 		.4byte	0
 845 005c 00000000 		.4byte	0
 846              	.LLST3:
 847 0060 04000000 		.4byte	.LVL13
 848 0064 0C000000 		.4byte	.LVL16
 849 0068 0100     		.2byte	0x1
 850 006a 53       		.byte	0x53
 851 006b 0C000000 		.4byte	.LVL16
 852 006f 14000000 		.4byte	.LFE5
 853 0073 0100     		.2byte	0x1
 854 0075 50       		.byte	0x50
 855 0076 00000000 		.4byte	0
 856 007a 00000000 		.4byte	0
 857              		.section	.debug_aranges,"",%progbits
 858 0000 5C000000 		.4byte	0x5c
 859 0004 0200     		.2byte	0x2
 860 0006 00000000 		.4byte	.Ldebug_info0
 861 000a 04       		.byte	0x4
 862 000b 00       		.byte	0
 863 000c 0000     		.2byte	0
 864 000e 0000     		.2byte	0
 865 0010 00000000 		.4byte	.LFB7
 866 0014 08000000 		.4byte	.LFE7-.LFB7
 867 0018 00000000 		.4byte	.LFB8
 868 001c 08000000 		.4byte	.LFE8-.LFB8
 869 0020 00000000 		.4byte	.LFB0
 870 0024 08000000 		.4byte	.LFE0-.LFB0
 871 0028 00000000 		.4byte	.LFB1
 872 002c 18000000 		.4byte	.LFE1-.LFB1
 873 0030 00000000 		.4byte	.LFB2
 874 0034 20000000 		.4byte	.LFE2-.LFB2
 875 0038 00000000 		.4byte	.LFB3
 876 003c 20000000 		.4byte	.LFE3-.LFB3
 877 0040 00000000 		.4byte	.LFB4
 878 0044 14000000 		.4byte	.LFE4-.LFB4
 879 0048 00000000 		.4byte	.LFB5
 880 004c 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 31


 881 0050 00000000 		.4byte	.LFB9
 882 0054 3C000000 		.4byte	.LFE9-.LFB9
 883 0058 00000000 		.4byte	0
 884 005c 00000000 		.4byte	0
 885              		.section	.debug_ranges,"",%progbits
 886              	.Ldebug_ranges0:
 887 0000 00000000 		.4byte	.LFB7
 888 0004 08000000 		.4byte	.LFE7
 889 0008 00000000 		.4byte	.LFB8
 890 000c 08000000 		.4byte	.LFE8
 891 0010 00000000 		.4byte	.LFB0
 892 0014 08000000 		.4byte	.LFE0
 893 0018 00000000 		.4byte	.LFB1
 894 001c 18000000 		.4byte	.LFE1
 895 0020 00000000 		.4byte	.LFB2
 896 0024 20000000 		.4byte	.LFE2
 897 0028 00000000 		.4byte	.LFB3
 898 002c 20000000 		.4byte	.LFE3
 899 0030 00000000 		.4byte	.LFB4
 900 0034 14000000 		.4byte	.LFE4
 901 0038 00000000 		.4byte	.LFB5
 902 003c 14000000 		.4byte	.LFE5
 903 0040 00000000 		.4byte	.LFB9
 904 0044 3C000000 		.4byte	.LFE9
 905 0048 00000000 		.4byte	0
 906 004c 00000000 		.4byte	0
 907              		.section	.debug_line,"",%progbits
 908              	.Ldebug_line0:
 909 0000 54010000 		.section	.debug_str,"MS",%progbits,1
 909      02008900 
 909      00000201 
 909      FB0E0D00 
 909      01010101 
 910              	.LASF14:
 911 0000 72656733 		.ascii	"reg32\000"
 911      3200
 912              	.LASF26:
 913 0006 74784669 		.ascii	"txFifoCtrl\000"
 913      666F4374 
 913      726C00
 914              	.LASF21:
 915 0011 55415254 		.ascii	"UART_Temperature_Stop\000"
 915      5F54656D 
 915      70657261 
 915      74757265 
 915      5F53746F 
 916              	.LASF24:
 917 0027 6C657665 		.ascii	"level\000"
 917      6C00
 918              	.LASF3:
 919 002d 73686F72 		.ascii	"short unsigned int\000"
 919      7420756E 
 919      7369676E 
 919      65642069 
 919      6E7400
 920              	.LASF33:
 921 0040 55415254 		.ascii	"UART_Temperature_I2CSlaveNackGeneration\000"
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 32


 921      5F54656D 
 921      70657261 
 921      74757265 
 921      5F493243 
 922              	.LASF23:
 923 0068 55415254 		.ascii	"UART_Temperature_SetTxFifoLevel\000"
 923      5F54656D 
 923      70657261 
 923      74757265 
 923      5F536574 
 924              	.LASF11:
 925 0088 666C6F61 		.ascii	"float\000"
 925      7400
 926              	.LASF34:
 927 008e 55415254 		.ascii	"UART_Temperature_initVar\000"
 927      5F54656D 
 927      70657261 
 927      74757265 
 927      5F696E69 
 928              	.LASF1:
 929 00a7 756E7369 		.ascii	"unsigned char\000"
 929      676E6564 
 929      20636861 
 929      7200
 930              	.LASF32:
 931 00b5 433A5C55 		.ascii	"C:\\Users\\kylep\\Box Sync\\Feniex Firmware Files\\"
 931      73657273 
 931      5C6B796C 
 931      65705C42 
 931      6F782053 
 932 00e3 414C425C 		.ascii	"ALB\\81-00022-01 ALB LED Driver\\81-00022-01.cydsn\000"
 932      38312D30 
 932      30303232 
 932      2D303120 
 932      414C4220 
 933              	.LASF5:
 934 0114 6C6F6E67 		.ascii	"long unsigned int\000"
 934      20756E73 
 934      69676E65 
 934      6420696E 
 934      7400
 935              	.LASF9:
 936 0126 75696E74 		.ascii	"uint8\000"
 936      3800
 937              	.LASF29:
 938 012c 55415254 		.ascii	"UART_Temperature_UartInit\000"
 938      5F54656D 
 938      70657261 
 938      74757265 
 938      5F556172 
 939              	.LASF12:
 940 0146 646F7562 		.ascii	"double\000"
 940      6C6500
 941              	.LASF27:
 942 014d 55415254 		.ascii	"UART_Temperature_UartPostEnable\000"
 942      5F54656D 
 942      70657261 
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 33


 942      74757265 
 942      5F556172 
 943              	.LASF10:
 944 016d 75696E74 		.ascii	"uint32\000"
 944      333200
 945              	.LASF8:
 946 0174 756E7369 		.ascii	"unsigned int\000"
 946      676E6564 
 946      20696E74 
 946      00
 947              	.LASF7:
 948 0181 6C6F6E67 		.ascii	"long long unsigned int\000"
 948      206C6F6E 
 948      6720756E 
 948      7369676E 
 948      65642069 
 949              	.LASF28:
 950 0198 55415254 		.ascii	"UART_Temperature_UartStop\000"
 950      5F54656D 
 950      70657261 
 950      74757265 
 950      5F556172 
 951              	.LASF17:
 952 01b2 55415254 		.ascii	"UART_Temperature_ScbModeStop\000"
 952      5F54656D 
 952      70657261 
 952      74757265 
 952      5F536362 
 953              	.LASF16:
 954 01cf 55415254 		.ascii	"UART_Temperature_ScbModePostEnable\000"
 954      5F54656D 
 954      70657261 
 954      74757265 
 954      5F536362 
 955              	.LASF20:
 956 01f2 55415254 		.ascii	"UART_Temperature_Start\000"
 956      5F54656D 
 956      70657261 
 956      74757265 
 956      5F537461 
 957              	.LASF19:
 958 0209 55415254 		.ascii	"UART_Temperature_Enable\000"
 958      5F54656D 
 958      70657261 
 958      74757265 
 958      5F456E61 
 959              	.LASF15:
 960 0221 73697A65 		.ascii	"sizetype\000"
 960      74797065 
 960      00
 961              	.LASF6:
 962 022a 6C6F6E67 		.ascii	"long long int\000"
 962      206C6F6E 
 962      6720696E 
 962      7400
 963              	.LASF18:
 964 0238 55415254 		.ascii	"UART_Temperature_Init\000"
ARM GAS  C:\Users\kylep\AppData\Local\Temp\ccnYCoIM.s 			page 34


 964      5F54656D 
 964      70657261 
 964      74757265 
 964      5F496E69 
 965              	.LASF13:
 966 024e 63686172 		.ascii	"char\000"
 966      00
 967              	.LASF30:
 968 0253 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 968      4320342E 
 968      392E3320 
 968      32303135 
 968      30333033 
 969 0286 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 969      20726576 
 969      6973696F 
 969      6E203232 
 969      31323230 
 970 02b9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 970      66756E63 
 970      74696F6E 
 970      2D736563 
 970      74696F6E 
 971              	.LASF2:
 972 02e1 73686F72 		.ascii	"short int\000"
 972      7420696E 
 972      7400
 973              	.LASF25:
 974 02eb 72784669 		.ascii	"rxFifoCtrl\000"
 974      666F4374 
 974      726C00
 975              	.LASF4:
 976 02f6 6C6F6E67 		.ascii	"long int\000"
 976      20696E74 
 976      00
 977              	.LASF22:
 978 02ff 55415254 		.ascii	"UART_Temperature_SetRxFifoLevel\000"
 978      5F54656D 
 978      70657261 
 978      74757265 
 978      5F536574 
 979              	.LASF0:
 980 031f 7369676E 		.ascii	"signed char\000"
 980      65642063 
 980      68617200 
 981              	.LASF31:
 982 032b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_Temperature.c\000"
 982      6E657261 
 982      7465645F 
 982      536F7572 
 982      63655C50 
 983              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
